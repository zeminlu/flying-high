.TH "inc/keyboard_driver.h" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/keyboard_driver.h \- 
.PP
The keyboard driver module.  

.SH SYNOPSIS
.br
.PP
\fC#include 'queue.h'\fP
.br
\fC#include 'io.h'\fP
.br
\fC#include 'types.h'\fP
.br
\fC#include 'ttys.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBkeyboard_driver\fP (void)"
.br
.RI "\fIThis function is the manager of interpretate what key was pressed or released. It controls if the own keyboard buffer is full. The keys that are implemented are:
.IP "\(bu" 2
Letters ( upper and lower case )
.IP "\(bu" 2
Numbers ( If you press SHIFT it will interpretate the symbol associated with this key )
.IP "\(bu" 2
SHIFT buttom
.IP "\(bu" 2
CAPS-LOCK. 
.PP
\fP"
.ti -1c
.RI "void \fBSetKeyState\fP (\fBKeycode\fP scanCode)"
.br
.RI "\fIThis function detect if a control key was pressed and set his internal flag. \fP"
.ti -1c
.RI "int \fBshiftIsPressed\fP (void)"
.br
.RI "\fIReturn TRUE if the shift key was pressed. \fP"
.ti -1c
.RI "int \fBcapsIsPressed\fP (void)"
.br
.RI "\fIReturn TRUE if caps-lock key was pressed. \fP"
.ti -1c
.RI "int \fBctrlIsPressed\fP (void)"
.br
.RI "\fIReturn TRUE if control key was pressed. \fP"
.ti -1c
.RI "int \fBgetRepetition\fP (void)"
.br
.RI "\fIGets the actual repetition interval. \fP"
.ti -1c
.RI "void \fBsetRepetition\fP (int newRep)"
.br
.RI "\fISets the repetition interval. \fP"
.ti -1c
.RI "int \fBcheckKeyboardActivity\fP (void)"
.br
.RI "\fIReturn a 1 if the keyboard routine was called, so the keyboard had interrupted. This funtcion is used by the screensaver, to turn off. \fP"
.ti -1c
.RI "void \fBsetKeyboardActivity\fP (void)"
.br
.RI "\fISet the keyboard activity flag to 0. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The keyboard driver module. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBkeyboard_driver.h\fP.
.SH "Function Documentation"
.PP 
.SS "int capsIsPressed (void)"
.PP
Return TRUE if caps-lock key was pressed. 
.PP
Definition at line 276 of file keyboard_driver.c.
.SS "int checkKeyboardActivity (void)"
.PP
Return a 1 if the keyboard routine was called, so the keyboard had interrupted. This funtcion is used by the screensaver, to turn off. 
.PP
Definition at line 296 of file keyboard_driver.c.
.SS "int ctrlIsPressed (void)"
.PP
Return TRUE if control key was pressed. 
.PP
Definition at line 281 of file keyboard_driver.c.
.SS "int getRepetition (void)"
.PP
Gets the actual repetition interval. \fBReturns:\fP
.RS 4
The actual repetition interval. 
.RE
.PP

.PP
Definition at line 286 of file keyboard_driver.c.
.SS "void keyboard_driver (void)"
.PP
This function is the manager of interpretate what key was pressed or released. It controls if the own keyboard buffer is full. The keys that are implemented are:
.IP "\(bu" 2
Letters ( upper and lower case )
.IP "\(bu" 2
Numbers ( If you press SHIFT it will interpretate the symbol associated with this key )
.IP "\(bu" 2
SHIFT buttom
.IP "\(bu" 2
CAPS-LOCK. 
.PP

.PP
Definition at line 188 of file keyboard_driver.c.
.SS "void setKeyboardActivity (void)"
.PP
Set the keyboard activity flag to 0. 
.PP
Definition at line 306 of file keyboard_driver.c.
.SS "void SetKeyState (\fBKeycode\fP scanCode)"
.PP
This function detect if a control key was pressed and set his internal flag. 
.PP
Definition at line 248 of file keyboard_driver.c.
.SS "void setRepetition (int newRep)"
.PP
Sets the repetition interval. \fBParameters:\fP
.RS 4
\fInewRep\fP The new repetition value. 
.RE
.PP

.PP
Definition at line 291 of file keyboard_driver.c.
.SS "int shiftIsPressed (void)"
.PP
Return TRUE if the shift key was pressed. 
.PP
Definition at line 271 of file keyboard_driver.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
