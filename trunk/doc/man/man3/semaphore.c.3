.TH "src/semaphore.c" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/semaphore.c \- 
.PP
The OS semaphore module.  

.SH SYNOPSIS
.br
.PP
\fC#include 'semaphore.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsemQueue\fP"
.br
.ti -1c
.RI "struct \fBsemaphore\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBsemQueue\fP \fBsemQueue_t\fP"
.br
.ti -1c
.RI "typedef struct \fBsemaphore\fP \fBsemaphore_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinitializeSemaphores\fP ()"
.br
.RI "\fIInitializes all semaphores. \fP"
.ti -1c
.RI "\fBkey_t\fP \fBsem_get\fP (int mode)"
.br
.RI "\fIGets a semaphore for the given mode. \fP"
.ti -1c
.RI "void \fBsem_free\fP (\fBkey_t\fP semid)"
.br
.RI "\fIFrees up the given semid semaphore. \fP"
.ti -1c
.RI "void \fBsem_wait\fP (\fBkey_t\fP sem)"
.br
.RI "\fIWaits for the semaphore to be available.. \fP"
.ti -1c
.RI "void \fBsem_signal\fP (\fBkey_t\fP sem)"
.br
.RI "\fISignals the given semaphore to enable it for other users. \fP"
.ti -1c
.RI "\fBkey_t\fP \fB_sys_sem_get\fP (int mode)"
.br
.ti -1c
.RI "void \fB_sys_sem_free\fP (\fBkey_t\fP semid)"
.br
.ti -1c
.RI "int \fB_sys_sem_wait\fP (\fBkey_t\fP semid)"
.br
.ti -1c
.RI "int \fB_sys_sem_signal\fP (\fBkey_t\fP semid)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The OS semaphore module. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBsemaphore.c\fP.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBsemaphore\fP \fBsemaphore_t\fP"
.SS "typedef struct \fBsemQueue\fP \fBsemQueue_t\fP"
.SH "Function Documentation"
.PP 
.SS "void _sys_sem_free (\fBkey_t\fP semid)"
.PP
Definition at line 119 of file semaphore.c.
.SS "\fBkey_t\fP _sys_sem_get (int mode)"
.PP
Definition at line 94 of file semaphore.c.
.SS "int _sys_sem_signal (\fBkey_t\fP semid)"
.PP
Definition at line 146 of file semaphore.c.
.SS "int _sys_sem_wait (\fBkey_t\fP semid)"
.PP
Definition at line 133 of file semaphore.c.
.SS "void initializeSemaphores ()"
.PP
Initializes all semaphores. 
.PP
Definition at line 59 of file semaphore.c.
.SS "void sem_free (\fBkey_t\fP semid)"
.PP
Frees up the given semid semaphore. \fBParameters:\fP
.RS 4
\fIsemid\fP The id of the semaphore.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_get()\fP 
.RE
.PP

.PP
Definition at line 79 of file semaphore.c.
.SS "\fBkey_t\fP sem_get (int mode)"
.PP
Gets a semaphore for the given mode. \fBParameters:\fP
.RS 4
\fImode\fP Block or Wait modes.
.RE
.PP
\fBReturns:\fP
.RS 4
The key of the semaphore.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_free()\fP 
.RE
.PP

.PP
Definition at line 75 of file semaphore.c.
.SS "void sem_signal (\fBkey_t\fP sem)"
.PP
Signals the given semaphore to enable it for other users. \fBParameters:\fP
.RS 4
\fIsem\fP The semaphore id.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_free()\fP 
.RE
.PP

.PP
Definition at line 89 of file semaphore.c.
.SS "void sem_wait (\fBkey_t\fP sem)"
.PP
Waits for the semaphore to be available.. \fBParameters:\fP
.RS 4
\fIsem\fP The semaphore id.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_signal()\fP 
.RE
.PP

.PP
Definition at line 84 of file semaphore.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
