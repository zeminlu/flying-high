.TH "inc/semaphore.h" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/semaphore.h \- 
.PP
The OS semaphore module.  

.SH SYNOPSIS
.br
.PP
\fC#include 'types.h'\fP
.br
\fC#include 'process.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBBLOCK\fP   0"
.br
.ti -1c
.RI "#define \fBWAIT\fP   1"
.br
.ti -1c
.RI "#define \fBMAX_SEMS\fP   64"
.br
.ti -1c
.RI "#define \fBUNUSED\fP   0"
.br
.ti -1c
.RI "#define \fBUSED\fP   !UNUSED"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBkey_t\fP \fBsem_get\fP (int mode)"
.br
.RI "\fIGets a semaphore for the given mode. \fP"
.ti -1c
.RI "void \fBsem_free\fP (\fBkey_t\fP semid)"
.br
.RI "\fIFrees up the given semid semaphore. \fP"
.ti -1c
.RI "void \fBsem_wait\fP (\fBkey_t\fP sem)"
.br
.RI "\fIWaits for the semaphore to be available.. \fP"
.ti -1c
.RI "void \fBsem_signal\fP (\fBkey_t\fP sem)"
.br
.RI "\fISignals the given semaphore to enable it for other users. \fP"
.ti -1c
.RI "void \fBinitializeSemaphores\fP ()"
.br
.RI "\fIInitializes all semaphores. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The OS semaphore module. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBsemaphore.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define BLOCK   0"
.PP
Definition at line 16 of file semaphore.h.
.SS "#define MAX_SEMS   64"
.PP
Definition at line 18 of file semaphore.h.
.SS "#define UNUSED   0"
.PP
Definition at line 19 of file semaphore.h.
.SS "#define USED   !UNUSED"
.PP
Definition at line 20 of file semaphore.h.
.SS "#define WAIT   1"
.PP
Definition at line 17 of file semaphore.h.
.SH "Function Documentation"
.PP 
.SS "void initializeSemaphores ()"
.PP
Initializes all semaphores. 
.PP
Definition at line 59 of file semaphore.c.
.SS "void sem_free (\fBkey_t\fP semid)"
.PP
Frees up the given semid semaphore. \fBParameters:\fP
.RS 4
\fIsemid\fP The id of the semaphore.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_get()\fP 
.RE
.PP

.PP
Definition at line 79 of file semaphore.c.
.SS "\fBkey_t\fP sem_get (int mode)"
.PP
Gets a semaphore for the given mode. \fBParameters:\fP
.RS 4
\fImode\fP Block or Wait modes.
.RE
.PP
\fBReturns:\fP
.RS 4
The key of the semaphore.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_free()\fP 
.RE
.PP

.PP
Definition at line 75 of file semaphore.c.
.SS "void sem_signal (\fBkey_t\fP sem)"
.PP
Signals the given semaphore to enable it for other users. \fBParameters:\fP
.RS 4
\fIsem\fP The semaphore id.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_free()\fP 
.RE
.PP

.PP
Definition at line 89 of file semaphore.c.
.SS "void sem_wait (\fBkey_t\fP sem)"
.PP
Waits for the semaphore to be available.. \fBParameters:\fP
.RS 4
\fIsem\fP The semaphore id.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsem_signal()\fP 
.RE
.PP

.PP
Definition at line 84 of file semaphore.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
