<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="mem_module_8c" kind="file">
    <compoundname>memModule.c</compoundname>
    <includes local="yes">../inc/memModule.h</includes>
    <incdepgraph>
      <node id="4221">
        <label>src/memModule.c</label>
        <link refid="memModule.c"/>
        <childnode refid="4222" relation="include">
        </childnode>
      </node>
      <node id="4222">
        <label>../inc/memModule.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mem_module_8c_1a512174f10496e6693f434d754dabe473" prot="public" static="yes" mutable="no">
        <type><ref refid="structdirectory__t" kindref="compound">directory_t</ref> *</type>
        <definition>directory_t* kernelDir</definition>
        <argsstring></argsstring>
        <name>kernelDir</name>
        <initializer> (<ref refid="structdirectory__t" kindref="compound">directory_t</ref> *)((char *)(KERNEL_SPACE_SIZE) - sizeof(<ref refid="structdirectory__t" kindref="compound">directory_t</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="13" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem_module_8c_1a77b6a236e121410e54f63245ec70ad24" prot="public" static="yes" mutable="no">
        <type>void *</type>
        <definition>void* kernelHeap</definition>
        <argsstring></argsstring>
        <name>kernelHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="16" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem_module_8c_1a2648ff99bbf45d9a043ea6613250db19" prot="public" static="yes" mutable="no">
        <type><ref refid="structframe__t" kindref="compound">frame_t</ref> *</type>
        <definition>frame_t* kernelFrame</definition>
        <argsstring></argsstring>
        <name>kernelFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="17" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem_module_8c_1abb75a97c25b036fb7699e5357f395664" prot="public" static="yes" mutable="no">
        <type><ref refid="structframes_table__t" kindref="compound">framesTable_t</ref></type>
        <definition>framesTable_t framesTable</definition>
        <argsstring></argsstring>
        <name>framesTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="20" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mem_module_8c_1a4f29a1d3d430da59e5e319adc716fce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* getKernelHeap</definition>
        <argsstring>()</argsstring>
        <name>getKernelHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="28" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="28" bodyend="30"/>
        <referencedby refid="syscall_8c_1a1e28d369e9c25e4ba00e24439a35f92e" compoundref="syscall_8c" startline="110" endline="112">_sys_memmap</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1acc364a2b6a3687b69aa60fd922b178ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadCR3</definition>
        <argsstring>()</argsstring>
        <name>loadCR3</name>
        <briefdescription>
<para>Loads the CR3 into the processor register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="32" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="32" bodyend="36"/>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initPaging</definition>
        <argsstring>()</argsstring>
        <name>initPaging</name>
        <briefdescription>
<para>Initializes the pagination and turns it on. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="38" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="38" bodyend="65"/>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
        <references refid="defs_8h_1a2cac3b477c52f9e0329f6b6d8050aa34" compoundref="defs_8h" startline="223">FIRST_KERNEL_TABLE</references>
        <references refid="mem_module_8h_1a84fa8c324392664110d9da557624b7f2" compoundref="mem_module_8c" startline="143" endline="153">getFrame</references>
        <references refid="mem_module_8h_1a6a84b1dac3ab7d785283bf1b99da1e26" compoundref="mem_module_8c" startline="89" endline="97">initKernelTable</references>
        <references refid="mem_module_8h_1ae7015dddbf16d196ea6e8cc66f2a8d2f" compoundref="mem_module_8c" startline="109" endline="129">initMallocTable</references>
        <references refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" compoundref="mem_module_8c" startline="71" endline="77">initPage</references>
        <references refid="defs_8h_1a23bbe65918fee446b09dc6d3f92e0bac" compoundref="defs_8h" startline="194">KERNEL_TABLES_QTY</references>
        <references refid="mem_module_8h_1acc364a2b6a3687b69aa60fd922b178ef" compoundref="mem_module_8c" startline="32" endline="36">loadCR3</references>
        <references refid="string_8h_1a1dfdc55c5334154353963674598faf1b" compoundref="string_8c" startline="134" endline="139">memset</references>
        <references refid="defs_8h_1a2fe5b1c83a789cd19496b550290a10e2" compoundref="defs_8h" startline="204">PAGE_TABLES_QTY</references>
        <references refid="mem_module_8h_1ad2ea87727da761c9bcb36881d36bef21" compoundref="mem_module_8c" startline="67" endline="69">setKernelHeapPresence</references>
        <references refid="defs_8h_1a7f80e4b553d435a097d07c74652ee861" compoundref="defs_8h" startline="216">TOTAL_FRAMES_QTY</references>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <referencedby refid="kernel_8c_1a6b8fb674fb359f6ae53dc9c4fb7fc6be" compoundref="kernel_8c" startline="15" endline="59">kernel_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1ad2ea87727da761c9bcb36881d36bef21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setKernelHeapPresence</definition>
        <argsstring>(int state)</argsstring>
        <name>setKernelHeapPresence</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets the presence bit of the kernel heap pages according to the given parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>True or False. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="67" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="67" bodyend="69"/>
        <references refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" compoundref="mem_module_8c" startline="131" endline="141">setFramePresence</references>
        <referencedby refid="kernel_depth_8c_1a12d75a01091aa2aef0b93c98f76b859d" compoundref="kernel_depth_8c" startline="23" endline="28">decreaseKernelDepth</referencedby>
        <referencedby refid="kernel_depth_8c_1a60e4cee7d263ef4134a3d83ab35de9c6" compoundref="kernel_depth_8c" startline="14" endline="21">increaseKernelDepth</referencedby>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1ad19841b9dac7eb81c72b63088b80015c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initPage</definition>
        <argsstring>(page_t *page, int isKernel)</argsstring>
        <name>initPage</name>
        <param>
          <type><ref refid="structpage__t" kindref="compound">page_t</ref> *</type>
          <declname>page</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isKernel</declname>
        </param>
        <briefdescription>
<para>Initializes the given page with according permissions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>page</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the page. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isKernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Permissions, True or False. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="71" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="71" bodyend="77"/>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <referencedby refid="mem_module_8c_1a1056bbd0c7d38416134d0645668eaf7d" compoundref="mem_module_8c" startline="79" endline="87">allocKPage</referencedby>
        <referencedby refid="mem_module_8c_1a868034315919cceedc278c3f24d06e04" compoundref="mem_module_8c" startline="99" endline="107">allocMPage</referencedby>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a1056bbd0c7d38416134d0645668eaf7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocKPage</definition>
        <argsstring>(page_t *kernelPage)</argsstring>
        <name>allocKPage</name>
        <param>
          <type><ref refid="structpage__t" kindref="compound">page_t</ref> *</type>
          <declname>kernelPage</declname>
        </param>
        <briefdescription>
<para>Allocs a Page for the kernel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelPage</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the page.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="79" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="79" bodyend="87"/>
        <references refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" compoundref="mem_module_8c" startline="71" endline="77">initPage</references>
        <references refid="defs_8h_1a94ad616f6fdced1466e60a7add259f3c" compoundref="defs_8h" startline="152">KERNEL_SPACE</references>
        <references refid="defs_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" compoundref="defs_8h" startline="179">PAGE_SIZE</references>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <referencedby refid="mem_module_8c_1a6a84b1dac3ab7d785283bf1b99da1e26" compoundref="mem_module_8c" startline="89" endline="97">initKernelTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a6a84b1dac3ab7d785283bf1b99da1e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initKernelTable</definition>
        <argsstring>(pageTable_t kernelTable)</argsstring>
        <name>initKernelTable</name>
        <param>
          <type><ref refid="structpage_table__t" kindref="compound">pageTable_t</ref></type>
          <declname>kernelTable</declname>
        </param>
        <briefdescription>
<para>Initializes a kernel page table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelTable</parametername>
</parameternamelist>
<parameterdescription>
<para>The table to be initialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="89" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="89" bodyend="97"/>
        <references refid="mem_module_8h_1a1056bbd0c7d38416134d0645668eaf7d" compoundref="mem_module_8c" startline="79" endline="87">allocKPage</references>
        <references refid="defs_8h_1a8e5feaae0050abc2f048607651293efe" compoundref="defs_8h" startline="189">PAGE_ENTRIES_PER_TABLE</references>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a868034315919cceedc278c3f24d06e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocMPage</definition>
        <argsstring>(page_t *mallocPage)</argsstring>
        <name>allocMPage</name>
        <param>
          <type><ref refid="structpage__t" kindref="compound">page_t</ref> *</type>
          <declname>mallocPage</declname>
        </param>
        <briefdescription>
<para>Allocs a Page for the malloc section. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mallocPage</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the page.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="99" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="99" bodyend="107"/>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
        <references refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" compoundref="mem_module_8c" startline="71" endline="77">initPage</references>
        <references refid="defs_8h_1aecbd22e428b6301e4e4c34e96af47b19" compoundref="defs_8h" startline="162">MALLOC_SPACE</references>
        <references refid="defs_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" compoundref="defs_8h" startline="179">PAGE_SIZE</references>
        <referencedby refid="mem_module_8c_1ae7015dddbf16d196ea6e8cc66f2a8d2f" compoundref="mem_module_8c" startline="109" endline="129">initMallocTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1ae7015dddbf16d196ea6e8cc66f2a8d2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initMallocTable</definition>
        <argsstring>(pageTable_t mallocTable, int dirIndex)</argsstring>
        <name>initMallocTable</name>
        <param>
          <type><ref refid="structpage_table__t" kindref="compound">pageTable_t</ref></type>
          <declname>mallocTable</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dirIndex</declname>
        </param>
        <briefdescription>
<para>Initializes a malloc page table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Reserved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mallocTable</parametername>
</parameternamelist>
<parameterdescription>
<para>The table to be initialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="109" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="109" bodyend="129"/>
        <references refid="mem_module_8h_1a868034315919cceedc278c3f24d06e04" compoundref="mem_module_8c" startline="99" endline="107">allocMPage</references>
        <references refid="defs_8h_1a8e5feaae0050abc2f048607651293efe" compoundref="defs_8h" startline="189">PAGE_ENTRIES_PER_TABLE</references>
        <references refid="config_8h_1a072812a1bebf92b7d4e6c4321573b9a1" compoundref="config_8h" startline="133">PAGES_PER_FRAME</references>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a33bcef362cae377767738cdcc12fb340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setFramePresence</definition>
        <argsstring>(frame_t *frame, int state)</argsstring>
        <name>setFramePresence</name>
        <param>
          <type><ref refid="structframe__t" kindref="compound">frame_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets the presence bit of the pages from the given frame to the given state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>True or False. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="131" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="131" bodyend="141"/>
        <references refid="config_8h_1a072812a1bebf92b7d4e6c4321573b9a1" compoundref="config_8h" startline="133">PAGES_PER_FRAME</references>
        <referencedby refid="syscall_8c_1a5cd71748fd2bf784c6e4f481809a9b15" compoundref="syscall_8c" startline="160" endline="242">_sys_create_process</referencedby>
        <referencedby refid="sh_memory_8c_1a5c13ce26761ac9aee72a441624bcf571" compoundref="sh_memory_8c" startline="79" endline="122">_sys_shmget</referencedby>
        <referencedby refid="sys_process_8c_1a9aa73aebdb67c7b8551305ec0ebf6087" compoundref="sys_process_8c" startline="93" endline="132">multitasker</referencedby>
        <referencedby refid="mem_module_8c_1ad2ea87727da761c9bcb36881d36bef21" compoundref="mem_module_8c" startline="67" endline="69">setKernelHeapPresence</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a196022e7c97d188da8545ca5575d515a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structframe__t" kindref="compound">frame_t</ref> *</type>
        <definition>frame_t* getFrame</definition>
        <argsstring>()</argsstring>
        <name>getFrame</name>
        <briefdescription>
<para>Gets a free frame. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to a frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="143" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="143" bodyend="153"/>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="defs_8h_1a7f80e4b553d435a097d07c74652ee861" compoundref="defs_8h" startline="216">TOTAL_FRAMES_QTY</references>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <referencedby refid="syscall_8c_1a5cd71748fd2bf784c6e4f481809a9b15" compoundref="syscall_8c" startline="160" endline="242">_sys_create_process</referencedby>
        <referencedby refid="sh_memory_8c_1a5c13ce26761ac9aee72a441624bcf571" compoundref="sh_memory_8c" startline="79" endline="122">_sys_shmget</referencedby>
        <referencedby refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" compoundref="mem_module_8c" startline="38" endline="65">initPaging</referencedby>
      </memberdef>
      <memberdef kind="function" id="mem_module_8c_1a49336e498bea7c6948b194027bfa32d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int freeFrame</definition>
        <argsstring>(frame_t *frame)</argsstring>
        <name>freeFrame</name>
        <param>
          <type><ref refid="structframe__t" kindref="compound">frame_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Frees the given frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the frame.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c" line="155" bodyfile="/Users/Luciano/Desktop/flying-high/src/memModule.c" bodystart="155" bodyend="163"/>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The memory management / paging module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;../inc/memModule.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>System&apos;s<sp/>page<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdirectory__t" kindref="compound" tooltip="The page directory typedef.">directory_t</ref><sp/>*kernelDir<sp/>=<sp/>(<ref refid="structdirectory__t" kindref="compound" tooltip="The page directory typedef.">directory_t</ref><sp/>*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(<ref refid="defs_8h_1a2d85dcc33ff0b653b17210b6861b9030" kindref="member" tooltip="DefineBrief.">KERNEL_SPACE_SIZE</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory__t" kindref="compound" tooltip="The page directory typedef.">directory_t</ref>));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kernel<sp/>Heap<sp/>Definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*kernelHeap;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structframe__t" kindref="compound" tooltip="The page frame struct.">frame_t</ref><sp/>*kernelFrame;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Frame<sp/>table<sp/>Definition*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structframes_table__t" kindref="compound" tooltip="The frames table typedef.">framesTable_t</ref><sp/>framesTable;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Bitmap<sp/>Implementation</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*static<sp/>usedMemBitmap_t<sp/>usedMemory;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="syscall_8c_1a4f29a1d3d430da59e5e319adc716fce6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mem_module_8c_1a4f29a1d3d430da59e5e319adc716fce6" kindref="member">getKernelHeap</ref>(){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelHeap;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="mem_module_8c_1acc364a2b6a3687b69aa60fd922b178ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1acc364a2b6a3687b69aa60fd922b178ef" kindref="member" tooltip="Loads the CR3 into the processor register.">loadCR3</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%0,<sp/>%%cr3&quot;</highlight><highlight class="normal">::<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">(&amp;(kernelDir-&gt;pageDirectory)));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="mem_module_8c_1a7a9e898c2f9b5aae935f0668c962d02f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a7a9e898c2f9b5aae935f0668c962d02f" kindref="member" tooltip="Initializes the pagination and turns it on.">initPaging</ref>(){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>cr0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a1dfdc55c5334154353963674598faf1b" kindref="member" tooltip="The memset() function sets n bytes from the memory area dest with the value of c...">memset</ref>(kernelDir,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory__t" kindref="compound" tooltip="The page directory typedef.">directory_t</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a1dfdc55c5334154353963674598faf1b" kindref="member" tooltip="The memset() function sets n bytes from the memory area dest with the value of c...">memset</ref>(framesTable,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structframe__t" kindref="compound" tooltip="The page frame struct.">frame_t</ref>)<sp/>*<sp/><ref refid="defs_8h_1a7f80e4b553d435a097d07c74652ee861" kindref="member" tooltip="DefineBrief.">TOTAL_FRAMES_QTY</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="defs_8h_1a2cac3b477c52f9e0329f6b6d8050aa34" kindref="member" tooltip="DefineBrief.">FIRST_KERNEL_TABLE</ref><sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="defs_8h_1a23bbe65918fee446b09dc6d3f92e0bac" kindref="member" tooltip="DefineBrief.">KERNEL_TABLES_QTY</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a6a84b1dac3ab7d785283bf1b99da1e26" kindref="member" tooltip="Initializes a kernel page table.">initKernelTable</ref>(kernelDir-&gt;tables[i]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" kindref="member" tooltip="Initializes the given page with according permissions.">initPage</ref>(&amp;(kernelDir-&gt;pageDirectory[i]),<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelDir-&gt;pageDirectory[i].address<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)(&amp;(kernelDir-&gt;tables[i])))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="defs_8h_1a2fe5b1c83a789cd19496b550290a10e2" kindref="member" tooltip="DefineBrief.">PAGE_TABLES_QTY</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ae7015dddbf16d196ea6e8cc66f2a8d2f" kindref="member" tooltip="Initializes a malloc page table.">initMallocTable</ref>(kernelDir-&gt;tables[i],<sp/>i);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" kindref="member" tooltip="Initializes the given page with according permissions.">initPage</ref>(&amp;(kernelDir-&gt;pageDirectory[i]),<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelDir-&gt;pageDirectory[i].address<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)(&amp;(kernelDir-&gt;tables[i])))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1acc364a2b6a3687b69aa60fd922b178ef" kindref="member" tooltip="Loads the CR3 into the processor register.">loadCR3</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%cr0,<sp/>%0&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal">(cr0));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr0<sp/>|=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%0,<sp/>%%cr0&quot;</highlight><highlight class="normal">::<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">(cr0));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelFrame<sp/>=<sp/><ref refid="mem_module_8h_1a84fa8c324392664110d9da557624b7f2" kindref="member" tooltip="Gets a free frame.">getFrame</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelHeap<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)kernelFrame-&gt;address;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ad2ea87727da761c9bcb36881d36bef21" kindref="member" tooltip="Sets the presence bit of the kernel heap pages according to the given parameter.">setKernelHeapPresence</ref>(<ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="mem_module_8c_1ad2ea87727da761c9bcb36881d36bef21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1ad2ea87727da761c9bcb36881d36bef21" kindref="member" tooltip="Sets the presence bit of the kernel heap pages according to the given parameter.">setKernelHeapPresence</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(kernelFrame,<sp/>state);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="mem_module_8c_1ad19841b9dac7eb81c72b63088b80015c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" kindref="member" tooltip="Initializes the given page with according permissions.">initPage</ref>(<ref refid="structpage__t" kindref="compound" tooltip="The paging page struct.">page_t</ref><sp/>*<ref refid="structpage" kindref="compound">page</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isKernel){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page-&gt;present<sp/>=<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page-&gt;writeable<sp/>=<sp/>!isKernel;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page-&gt;user<sp/>=<sp/>isKernel;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="mem_module_8c_1a1056bbd0c7d38416134d0645668eaf7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a1056bbd0c7d38416134d0645668eaf7d" kindref="member" tooltip="Allocs a Page for the kernel.">allocKPage</ref>(<ref refid="structpage__t" kindref="compound" tooltip="The paging page struct.">page_t</ref><sp/>*kernelPage){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add<sp/>=<sp/><ref refid="defs_8h_1a94ad616f6fdced1466e60a7add259f3c" kindref="member" tooltip="DefineBrief.">KERNEL_SPACE</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" kindref="member" tooltip="Initializes the given page with according permissions.">initPage</ref>(kernelPage,<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelPage-&gt;address<sp/>=<sp/>add<sp/>&gt;&gt;<sp/>12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>+=<sp/><ref refid="defs_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member" tooltip="DefineBrief.">PAGE_SIZE</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="mem_module_8c_1a6a84b1dac3ab7d785283bf1b99da1e26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a6a84b1dac3ab7d785283bf1b99da1e26" kindref="member" tooltip="Initializes a kernel page table.">initKernelTable</ref>(<ref refid="structpage_table__t" kindref="compound" tooltip="The page table typedef.">pageTable_t</ref><sp/>kernelTable){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="defs_8h_1a8e5feaae0050abc2f048607651293efe" kindref="member" tooltip="DefineBrief.">PAGE_ENTRIES_PER_TABLE</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a1056bbd0c7d38416134d0645668eaf7d" kindref="member" tooltip="Allocs a Page for the kernel.">allocKPage</ref>(&amp;(kernelTable[i]));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="mem_module_8c_1a868034315919cceedc278c3f24d06e04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a868034315919cceedc278c3f24d06e04" kindref="member" tooltip="Allocs a Page for the malloc section.">allocMPage</ref>(<ref refid="structpage__t" kindref="compound" tooltip="The paging page struct.">page_t</ref><sp/>*mallocPage){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add<sp/>=<sp/><ref refid="defs_8h_1aecbd22e428b6301e4e4c34e96af47b19" kindref="member" tooltip="DefineBrief.">MALLOC_SPACE</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1ad19841b9dac7eb81c72b63088b80015c" kindref="member" tooltip="Initializes the given page with according permissions.">initPage</ref>(mallocPage,<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mallocPage-&gt;address<sp/>=<sp/>add<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>+=<sp/><ref refid="defs_8h_1a7d467c1d283fdfa1f2081ba1e0d01b6e" kindref="member" tooltip="DefineBrief.">PAGE_SIZE</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="mem_module_8c_1ae7015dddbf16d196ea6e8cc66f2a8d2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1ae7015dddbf16d196ea6e8cc66f2a8d2f" kindref="member" tooltip="Initializes a malloc page table.">initMallocTable</ref>(<ref refid="structpage_table__t" kindref="compound" tooltip="The page table typedef.">pageTable_t</ref><sp/>mallocTable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirIndex){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0,<sp/>table<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>dirIndex<sp/>&lt;&lt;<sp/>22;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="defs_8h_1a8e5feaae0050abc2f048607651293efe" kindref="member" tooltip="DefineBrief.">PAGE_ENTRIES_PER_TABLE</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a868034315919cceedc278c3f24d06e04" kindref="member" tooltip="Allocs a Page for the malloc section.">allocMPage</ref>(&amp;(mallocTable[i]));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>i<sp/>&lt;&lt;<sp/>12;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesTable[frameIndex].address<sp/>|=<sp/>dir;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesTable[frameIndex].address<sp/>|=<sp/>table;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++frameIndex;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>((j<sp/>+<sp/>1)<sp/>==<sp/><ref refid="config_8h_1a072812a1bebf92b7d4e6c4321573b9a1" kindref="member" tooltip="The amount of pages per frame.">PAGES_PER_FRAME</ref>)<sp/>?<sp/>0<sp/>:<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="mem_module_8c_1a33bcef362cae377767738cdcc12fb340" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(<ref refid="structframe__t" kindref="compound" tooltip="The page frame struct.">frame_t</ref><sp/>*<ref refid="structframe" kindref="compound">frame</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirIndex<sp/>=<sp/>0,<sp/>tableIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirIndex<sp/>=<sp/>frame-&gt;address<sp/>&gt;&gt;<sp/>22;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableIndex<sp/>=<sp/>(frame-&gt;address<sp/>&amp;<sp/>0x003FFFFF)<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a072812a1bebf92b7d4e6c4321573b9a1" kindref="member" tooltip="The amount of pages per frame.">PAGES_PER_FRAME</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((kernelDir-&gt;tables)[dirIndex][tableIndex<sp/>+<sp/>i]).present<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="mem_module_8c_1a196022e7c97d188da8545ca5575d515a" refkind="member"><highlight class="normal"><ref refid="structframe__t" kindref="compound" tooltip="The page frame struct.">frame_t</ref><sp/>*<sp/><ref refid="mem_module_8h_1a84fa8c324392664110d9da557624b7f2" kindref="member" tooltip="Gets a free frame.">getFrame</ref>(){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="defs_8h_1a7f80e4b553d435a097d07c74652ee861" kindref="member" tooltip="DefineBrief.">TOTAL_FRAMES_QTY</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((framesTable[i]).assigned)){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesTable[i].assigned<sp/>=<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(framesTable[i]);<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="mem_module_8c_1a49336e498bea7c6948b194027bfa32d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem_module_8h_1a49336e498bea7c6948b194027bfa32d4" kindref="member" tooltip="Frees the given frame.">freeFrame</ref>(<ref refid="structframe__t" kindref="compound" tooltip="The page frame struct.">frame_t</ref><sp/>*<ref refid="structframe" kindref="compound">frame</ref>){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!frame-&gt;assigned){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;assigned<sp/>=<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/memModule.c"/>
  </compounddef>
</doxygen>
