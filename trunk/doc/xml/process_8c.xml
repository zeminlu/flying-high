<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="process_8c" kind="file">
    <compoundname>process.c</compoundname>
    <includes refid="process_8h" local="yes">process.h</includes>
    <incdepgraph>
      <node id="4279">
        <label>rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="4258" relation="include">
        </childnode>
      </node>
      <node id="4262">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="4285">
        <label>shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="4283" relation="include">
        </childnode>
      </node>
      <node id="4286">
        <label>int80.h</label>
        <link refid="int80_8h"/>
      </node>
      <node id="4258">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4267" relation="include">
        </childnode>
        <childnode refid="4268" relation="include">
        </childnode>
        <childnode refid="4273" relation="include">
        </childnode>
        <childnode refid="4274" relation="include">
        </childnode>
      </node>
      <node id="4268">
        <label>schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4269" relation="include">
        </childnode>
        <childnode refid="4271" relation="include">
        </childnode>
      </node>
      <node id="4266">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4265">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4259">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4260" relation="include">
        </childnode>
        <childnode refid="4261" relation="include">
        </childnode>
      </node>
      <node id="4278">
        <label>kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4270" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
      </node>
      <node id="4280">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4271" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4281" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4262" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
        <childnode refid="4269" relation="include">
        </childnode>
        <childnode refid="4282" relation="include">
        </childnode>
        <childnode refid="4268" relation="include">
        </childnode>
        <childnode refid="4284" relation="include">
        </childnode>
      </node>
      <node id="4267">
        <label>kasm.h</label>
        <link refid="kasm_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4281">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="4280" relation="include">
        </childnode>
        <childnode refid="4272" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4271">
        <label>video_driver.h</label>
        <link refid="video__driver_8h"/>
        <childnode refid="4272" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4277">
        <label>sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="4274" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4268" relation="include">
        </childnode>
        <childnode refid="4258" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4278" relation="include">
        </childnode>
        <childnode refid="4279" relation="include">
        </childnode>
        <childnode refid="4280" relation="include">
        </childnode>
      </node>
      <node id="4272">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="4273">
        <label>kernelDepth.h</label>
        <link refid="kernel_depth_8h"/>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4267" relation="include">
        </childnode>
      </node>
      <node id="4270">
        <label>sysMalloc.h</label>
        <link refid="sys_malloc_8h"/>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
      </node>
      <node id="4261">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4262" relation="include">
        </childnode>
      </node>
      <node id="4274">
        <label>ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="4275" relation="include">
        </childnode>
        <childnode refid="4271" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4258" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4278" relation="include">
        </childnode>
      </node>
      <node id="4284">
        <label>bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="4271" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
        <childnode refid="4285" relation="include">
        </childnode>
        <childnode refid="4283" relation="include">
        </childnode>
        <childnode refid="4279" relation="include">
        </childnode>
        <childnode refid="4274" relation="include">
        </childnode>
      </node>
      <node id="4264">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4276">
        <label>keyboard_buffer.h</label>
        <link refid="keyboard__buffer_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4257">
        <label>process.h</label>
        <link refid="process_8h"/>
        <childnode refid="4258" relation="include">
        </childnode>
        <childnode refid="4286" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
      </node>
      <node id="4275">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4256">
        <label>src/process.c</label>
        <link refid="process.c"/>
        <childnode refid="4257" relation="include">
        </childnode>
      </node>
      <node id="4283">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
      </node>
      <node id="4263">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
      </node>
      <node id="4269">
        <label>uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4270" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
      </node>
      <node id="4260">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="4282">
        <label>bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="4282" relation="include">
        </childnode>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4258" relation="include">
        </childnode>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4257" relation="include">
        </childnode>
        <childnode refid="4271" relation="include">
        </childnode>
        <childnode refid="4267" relation="include">
        </childnode>
        <childnode refid="4274" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4270" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4268" relation="include">
        </childnode>
        <childnode refid="4278" relation="include">
        </childnode>
        <childnode refid="4280" relation="include">
        </childnode>
        <childnode refid="4272" relation="include">
        </childnode>
        <childnode refid="4262" relation="include">
        </childnode>
        <childnode refid="4269" relation="include">
        </childnode>
        <childnode refid="4283" relation="include">
        </childnode>
        <childnode refid="4279" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="process_8c_1a9a676b8b31337abb6fcf49d5b41d5921" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref></type>
        <definition>process_t processTable[MAX_PROCESS]</definition>
        <argsstring>[MAX_PROCESS]</argsstring>
        <name>processTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="12" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="process_8c_1ab7f4e33be6189512770d5aaa43bd03fe" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* runningProcess</definition>
        <argsstring></argsstring>
        <name>runningProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="14" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="process_8c_1a8f3d19e4d5dfc217f2a8bd0492856f32" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* initProcess</definition>
        <argsstring></argsstring>
        <name>initProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="16" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="process_8c_1ad56a3baae6f1c970d4eeb27f0abdb48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memmap</definition>
        <argsstring>(int isKernel)</argsstring>
        <name>memmap</name>
        <param>
          <type>int</type>
          <declname>isKernel</declname>
        </param>
        <briefdescription>
<para>Brief. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isKernel</parametername>
</parameternamelist>
<parameterdescription>
<para>ParamBrief.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Description.</para></simplesect>
Use: <programlisting></programlisting></para><para><simplesect kind="see"><para>f1() f2() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="18" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="18" bodyend="20"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a26c795fae17bb83a8db0e9a8775f038f" compoundref="types_8h" startline="182">_SYS_MEMMAP</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a400d6ff57b24d5bec48a1a28ad944081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>pid_t createProcess</definition>
        <argsstring>(char *name, pfunc_t main, void *args, int level)</argsstring>
        <name>createProcess</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1ac33fbdfb125ea93ff0028a9cccf0fe5d" kindref="member">pfunc_t</ref></type>
          <declname>main</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Creates a new process into the system and sets it ready to run. The process will be created in unatomic mode(preemptive mode) and with tty -1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The process&apos; name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>main</parametername>
</parameternamelist>
<parameterdescription>
<para>The process&apos; main function. Must Not Be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an argument list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>FOREGROUND or BACKGROUND.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new process&apos; pid or -1 in case of error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="22" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="22" bodyend="24"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a55d7e6da5bfb44274939efdb1706c72b" compoundref="types_8h" startline="183">_SYS_CREATE</references>
        <references refid="int80_8h_1a68310308ad9c6753621ad8d0a790ddfd">int80ext</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
        <referencedby refid="sys_process_8c_1add8034131384a469e96c6efeb83d6043" compoundref="sys_process_8c" startline="55" endline="91">initMultitasker</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a55e99c539cf7723ec15e856b7e0a8cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void exit</definition>
        <argsstring>(int status)</argsstring>
        <name>exit</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>This function terminates the calling process and status is returned to whom is waiting for the calling process to exit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The process&apos; exit status. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="26" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="26" bodyend="29"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a178d74416ae12f4160afda433bff2cdd" compoundref="types_8h" startline="184">_SYS_EXIT</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1af886a211159a5c948f114280d2030a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
        <definition>tty_t setTty</definition>
        <argsstring>(pid_t pid, tty_t tty)</argsstring>
        <name>setTty</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
          <declname>tty</declname>
        </param>
        <briefdescription>
<para>Sets the given process tty id. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process&apos; pid whose tty id will be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tty</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty id to be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
Use: <programlisting></programlisting></para><para><simplesect kind="see"><para>f1() f2() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="31" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="31" bodyend="33"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad04962e118d92d142d12447c7f57c6ac" compoundref="types_8h" startline="185">_SYS_SET_TTY</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a109666f73149f2d6bbead68763749fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
        <definition>tty_t getTty</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>getTty</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Retrieves the given process pid&apos;s tty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The tty id.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1af886a211159a5c948f114280d2030a06" kindref="member">setTty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="35" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="35" bodyend="37"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a4bcf28e3d1d1a5a0bbbefcf831081ba4" compoundref="types_8h" startline="186">_SYS_GET_TTY</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bttlship_8c_1a52e47768a66b91e89d5546a8cb0f168c" compoundref="bttlship_8c" startline="12" endline="181">battleship</referencedby>
        <referencedby refid="bttlship_8c_1a4003a14058da5be60c7e7600713cd5c0" compoundref="bttlship_8c" startline="241" endline="281">getInput</referencedby>
        <referencedby refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" compoundref="shell_8c" startline="497" endline="538">shell</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a815d6c1ef38269f70826c824a5eab524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
        <definition>tty_t setTTYFocusedProcess</definition>
        <argsstring>(pid_t pid, tty_t tty)</argsstring>
        <name>setTTYFocusedProcess</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
          <declname>tty</declname>
        </param>
        <briefdescription>
<para>Sets the given tty focused process with the given pid process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process to be set as focused process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tty</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty whose focused process will be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a2933571ad11e89122adbe46a2a9147d6" kindref="member">getTTYFocusedProcess()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="39" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="39" bodyend="41"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a0a40addd8fef380942bd73c27d4a05bd" compoundref="types_8h" startline="194">_SYS_SET_TTY_FP</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a2933571ad11e89122adbe46a2a9147d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>pid_t getTTYFocusedProcess</definition>
        <argsstring>(tty_t tty)</argsstring>
        <name>getTTYFocusedProcess</name>
        <param>
          <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
          <declname>tty</declname>
        </param>
        <briefdescription>
<para>Retrieves the given tty focused process pid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tty</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty id.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pid of the tty focused process.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a815d6c1ef38269f70826c824a5eab524" kindref="member">setTTYFocusedProcess()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="43" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="43" bodyend="45"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a7671988973f512e3a4a146a492bafbd6" compoundref="types_8h" startline="193">_SYS_GET_TTY_FP</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1ac61b207337ca21b3b309593fd1a0cb82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>pid_t getpid</definition>
        <argsstring>(void)</argsstring>
        <name>getpid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieves the calling process&apos; pid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calling process&apos; pid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="47" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="47" bodyend="49"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43adf8f337f7cd4bbfb7f750b8811813bf0" compoundref="types_8h" startline="187">_SYS_GET_PID</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="semaphore_8c_1a633350244fdf193f5f24b3273d5713b9" compoundref="semaphore_8c" startline="94" endline="117">_sys_sem_get</referencedby>
        <referencedby refid="sh_memory_8c_1a700ff640b38fe4afda474128e3602261" compoundref="sh_memory_8c" startline="149" endline="173">_sys_shm_detach</referencedby>
        <referencedby refid="sh_memory_8c_1a5fe312690d813e1d177d7bc76019c4e0" compoundref="sh_memory_8c" startline="124" endline="147">_sys_shmat</referencedby>
        <referencedby refid="bttlship_8c_1a52e47768a66b91e89d5546a8cb0f168c" compoundref="bttlship_8c" startline="12" endline="181">battleship</referencedby>
        <referencedby refid="bttlship_8c_1a4003a14058da5be60c7e7600713cd5c0" compoundref="bttlship_8c" startline="241" endline="281">getInput</referencedby>
        <referencedby refid="exceptions_8c_1a7bb93194b9711c5e41743a0b15e1f96d" compoundref="exceptions_8c" startline="136" endline="149">handleException</referencedby>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
        <referencedby refid="bin_8c_1ab8d39c86e0f803f0816e787e36c99bd1" compoundref="bin_8c" startline="317" endline="331">pageFault</referencedby>
        <referencedby refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" compoundref="shell_8c" startline="497" endline="538">shell</referencedby>
        <referencedby refid="bin_8c_1a9795fbee9531f56aeda1376bf9934506" compoundref="bin_8c" startline="63" endline="215">top</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a556b7b3c8a853a6c86d847da7f008fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>pid_t getppid</definition>
        <argsstring>()</argsstring>
        <name>getppid</name>
        <briefdescription>
<para>Retrieves the calling process&apos; parent pid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calling process&apos; parent pid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="51" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="51" bodyend="53"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad6487098d4e51fc635ab823fb66d93d2" compoundref="types_8h" startline="188">_SYS_GET_PPID</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a6655447bab00753d59759423bf28e22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wait</definition>
        <argsstring>(int *status)</argsstring>
        <name>wait</name>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Blocks the calling process until a child returns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer where to store the return state of the child process.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the pid of the child process that recently returned.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member">waitpid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="55" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="55" bodyend="57"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a58d28b7d0c79fbcdbd26f945bbc50c14" compoundref="types_8h" startline="202">_SYS_WAIT</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a750680863e18ddefd3f3eae7d04cbe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int waitpid</definition>
        <argsstring>(pid_t pid, int *status)</argsstring>
        <name>waitpid</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>This function blocks the calling process until the given pid child returns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the child process to wait. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer where to store the child process return status.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pid of the child process.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a6655447bab00753d59759423bf28e22e" kindref="member">wait()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="59" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="59" bodyend="61"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a8b5b2b1ce117ff19f729c1cb6d207544" compoundref="types_8h" startline="189">_SYS_WAIT_PID</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a650cf0caaaa8b75f653c1c92818d03a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kill</definition>
        <argsstring>(int pid)</argsstring>
        <name>kill</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Kills the given pid process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process to be killed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="63" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="63" bodyend="65"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a8fd0e4eb19b4ba515c50beb190265a75" compoundref="types_8h" startline="190">_SYS_KILL</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="exceptions_8c_1a7bb93194b9711c5e41743a0b15e1f96d" compoundref="exceptions_8c" startline="136" endline="149">handleException</referencedby>
        <referencedby refid="ttys_8c_1abbca9cfc412d307fa56ca4a4095f0f87" compoundref="ttys_8c" startline="487" endline="513">refreshKeyboardBufferTTY</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1aa4f3855e8a226d285a523789a377fe04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setTTYMode</definition>
        <argsstring>(pid_t pid, int mode)</argsstring>
        <name>setTTYMode</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the tty mode of the given pid process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process whose tty mode will be changed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty mode: TTY_CANONICAL or TTY_RAW.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a7473b5c0ee016e409accc07718d23891" kindref="member">getTTYMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="67" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="67" bodyend="69"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a4af401b2e4c7b95817a502929adca4e3" compoundref="types_8h" startline="210">_SYS_SET_TTY_MODE</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a7473b5c0ee016e409accc07718d23891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getTTYMode</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>getTTYMode</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Retrieves the given pid process tty mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process whose tty mode will be retrieved.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The tty mode.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1aa4f3855e8a226d285a523789a377fe04" kindref="member">setTTYMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="71" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="71" bodyend="73"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad8d0c4e8d31923068e273fbd2d50888f" compoundref="types_8h" startline="211">_SYS_GET_TTY_MODE</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a04fead7e53a28d1b2d13bdebd80ddbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>setLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Sets the calling process level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>FOREGROUND or BACKGROUND.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success, FALSE on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a8c6fea79d2b1d923386e86255bcf9317" kindref="member">getLevel()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="75" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="75" bodyend="77"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a37b02b0df158689aa7b290414ec756d6" compoundref="types_8h" startline="203">_SYS_SET_LEVEL</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a8c6fea79d2b1d923386e86255bcf9317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getLevel</definition>
        <argsstring>()</argsstring>
        <name>getLevel</name>
        <briefdescription>
<para>Retrieves the calling process&apos; level. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calling process&apos; level.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a04fead7e53a28d1b2d13bdebd80ddbea" kindref="member">setLevel()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="79" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="79" bodyend="81"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a96393cc9ebd47a328594804fede2da38" compoundref="types_8h" startline="204">_SYS_GET_LEVEL</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a8e1ac3494e27c30441640926f0f07b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getPriority</definition>
        <argsstring>()</argsstring>
        <name>getPriority</name>
        <briefdescription>
<para>Retrieves the calling process&apos; priority. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calling process&apos; priority.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a8984ed6d44c45fc3a93b0c8fd217fab4" kindref="member">setPriority()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="83" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="83" bodyend="85"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a1effbd4915c587f22a417daebc9286f3" compoundref="types_8h" startline="205">_SYS_GET_PRIO</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a8984ed6d44c45fc3a93b0c8fd217fab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setPriority</definition>
        <argsstring>(pid_t pid, int prio)</argsstring>
        <name>setPriority</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prio</declname>
        </param>
        <briefdescription>
<para>Sets the pid process priority. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process whose priority will be changed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prio</parametername>
</parameternamelist>
<parameterdescription>
<para>The priority to be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>prio on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="process_8h_1a8e1ac3494e27c30441640926f0f07b6f" kindref="member">getPriority()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="87" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="87" bodyend="89"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a5ab08eea20e4c08adcdd078a4eb31c36" compoundref="types_8h" startline="206">_SYS_SET_PRIO</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1a989eea779d2e0a14ed31f0a16aee69bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned time</definition>
        <argsstring>(void)</argsstring>
        <name>time</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieves the amount of miliseconds that the calling process&apos; had the processor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The amount of miliseconds that the calling process&apos; had the processor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="91" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="91" bodyend="93"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad5386762707cd9dca45ad3c3dddf475a" compoundref="types_8h" startline="207">_SYS_TIME</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      <memberdef kind="function" id="process_8c_1ae735fa27b5b798dab27c5d1077802faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned upTime</definition>
        <argsstring>()</argsstring>
        <name>upTime</name>
        <briefdescription>
<para>Retrieves the amount of ticks since the system boot. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The amount of ticks since the system boot. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="95" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="95" bodyend="97"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a08cf8eec7c41604e74ad3aef1f8307c3" compoundref="types_8h" startline="209">_SYS_UPTIME</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1ae2338f2b60de8c59eaa31a6a285c1fc0" compoundref="bin_8c" startline="260" endline="289">goodbye</referencedby>
        <referencedby refid="rand_8c_1a55e3beba53036a0b4b8ac14e6914753d" compoundref="rand_8c" startline="13" endline="15">timeRand</referencedby>
        <referencedby refid="bin_8c_1a236e454e493fc9b262f746305660a2eb" compoundref="bin_8c" startline="217" endline="258">welcome</referencedby>
      </memberdef>
      <memberdef kind="function" id="process_8c_1ab5a4ab42ad24ecad7cb6354c4b5f7587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setProcessAtomicity</definition>
        <argsstring>(pid_t pid, int atomic)</argsstring>
        <name>setProcessAtomicity</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Sets the given pid process&apos; atomicity. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process whose atomicity will be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>ATOMIC or UNATOMIC.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/process.c" line="99" bodyfile="/Users/Luciano/Desktop/flying-high/src/process.c" bodystart="99" bodyend="101"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a5df532ba7d0d586052cd588be1d9ec74" compoundref="types_8h" startline="208">_SYS_SET_ATOM</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
        <referencedby refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" compoundref="shell_8c" startline="497" endline="538">shell</referencedby>
        <referencedby refid="bin_8c_1a9795fbee9531f56aeda1376bf9934506" compoundref="bin_8c" startline="63" endline="215">top</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>All the process functions that invoke syscalls. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="process_8h" kindref="compound" tooltip="All the process functions that invoke syscalls.">process.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/><ref refid="bin_8c_1a83e1a7341d63e92cd3d1733f87176a88" kindref="member">processTable</ref>[<ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="stdio_8h_1ab7f4e33be6189512770d5aaa43bd03fe" kindref="member">runningProcess</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="process_8c_1a8f3d19e4d5dfc217f2a8bd0492856f32" kindref="member">initProcess</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="process_8c_1ad56a3baae6f1c970d4eeb27f0abdb48c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="process_8h_1ad739f1d72d85aae30ff758c2d91c8c15" kindref="member" tooltip="Brief.">memmap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isKernel){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a26c795fae17bb83a8db0e9a8775f038f" kindref="member">_SYS_MEMMAP</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)isKernel,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="process_8c_1a400d6ff57b24d5bec48a1a28ad944081" refkind="member"><highlight class="normal"><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="types_8h_1ac33fbdfb125ea93ff0028a9cccf0fe5d" kindref="member" tooltip="pfunc_t typedef.">pfunc_t</ref><sp/>main,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref>)<ref refid="int80_8h_1a68310308ad9c6753621ad8d0a790ddfd" kindref="member" tooltip="copy the parameters to the processor registers.">int80ext</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a55d7e6da5bfb44274939efdb1706c72b" kindref="member">_SYS_CREATE</ref>,<sp/>name,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)main,<sp/>args,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)level,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="process_8c_1a55e99c539cf7723ec15e856b7e0a8cee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a55e99c539cf7723ec15e856b7e0a8cee" kindref="member" tooltip="This function terminates the calling process and status is returned to whom is waiting...">exit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a178d74416ae12f4160afda433bff2cdd" kindref="member">_SYS_EXIT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)status,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="process_8c_1af886a211159a5c948f114280d2030a06" refkind="member"><highlight class="normal"><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/><ref refid="process_8h_1af886a211159a5c948f114280d2030a06" kindref="member" tooltip="Sets the given process tty id.">setTty</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/>tty)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad04962e118d92d142d12447c7f57c6ac" kindref="member">_SYS_SET_TTY</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)tty,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="process_8c_1a109666f73149f2d6bbead68763749fbd" refkind="member"><highlight class="normal"><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/><ref refid="process_8h_1a109666f73149f2d6bbead68763749fbd" kindref="member" tooltip="Retrieves the given process pid&amp;#39;s tty.">getTty</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a4bcf28e3d1d1a5a0bbbefcf831081ba4" kindref="member">_SYS_GET_TTY</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="process_8c_1a815d6c1ef38269f70826c824a5eab524" refkind="member"><highlight class="normal"><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/><ref refid="process_8h_1a815d6c1ef38269f70826c824a5eab524" kindref="member" tooltip="Sets the given tty focused process with the given pid process.">setTTYFocusedProcess</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/>tty)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a0a40addd8fef380942bd73c27d4a05bd" kindref="member">_SYS_SET_TTY_FP</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)tty,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="process_8c_1a2933571ad11e89122adbe46a2a9147d6" refkind="member"><highlight class="normal"><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><ref refid="process_8h_1a2933571ad11e89122adbe46a2a9147d6" kindref="member" tooltip="Retrieves the given tty focused process pid.">getTTYFocusedProcess</ref>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/>tty)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a7671988973f512e3a4a146a492bafbd6" kindref="member">_SYS_GET_TTY_FP</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)tty,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="process_8c_1ac61b207337ca21b3b309593fd1a0cb82" refkind="member"><highlight class="normal"><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43adf8f337f7cd4bbfb7f750b8811813bf0" kindref="member">_SYS_GET_PID</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="process_8c_1a556b7b3c8a853a6c86d847da7f008fc0" refkind="member"><highlight class="normal"><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><ref refid="process_8h_1a556b7b3c8a853a6c86d847da7f008fc0" kindref="member" tooltip="Retrieves the calling process&amp;#39; parent pid.">getppid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad6487098d4e51fc635ab823fb66d93d2" kindref="member">_SYS_GET_PPID</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="process_8c_1a6655447bab00753d59759423bf28e22e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a6655447bab00753d59759423bf28e22e" kindref="member" tooltip="Blocks the calling process until a child returns.">wait</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*status)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a58d28b7d0c79fbcdbd26f945bbc50c14" kindref="member">_SYS_WAIT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)status,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="process_8c_1a750680863e18ddefd3f3eae7d04cbe96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*status)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a8b5b2b1ce117ff19f729c1cb6d207544" kindref="member">_SYS_WAIT_PID</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)status,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="process_8c_1a650cf0caaaa8b75f653c1c92818d03a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a650cf0caaaa8b75f653c1c92818d03a4" kindref="member" tooltip="Kills the given pid process.">kill</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a8fd0e4eb19b4ba515c50beb190265a75" kindref="member">_SYS_KILL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="process_8c_1aa4f3855e8a226d285a523789a377fe04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1aa4f3855e8a226d285a523789a377fe04" kindref="member" tooltip="Sets the tty mode of the given pid process.">setTTYMode</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a4af401b2e4c7b95817a502929adca4e3" kindref="member">_SYS_SET_TTY_MODE</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)mode,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="process_8c_1a7473b5c0ee016e409accc07718d23891" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a7473b5c0ee016e409accc07718d23891" kindref="member" tooltip="Retrieves the given pid process tty mode.">getTTYMode</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad8d0c4e8d31923068e273fbd2d50888f" kindref="member">_SYS_GET_TTY_MODE</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="process_8c_1a04fead7e53a28d1b2d13bdebd80ddbea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a04fead7e53a28d1b2d13bdebd80ddbea" kindref="member" tooltip="Sets the calling process level.">setLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a37b02b0df158689aa7b290414ec756d6" kindref="member">_SYS_SET_LEVEL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)level,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="process_8c_1a8c6fea79d2b1d923386e86255bcf9317" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a8c6fea79d2b1d923386e86255bcf9317" kindref="member" tooltip="Retrieves the calling process&amp;#39; level.">getLevel</ref>(){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a96393cc9ebd47a328594804fede2da38" kindref="member">_SYS_GET_LEVEL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="process_8c_1a8e1ac3494e27c30441640926f0f07b6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a8e1ac3494e27c30441640926f0f07b6f" kindref="member" tooltip="Retrieves the calling process&amp;#39; priority.">getPriority</ref>(){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a1effbd4915c587f22a417daebc9286f3" kindref="member">_SYS_GET_PRIO</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="process_8c_1a8984ed6d44c45fc3a93b0c8fd217fab4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a8984ed6d44c45fc3a93b0c8fd217fab4" kindref="member" tooltip="Sets the pid process priority.">setPriority</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a5ab08eea20e4c08adcdd078a4eb31c36" kindref="member">_SYS_SET_PRIO</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)prio,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="process_8c_1a989eea779d2e0a14ed31f0a16aee69bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="process_8h_1a989eea779d2e0a14ed31f0a16aee69bc" kindref="member" tooltip="Retrieves the amount of miliseconds that the calling process&amp;#39; had the processor...">time</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ad5386762707cd9dca45ad3c3dddf475a" kindref="member">_SYS_TIME</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="process_8c_1ae735fa27b5b798dab27c5d1077802faf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="process_8h_1ae735fa27b5b798dab27c5d1077802faf" kindref="member" tooltip="Retrieves the amount of ticks since the system boot.">upTime</ref>(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a08cf8eec7c41604e74ad3aef1f8307c3" kindref="member">_SYS_UPTIME</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="process_8c_1ab5a4ab42ad24ecad7cb6354c4b5f7587" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atomic)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a5df532ba7d0d586052cd588be1d9ec74" kindref="member">_SYS_SET_ATOM</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)atomic,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/process.c"/>
  </compounddef>
</doxygen>
