<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="p_queue_p_8c" kind="file">
    <compoundname>pQueueP.c</compoundname>
    <includes refid="p_queue_p_8c" local="yes">../inc/pQueueP.h</includes>
    <includes refid="string_8h" local="yes">string.h</includes>
    <includes refid="stdio_8h" local="yes">stdio.h</includes>
    <includes refid="sys_process_8h" local="yes">sysProcess.h</includes>
    <includedby refid="p_queue_p_8c" local="yes">src/pQueueP.c</includedby>
    <incdepgraph>
      <node id="4248">
        <label>rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="4238" relation="include">
        </childnode>
      </node>
      <node id="4229">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="4254">
        <label>shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="4252" relation="include">
        </childnode>
      </node>
      <node id="4241">
        <label>int80.h</label>
        <link refid="int80_8h"/>
      </node>
      <node id="4238">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4242" relation="include">
        </childnode>
        <childnode refid="4243" relation="include">
        </childnode>
        <childnode refid="4246" relation="include">
        </childnode>
        <childnode refid="4233" relation="include">
        </childnode>
      </node>
      <node id="4243">
        <label>schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4244" relation="include">
        </childnode>
        <childnode refid="4236" relation="include">
        </childnode>
      </node>
      <node id="4231">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4230">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4231" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4226">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4227" relation="include">
        </childnode>
        <childnode refid="4228" relation="include">
        </childnode>
      </node>
      <node id="4247">
        <label>kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4245" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
      </node>
      <node id="4249">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4236" relation="include">
        </childnode>
        <childnode refid="4231" relation="include">
        </childnode>
        <childnode refid="4250" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4229" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
        <childnode refid="4244" relation="include">
        </childnode>
        <childnode refid="4251" relation="include">
        </childnode>
        <childnode refid="4243" relation="include">
        </childnode>
        <childnode refid="4253" relation="include">
        </childnode>
      </node>
      <node id="4242">
        <label>kasm.h</label>
        <link refid="kasm_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4224">
        <label>src/pQueueP.c</label>
        <link refid="pQueueP.c"/>
        <childnode refid="4224" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4232" relation="include">
        </childnode>
      </node>
      <node id="4250">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="4249" relation="include">
        </childnode>
        <childnode refid="4237" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4236">
        <label>video_driver.h</label>
        <link refid="video__driver_8h"/>
        <childnode refid="4237" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4232">
        <label>sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="4233" relation="include">
        </childnode>
        <childnode refid="4235" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4243" relation="include">
        </childnode>
        <childnode refid="4238" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4247" relation="include">
        </childnode>
        <childnode refid="4248" relation="include">
        </childnode>
        <childnode refid="4249" relation="include">
        </childnode>
      </node>
      <node id="4237">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="4246">
        <label>kernelDepth.h</label>
        <link refid="kernel_depth_8h"/>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4242" relation="include">
        </childnode>
      </node>
      <node id="4245">
        <label>sysMalloc.h</label>
        <link refid="sys_malloc_8h"/>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
      </node>
      <node id="4228">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4229" relation="include">
        </childnode>
      </node>
      <node id="4233">
        <label>ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="4234" relation="include">
        </childnode>
        <childnode refid="4236" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4235" relation="include">
        </childnode>
        <childnode refid="4232" relation="include">
        </childnode>
        <childnode refid="4238" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4231" relation="include">
        </childnode>
        <childnode refid="4247" relation="include">
        </childnode>
      </node>
      <node id="4253">
        <label>bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="4236" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
        <childnode refid="4254" relation="include">
        </childnode>
        <childnode refid="4252" relation="include">
        </childnode>
        <childnode refid="4248" relation="include">
        </childnode>
        <childnode refid="4233" relation="include">
        </childnode>
      </node>
      <node id="4225">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4235">
        <label>keyboard_buffer.h</label>
        <link refid="keyboard__buffer_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4240">
        <label>process.h</label>
        <link refid="process_8h"/>
        <childnode refid="4238" relation="include">
        </childnode>
        <childnode refid="4241" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4232" relation="include">
        </childnode>
      </node>
      <node id="4234">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="4235" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4252">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
      </node>
      <node id="4239">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
      </node>
      <node id="4244">
        <label>uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4245" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
      </node>
      <node id="4227">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="4251">
        <label>bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="4251" relation="include">
        </childnode>
        <childnode refid="4226" relation="include">
        </childnode>
        <childnode refid="4235" relation="include">
        </childnode>
        <childnode refid="4232" relation="include">
        </childnode>
        <childnode refid="4225" relation="include">
        </childnode>
        <childnode refid="4238" relation="include">
        </childnode>
        <childnode refid="4239" relation="include">
        </childnode>
        <childnode refid="4240" relation="include">
        </childnode>
        <childnode refid="4236" relation="include">
        </childnode>
        <childnode refid="4242" relation="include">
        </childnode>
        <childnode refid="4233" relation="include">
        </childnode>
        <childnode refid="4231" relation="include">
        </childnode>
        <childnode refid="4245" relation="include">
        </childnode>
        <childnode refid="4230" relation="include">
        </childnode>
        <childnode refid="4243" relation="include">
        </childnode>
        <childnode refid="4247" relation="include">
        </childnode>
        <childnode refid="4249" relation="include">
        </childnode>
        <childnode refid="4237" relation="include">
        </childnode>
        <childnode refid="4229" relation="include">
        </childnode>
        <childnode refid="4244" relation="include">
        </childnode>
        <childnode refid="4252" relation="include">
        </childnode>
        <childnode refid="4248" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4255">
        <label>src/pQueueP.c</label>
        <link refid="pQueueP.c"/>
        <childnode refid="4255" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_node__t" prot="public">Node_t</innerclass>
    <innerclass refid="structlist_with_prio" prot="public">listWithPrio</innerclass>
    <innerclass refid="structp_queue_c_d_t" prot="public">pQueueCDT</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="p_queue_p_8c_1a8b3dcee5f502d75f808228b368f59678" prot="public" static="no">
        <type>struct <ref refid="struct_node__t" kindref="compound">Node_t</ref></type>
        <definition>typedef struct Node_t Node_t</definition>
        <argsstring></argsstring>
        <name>Node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="22"/>
      </memberdef>
      <memberdef kind="typedef" id="p_queue_p_8c_1a6ee4264897bed8aae05e4c2dbc3f323d" prot="public" static="no">
        <type>struct <ref refid="structlist_with_prio" kindref="compound">listWithPrio</ref></type>
        <definition>typedef struct listWithPrio listWithPrio</definition>
        <argsstring></argsstring>
        <name>listWithPrio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="29"/>
      </memberdef>
      <memberdef kind="typedef" id="p_queue_p_8c_1a71e0c212edfa8fa7e218bab0b1127461" prot="public" static="no">
        <type>struct <ref refid="structp_queue_c_d_t" kindref="compound">pQueueCDT</ref></type>
        <definition>typedef struct pQueueCDT pQueueCDT</definition>
        <argsstring></argsstring>
        <name>pQueueCDT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="p_queue_p_8c_1aff425f64039e5f8057663b4c21111cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* copyNum</definition>
        <argsstring>(void *num)</argsstring>
        <name>copyNum</name>
        <param>
          <type>void *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="42" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1a871d918e75bffdd2c05ce85a8b8454a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeNode</definition>
        <argsstring>(void *node)</argsstring>
        <name>freeNode</name>
        <param>
          <type>void *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="47" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="46" bodyend="49"/>
        <references refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" compoundref="u_malloc_8c" startline="16" endline="19">free</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1a7ee3c5c51cd1398ff0bc2006d32a8fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printQueue</definition>
        <argsstring>(pQueueADT queueADT)</argsstring>
        <name>printQueue</name>
        <param>
          <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
          <declname>queueADT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="52" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="51" bodyend="69"/>
        <references refid="struct_node__t_1a735984d41155bc1032e09bece8f8d66d" compoundref="p_queue_p_8c" startline="15">Node_t::data</references>
        <references refid="config_8h_1a88b491593ae5e149772272b10dbad018" compoundref="config_8h" startline="118">MAX_PRIORITIES</references>
        <references refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" compoundref="p_queue_p_8c" startline="16">Node_t::next</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" compoundref="stdio_8h" startline="46">puts</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1a71a9d33f7a1466b6b1e6d7dd391fdbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
        <definition>pQueueADT newPQueue</definition>
        <argsstring>(void(*freeFnP)(void *), void *(*cpyFnP)(void *))</argsstring>
        <name>newPQueue</name>
        <param>
          <type>void(*)(void *)</type>
          <declname>freeFn</declname>
          <defname>freeFnP</defname>
        </param>
        <param>
          <type>void *(*)(void *)</type>
          <declname>cpyFn</declname>
          <defname>cpyFnP</defname>
        </param>
        <briefdescription>
<para>This function return a new priority Queue. It creates a priority queue for _MAX_PRIORITY_ priorities. It receives the function to copy an element and free an element. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pQueue<sp/>*<sp/>queue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/>=<sp/><ref refid="p_queue_p_8h_1a410b753d802b615381198d60fd33cc12" kindref="member" tooltip="This function return a new priority Queue. It creates a priority queue for _MAX_PRIORITY_...">newPQueue</ref>();</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="72" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="71" bodyend="96"/>
        <references refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" compoundref="p_queue_p_8c" startline="33">pQueueCDT::cpyFn</references>
        <references refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" compoundref="p_queue_p_8c" startline="34">pQueueCDT::freeFn</references>
        <references refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" compoundref="u_malloc_8c" startline="20" endline="22">malloc</references>
        <references refid="config_8h_1a88b491593ae5e149772272b10dbad018" compoundref="config_8h" startline="118">MAX_PRIORITIES</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" compoundref="stdio_8h" startline="46">puts</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1a2c853f35b6e0b2adc7626d27013638d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freePQueue</definition>
        <argsstring>(pQueueADT queueADT)</argsstring>
        <name>freePQueue</name>
        <param>
          <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
          <declname>queue</declname>
          <defname>queueADT</defname>
        </param>
        <briefdescription>
<para>This function frees the whole pQueue. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p_queue_p_8h_1a1da6471fc3cf61ea1ce047d0baafd72b" kindref="member" tooltip="This function frees the whole pQueue.">freePQueue</ref>(<sp/>queue<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="99" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="98" bodyend="118"/>
        <references refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" compoundref="u_malloc_8c" startline="16" endline="19">free</references>
        <references refid="config_8h_1a88b491593ae5e149772272b10dbad018" compoundref="config_8h" startline="118">MAX_PRIORITIES</references>
        <references refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" compoundref="p_queue_p_8c" startline="16">Node_t::next</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1ac816b273d6f10ffc9d0fb76bc86fb4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int enque</definition>
        <argsstring>(pQueueADT queue, void *data, int prio)</argsstring>
        <name>enque</name>
        <param>
          <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
          <declname>queue</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
          <defname>prio</defname>
        </param>
        <briefdescription>
<para>This function enque the element in the correct priority node and it will be added at last of the list. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pQueue<sp/>*<sp/>queue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>9;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/>=<sp/><ref refid="p_queue_p_8h_1a410b753d802b615381198d60fd33cc12" kindref="member" tooltip="This function return a new priority Queue. It creates a priority queue for _MAX_PRIORITY_...">newPQueue</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p_queue_p_8h_1a2c6cfc95a906a00331462b78a5bd5cf7" kindref="member" tooltip="This function enque the element in the correct priority node and it will be added...">enque</ref>(queue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(&amp;data)<sp/>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="121" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="120" bodyend="144"/>
        <references refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" compoundref="p_queue_p_8c" startline="33">pQueueCDT::cpyFn</references>
        <references refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" compoundref="u_malloc_8c" startline="20" endline="22">malloc</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1ae86c353375c76752f2da8773bcdb1bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* deque</definition>
        <argsstring>(pQueueADT queue)</argsstring>
        <name>deque</name>
        <param>
          <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>This function return the first element of the queue. After you call to deque, if the proccess doesn&apos;t finish you must enque again the control block, if not you don&apos;t do anything. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pQueue<sp/>*<sp/>queue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>10,<sp/>ret;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/>=<sp/><ref refid="p_queue_p_8h_1a410b753d802b615381198d60fd33cc12" kindref="member" tooltip="This function return a new priority Queue. It creates a priority queue for _MAX_PRIORITY_...">newPQueue</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p_queue_p_8h_1a2c6cfc95a906a00331462b78a5bd5cf7" kindref="member" tooltip="This function enque the element in the correct priority node and it will be added...">enque</ref>(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(&amp;data)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<ref refid="p_queue_p_8h_1a06d7f0a23562dd5158922dd40019254c" kindref="member" tooltip="This function return the first element of the queue. After you call to deque, if...">deque</ref>(queue));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="147" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="146" bodyend="165"/>
        <references refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" compoundref="p_queue_p_8c" startline="33">pQueueCDT::cpyFn</references>
        <references refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" compoundref="p_queue_p_8c" startline="34">pQueueCDT::freeFn</references>
        <references refid="config_8h_1a88b491593ae5e149772272b10dbad018" compoundref="config_8h" startline="118">MAX_PRIORITIES</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      <memberdef kind="function" id="p_queue_p_8c_1aef016839ece378b19c2ab903e53165b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isEmpty</definition>
        <argsstring>(pQueueADT queue)</argsstring>
        <name>isEmpty</name>
        <param>
          <type><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref></type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>This function the amount of proccess that are in the priority queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" line="168" bodyfile="/Users/Luciano/Desktop/flying-high/src/pQueueP.c" bodystart="167" bodyend="178"/>
        <references refid="config_8h_1a88b491593ae5e149772272b10dbad018" compoundref="config_8h" startline="118">MAX_PRIORITIES</references>
        <references refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" compoundref="p_queue_p_8c" startline="32">pQueueCDT::queue</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The priority queue module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Includes<sp/>Section</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../inc/pQueueP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_node__t_1a735984d41155bc1032e09bece8f8d66d" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="16" refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" refkind="member"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Struct<sp/>Section</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="struct_node__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_node__t" kindref="compound">Node_t</ref>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_node__t_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*<sp/><ref refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="struct_node__t" kindref="compound">Node_t</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structlist_with_prio" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlist_with_prio" kindref="compound">listWithPrio</ref>{</highlight></codeline>
<codeline lineno="25" refid="structlist_with_prio_1acec9ce2df15222151ad66fcb1d74eb9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlist_with_prio_1acec9ce2df15222151ad66fcb1d74eb9f" kindref="member">priority</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structlist_with_prio_1a671979afa869339d57da6ad30c0498d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlist_with_prio_1a671979afa869339d57da6ad30c0498d8" kindref="member">pQueueDim</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>qty<sp/>of<sp/>proccess<sp/>in<sp/>the<sp/>pQueue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structlist_with_prio_1aaea2707399dfe92afae4ef90749f7542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*<sp/><ref refid="structlist_with_prio_1aaea2707399dfe92afae4ef90749f7542" kindref="member">first</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structlist_with_prio_1a1b88fdeb724166cbdf6717d7ba4b49c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*<sp/><ref refid="structlist_with_prio_1a1b88fdeb724166cbdf6717d7ba4b49c6" kindref="member">last</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>pointer<sp/>to<sp/>the<sp/>last<sp/>node,<sp/>it<sp/>will<sp/>cause<sp/>the<sp/>insertion<sp/>more<sp/>efficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="structlist_with_prio" kindref="compound">listWithPrio</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structp_queue_c_d_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structp_queue_c_d_t" kindref="compound">pQueueCDT</ref>{</highlight></codeline>
<codeline lineno="32" refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlist_with_prio" kindref="compound">listWithPrio</ref><sp/>*<sp/><ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="33" refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/>(*cpyFn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="34" refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/>(*<ref refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" kindref="member">freeFn</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="structp_queue_c_d_t" kindref="compound">pQueueCDT</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Main<sp/>Program</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="p_queue_p_8c_1aff425f64039e5f8057663b4c21111cfd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="p_queue_p_8c_1aff425f64039e5f8057663b4c21111cfd" kindref="member">copyNum</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>num<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="p_queue_p_8c_1a871d918e75bffdd2c05ce85a8b8454a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p_queue_p_8c_1a871d918e75bffdd2c05ce85a8b8454a9" kindref="member">freeNode</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>node)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" kindref="member" tooltip="Frees up the user memory pointed by ap for futures mallocs.">free</ref>(node);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="p_queue_p_8c_1a7ee3c5c51cd1398ff0bc2006d32a8fe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p_queue_p_8c_1a7ee3c5c51cd1398ff0bc2006d32a8fe8" kindref="member">printQueue</ref>(<sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/>queueADT<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*cur;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a88b491593ae5e149772272b10dbad018" kindref="member" tooltip="The amount of priority that the system accept.">MAX_PRIORITIES</ref><sp/>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;pQueueDim:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cur<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;data:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(cur-&gt;<ref refid="struct_node__t_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>))<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;<ref refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="p_queue_p_8c_1a71a9d33f7a1466b6b1e6d7dd391fdbe7" refkind="member"><highlight class="normal"><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/><ref refid="p_queue_p_8h_1a410b753d802b615381198d60fd33cc12" kindref="member" tooltip="This function return a new priority Queue. It creates a priority queue for _MAX_PRIORITY_...">newPQueue</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*freeFnP)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>(*cpyFnP)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueCDT</ref><sp/>*<sp/>queueADT;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queueADT<sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structp_queue_c_d_t" kindref="compound">pQueueCDT</ref>)))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>en<sp/>la<sp/>creacion<sp/>de<sp/>la<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queueADT-&gt;<ref refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" kindref="member">cpyFn</ref><sp/>=<sp/>cpyFnP;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queueADT-&gt;<ref refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" kindref="member">freeFn</ref><sp/>=<sp/>freeFnP;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref><sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlist_with_prio" kindref="compound">listWithPrio</ref>)<sp/>*<sp/><ref refid="config_8h_1a88b491593ae5e149772272b10dbad018" kindref="member" tooltip="The amount of priority that the system accept.">MAX_PRIORITIES</ref>))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>en<sp/>la<sp/>creacion<sp/>de<sp/>la<sp/>lista<sp/>con<sp/>las<sp/>prioridades&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_MAX_PRIORITY_<sp/>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].priority<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first<sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].last<sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queueADT;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="p_queue_p_8c_1a2c853f35b6e0b2adc7626d27013638d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p_queue_p_8h_1a1da6471fc3cf61ea1ce047d0baafd72b" kindref="member" tooltip="This function frees the whole pQueue.">freePQueue</ref>(<sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/>queueADT<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*cur,<sp/>*prev;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a88b491593ae5e149772272b10dbad018" kindref="member" tooltip="The amount of priority that the system accept.">MAX_PRIORITIES</ref><sp/>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cur<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>cur;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" kindref="member" tooltip="Frees up the user memory pointed by ap for futures mallocs.">free</ref>(cur);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>prev-&gt;<ref refid="struct_node__t_1a5e58c48351200ad246d4db491634433c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" kindref="member" tooltip="Frees up the user memory pointed by ap for futures mallocs.">free</ref>(<sp/>(queueADT-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="u_malloc_8h_1adebb229f063e66907017098087cbe791" kindref="member" tooltip="Frees up the user memory pointed by ap for futures mallocs.">free</ref>(queueADT);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="p_queue_p_8c_1ac816b273d6f10ffc9d0fb76bc86fb4e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="p_queue_p_8h_1a2c6cfc95a906a00331462b78a5bd5cf7" kindref="member" tooltip="This function enque the element in the correct priority node and it will be added...">enque</ref>(<sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/>queue,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].pQueueDim<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].first<sp/>=<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last<sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_node__t" kindref="compound">Node_t</ref>)))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].first)-&gt;data<sp/>=<sp/>queue-&gt;<ref refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" kindref="member">cpyFn</ref>(data);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].first)-&gt;next<sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last)-&gt;next<sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_node__t" kindref="compound">Node_t</ref>)))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last)-&gt;next)-&gt;data<sp/>=<sp/>queue-&gt;<ref refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" kindref="member">cpyFn</ref>(data);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last)-&gt;next)-&gt;next<sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last<sp/>=<sp/>(((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].last)-&gt;next);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[prio].pQueueDim++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="p_queue_p_8c_1ae86c353375c76752f2da8773bcdb1bf7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="p_queue_p_8h_1a06d7f0a23562dd5158922dd40019254c" kindref="member" tooltip="This function return the first element of the queue. After you call to deque, if...">deque</ref>(<sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/>queue<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cpyData<sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_node__t" kindref="compound">Node_t</ref><sp/>*<sp/>aux;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a88b491593ae5e149772272b10dbad018" kindref="member" tooltip="The amount of priority that the system accept.">MAX_PRIORITIES</ref><sp/>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpyData<sp/>=<sp/>queue-&gt;<ref refid="structp_queue_c_d_t_1abce72dff83b4c0563783ac39950547ac" kindref="member">cpyFn</ref>(<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first-&gt;data<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first<sp/>=<sp/>((queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].first)-&gt;next;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="structp_queue_c_d_t_1a1ea7dba004336f82292919dfead1aceb" kindref="member">freeFn</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)aux);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpyData;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="p_queue_p_8c_1aef016839ece378b19c2ab903e53165b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="p_queue_p_8h_1aef016839ece378b19c2ab903e53165b7" kindref="member" tooltip="This function the amount of proccess that are in the priority queue.">isEmpty</ref>(<sp/><ref refid="structp_queue_c_d_t" kindref="compound">pQueueADT</ref><sp/>queue)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,qty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a88b491593ae5e149772272b10dbad018" kindref="member" tooltip="The amount of priority that the system accept.">MAX_PRIORITIES</ref><sp/>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(queue-&gt;<ref refid="structp_queue_c_d_t_1abd678f8ea5d396a97fd1938b4df23841" kindref="member">queue</ref>)[i].pQueueDim<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++qty;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qty;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/pQueueP.c"/>
  </compounddef>
</doxygen>
