<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="semaphore_8c" kind="file">
    <compoundname>semaphore.c</compoundname>
    <includes refid="semaphore_8h" local="yes">semaphore.h</includes>
    <incdepgraph>
      <node id="4384">
        <label>rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="4367" relation="include">
        </childnode>
      </node>
      <node id="4365">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="4389">
        <label>shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="4361" relation="include">
        </childnode>
      </node>
      <node id="4390">
        <label>int80.h</label>
        <link refid="int80_8h"/>
      </node>
      <node id="4367">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4378" relation="include">
        </childnode>
        <childnode refid="4379" relation="include">
        </childnode>
      </node>
      <node id="4373">
        <label>schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4374" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
      </node>
      <node id="4371">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4370">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4362">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4363" relation="include">
        </childnode>
        <childnode refid="4364" relation="include">
        </childnode>
      </node>
      <node id="4383">
        <label>kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
      </node>
      <node id="4385">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
        <childnode refid="4386" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4365" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
        <childnode refid="4374" relation="include">
        </childnode>
        <childnode refid="4387" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4388" relation="include">
        </childnode>
      </node>
      <node id="4372">
        <label>kasm.h</label>
        <link refid="kasm_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4386">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4376">
        <label>video_driver.h</label>
        <link refid="video__driver_8h"/>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4382">
        <label>sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="4379" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4383" relation="include">
        </childnode>
        <childnode refid="4384" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
      </node>
      <node id="4377">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="4378">
        <label>kernelDepth.h</label>
        <link refid="kernel_depth_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
      </node>
      <node id="4375">
        <label>sysMalloc.h</label>
        <link refid="sys_malloc_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
      </node>
      <node id="4364">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4365" relation="include">
        </childnode>
      </node>
      <node id="4379">
        <label>ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="4380" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
        <childnode refid="4383" relation="include">
        </childnode>
      </node>
      <node id="4388">
        <label>bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
        <childnode refid="4389" relation="include">
        </childnode>
        <childnode refid="4361" relation="include">
        </childnode>
        <childnode refid="4384" relation="include">
        </childnode>
        <childnode refid="4379" relation="include">
        </childnode>
      </node>
      <node id="4369">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4381">
        <label>keyboard_buffer.h</label>
        <link refid="keyboard__buffer_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4366">
        <label>process.h</label>
        <link refid="process_8h"/>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4390" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
      </node>
      <node id="4380">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4360">
        <label>src/semaphore.c</label>
        <link refid="semaphore.c"/>
        <childnode refid="4361" relation="include">
        </childnode>
      </node>
      <node id="4361">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
      </node>
      <node id="4368">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
      </node>
      <node id="4374">
        <label>uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
      </node>
      <node id="4363">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="4387">
        <label>bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="4387" relation="include">
        </childnode>
        <childnode refid="4362" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4366" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4379" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4383" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4365" relation="include">
        </childnode>
        <childnode refid="4374" relation="include">
        </childnode>
        <childnode refid="4361" relation="include">
        </childnode>
        <childnode refid="4384" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structsem_queue" prot="public">semQueue</innerclass>
    <innerclass refid="structsemaphore" prot="public">semaphore</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="semaphore_8c_1a4d3c3b2b5fa5c8ea594362f9456f7266" prot="public" static="no">
        <type>struct <ref refid="structsem_queue" kindref="compound">semQueue</ref></type>
        <definition>typedef struct semQueue semQueue_t</definition>
        <argsstring></argsstring>
        <name>semQueue_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="15"/>
      </memberdef>
      <memberdef kind="typedef" id="semaphore_8c_1a7faa1c561b3d822cda7bb84f27ee9448" prot="public" static="no">
        <type>struct <ref refid="structsemaphore" kindref="compound">semaphore</ref></type>
        <definition>typedef struct semaphore semaphore_t</definition>
        <argsstring></argsstring>
        <name>semaphore_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="semaphore_8c_1a0fc22013f3eec27be9fa270eb4bc4201" prot="public" static="yes" mutable="no">
        <type><ref refid="structsem_queue" kindref="compound">semQueue_t</ref></type>
        <definition>semQueue_t queues[MAX_SEMS]</definition>
        <argsstring>[MAX_SEMS]</argsstring>
        <name>queues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="25" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="semaphore_8c_1a9b2b92449b7b4f80b89b535df63d03a9" prot="public" static="yes" mutable="no">
        <type><ref refid="structsemaphore" kindref="compound">semaphore_t</ref></type>
        <definition>semaphore_t sems[MAX_SEMS]</definition>
        <argsstring>[MAX_SEMS]</argsstring>
        <name>sems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="27" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="semaphore_8c_1a914d90b77abdc2fadffaa232b2d2d02f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int semIsEmpty</definition>
        <argsstring>(semQueue_t *queue)</argsstring>
        <name>semIsEmpty</name>
        <param>
          <type><ref refid="structsem_queue" kindref="compound">semQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="29" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1ac970949efda153e734fee91a80cbdbc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int semEnque</definition>
        <argsstring>(semQueue_t *queue)</argsstring>
        <name>semEnque</name>
        <param>
          <type><ref refid="structsem_queue" kindref="compound">semQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="33" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a4acb289c212a8733b98bd87e7f077482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>static pid_t semDeque</definition>
        <argsstring>(semQueue_t *queue)</argsstring>
        <name>semDeque</name>
        <param>
          <type><ref refid="structsem_queue" kindref="compound">semQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="45" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="45" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a890c313036014ee4d5c75c3519b831eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeSemaphores</definition>
        <argsstring>()</argsstring>
        <name>initializeSemaphores</name>
        <briefdescription>
<para>Initializes all semaphores. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="59" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="59" bodyend="73"/>
        <references refid="structsem_queue_1a3742955749f912de093848fe1385659d" compoundref="semaphore_8c" startline="13">semQueue::actPos</references>
        <references refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" compoundref="semaphore_8h" startline="18">MAX_SEMS</references>
        <references refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" compoundref="semaphore_8c" startline="14">semQueue::pidsQty</references>
        <references refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" compoundref="semaphore_8c" startline="18">semaphore::semid</references>
        <references refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" compoundref="semaphore_8c" startline="21">semaphore::sempid</references>
        <references refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" compoundref="semaphore_8c" startline="19">semaphore::semval</references>
        <references refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" compoundref="semaphore_8c" startline="20">semaphore::state</references>
        <references refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" compoundref="semaphore_8h" startline="19">UNUSED</references>
        <references refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" compoundref="semaphore_8c" startline="22">semaphore::waitQueue</references>
        <referencedby refid="kernel_8c_1a6b8fb674fb359f6ae53dc9c4fb7fc6be" compoundref="kernel_8c" startline="15" endline="59">kernel_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a46e2163685880ebc53e237c1e3ebf30e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
        <definition>key_t sem_get</definition>
        <argsstring>(int mode)</argsstring>
        <name>sem_get</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Gets a semaphore for the given mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Block or Wait modes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The key of the semaphore.</para></simplesect>
<simplesect kind="see"><para><ref refid="semaphore_8h_1ad789c6f97a5592c78cb99d9413c9607b" kindref="member">sem_free()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="75" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="75" bodyend="77"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a3d8c8d58c8d93f421df06d22a2fee661" compoundref="types_8h" startline="198">_SYS_SEM_GET</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="sh_memory_8c_1a5c13ce26761ac9aee72a441624bcf571" compoundref="sh_memory_8c" startline="79" endline="122">_sys_shmget</referencedby>
        <referencedby refid="bttlship_8c_1a52e47768a66b91e89d5546a8cb0f168c" compoundref="bttlship_8c" startline="12" endline="181">battleship</referencedby>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1ad789c6f97a5592c78cb99d9413c9607b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_free</definition>
        <argsstring>(key_t semid)</argsstring>
        <name>sem_free</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>semid</declname>
        </param>
        <briefdescription>
<para>Frees up the given semid semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>semid</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the semaphore.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="semaphore_8h_1a46e2163685880ebc53e237c1e3ebf30e" kindref="member">sem_get()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="79" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="79" bodyend="82"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a77aa510ee867b35c7fc08192d3aa91cf" compoundref="types_8h" startline="199">_SYS_SEM_FREE</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bttlship_8c_1ac475b6f9eb4174c8579f3d4709b0e219" compoundref="bttlship_8c" startline="186" endline="193">cleanup</referencedby>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a5d86815c472afe2d2175180835500008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_wait</definition>
        <argsstring>(key_t sem)</argsstring>
        <name>sem_wait</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Waits for the semaphore to be available.. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>The semaphore id.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="semaphore_8h_1adf32347e1821519a91572b64a6c53101" kindref="member">sem_signal()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="84" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="84" bodyend="87"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ab736039b36e06b1498250d40ef7f8dd6" compoundref="types_8h" startline="200">_SYS_SEM_WAIT</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bttlship_8c_1af66d7960a49eb99b5260ba4d524e1ac8" compoundref="bttlship_8c" startline="450" endline="467">lockTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1adf32347e1821519a91572b64a6c53101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_signal</definition>
        <argsstring>(key_t sem)</argsstring>
        <name>sem_signal</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Signals the given semaphore to enable it for other users. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>The semaphore id.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="semaphore_8h_1ad789c6f97a5592c78cb99d9413c9607b" kindref="member">sem_free()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="89" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="89" bodyend="92"/>
        <references refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a374d238db5f4d6c23fdb2fca1af57268" compoundref="types_8h" startline="201">_SYS_SEM_SIGNAL</references>
        <references refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38">int80</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <referencedby refid="bttlship_8c_1af66d7960a49eb99b5260ba4d524e1ac8" compoundref="bttlship_8c" startline="450" endline="467">lockTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a633350244fdf193f5f24b3273d5713b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
        <definition>key_t _sys_sem_get</definition>
        <argsstring>(int mode)</argsstring>
        <name>_sys_sem_get</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="94" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="94" bodyend="117"/>
        <references refid="semaphore_8h_1a52220397ecea855b3a99746e451426e1" compoundref="semaphore_8h" startline="16">BLOCK</references>
        <references refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" compoundref="process_8c" startline="47" endline="49">getpid</references>
        <references refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" compoundref="semaphore_8h" startline="18">MAX_SEMS</references>
        <references refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" compoundref="semaphore_8c" startline="18">semaphore::semid</references>
        <references refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" compoundref="semaphore_8c" startline="21">semaphore::sempid</references>
        <references refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" compoundref="semaphore_8c" startline="19">semaphore::semval</references>
        <references refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" compoundref="semaphore_8c" startline="20">semaphore::state</references>
        <references refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" compoundref="semaphore_8h" startline="19">UNUSED</references>
        <references refid="semaphore_8h_1abcd0a22ee4346cad5706adb6d2119429" compoundref="semaphore_8h" startline="20">USED</references>
        <references refid="semaphore_8h_1aef72fe86b7c60b1a86920496456edeac" compoundref="semaphore_8h" startline="17">WAIT</references>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1a5e49ccd7f03e2c50ec12fc8f682a1059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _sys_sem_free</definition>
        <argsstring>(key_t semid)</argsstring>
        <name>_sys_sem_free</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>semid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="119" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="119" bodyend="131"/>
        <references refid="structsem_queue_1a3742955749f912de093848fe1385659d" compoundref="semaphore_8c" startline="13">semQueue::actPos</references>
        <references refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" compoundref="semaphore_8c" startline="14">semQueue::pidsQty</references>
        <references refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" compoundref="semaphore_8c" startline="21">semaphore::sempid</references>
        <references refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" compoundref="semaphore_8c" startline="19">semaphore::semval</references>
        <references refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" compoundref="semaphore_8c" startline="20">semaphore::state</references>
        <references refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" compoundref="semaphore_8h" startline="19">UNUSED</references>
        <references refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" compoundref="semaphore_8c" startline="22">semaphore::waitQueue</references>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1abada34c4103e3b6963caa4286ad82b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _sys_sem_wait</definition>
        <argsstring>(key_t semid)</argsstring>
        <name>_sys_sem_wait</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>semid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="133" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="133" bodyend="144"/>
        <references refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" compoundref="stdio_8h" startline="46">puts</references>
        <references refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" compoundref="semaphore_8c" startline="19">semaphore::semval</references>
        <references refid="sys_process_8h_1a1fd8ccd9bf174a1b3ff78daa2b87872d" compoundref="sys_process_8c" startline="141" endline="146">sysSelfBlock</references>
      </memberdef>
      <memberdef kind="function" id="semaphore_8c_1ad10680f7901c93d3b8e6f2a690f11e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _sys_sem_signal</definition>
        <argsstring>(key_t semid)</argsstring>
        <name>_sys_sem_signal</name>
        <param>
          <type><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member">key_t</ref></type>
          <declname>semid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c" line="146" bodyfile="/Users/Luciano/Desktop/flying-high/src/semaphore.c" bodystart="146" bodyend="158"/>
        <references refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" compoundref="stdio_8h" startline="46">puts</references>
        <references refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" compoundref="semaphore_8c" startline="19">semaphore::semval</references>
        <references refid="sys_process_8h_1a309acd4364c8a2cac76e01219a583aa0" compoundref="sys_process_8c" startline="148" endline="155">sysUnblock</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The OS semaphore module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="semaphore_8h" kindref="compound" tooltip="The OS semaphore module.">semaphore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structsem_queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsem_queue" kindref="compound">semQueue</ref>{</highlight></codeline>
<codeline lineno="12" refid="structsem_queue_1a851c68a9d8a28e48ed3d9bfc73d9beda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><sp/><sp/><ref refid="structsem_queue_1a851c68a9d8a28e48ed3d9bfc73d9beda" kindref="member">pids</ref>[<ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>];</highlight></codeline>
<codeline lineno="13" refid="structsem_queue_1a3742955749f912de093848fe1385659d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref>;</highlight></codeline>
<codeline lineno="14" refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<ref refid="structsem_queue" kindref="compound">semQueue_t</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structsemaphore" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsemaphore" kindref="compound">semaphore</ref>{</highlight></codeline>
<codeline lineno="18" refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" kindref="member">semid</ref>;</highlight></codeline>
<codeline lineno="19" refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref>;</highlight></codeline>
<codeline lineno="20" refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="21" refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" kindref="member">sempid</ref>;</highlight></codeline>
<codeline lineno="22" refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsem_queue" kindref="compound">semQueue_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<ref refid="structsemaphore" kindref="compound">semaphore_t</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structsem_queue" kindref="compound">semQueue_t</ref><sp/>queues[<ref refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" kindref="member">MAX_SEMS</ref>];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structsemaphore" kindref="compound">semaphore_t</ref><sp/>sems[<ref refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" kindref="member">MAX_SEMS</ref>];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>semIsEmpty(<ref refid="structsem_queue" kindref="compound">semQueue_t</ref><sp/>*queue){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>semEnque(<ref refid="structsem_queue" kindref="compound">semQueue_t</ref><sp/>*queue){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref><sp/>==<sp/><ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="structsem_queue_1a851c68a9d8a28e48ed3d9bfc73d9beda" kindref="member">pids</ref>[(queue-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref><sp/>+<sp/>queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref>)<sp/>%<sp/><ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>]<sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>semDeque(<ref refid="structsem_queue" kindref="compound">semQueue_t</ref><sp/>*queue){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aux;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref><sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--queue-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>queue-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref><sp/>=<sp/>++queue-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref><sp/>%<sp/><ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue-&gt;<ref refid="structsem_queue_1a851c68a9d8a28e48ed3d9bfc73d9beda" kindref="member">pids</ref>[aux];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="semaphore_8c_1a890c313036014ee4d5c75c3519b831eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_8h_1a890c313036014ee4d5c75c3519b831eb" kindref="member" tooltip="Initializes all semaphores.">initializeSemaphores</ref>(){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" kindref="member">MAX_SEMS</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" kindref="member">semid</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" kindref="member">UNUSED</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" kindref="member">sempid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref><sp/>=<sp/>&amp;queues[i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref>-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref>-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="semaphore_8c_1a46e2163685880ebc53e237c1e3ebf30e" refkind="member"><highlight class="normal"><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/><ref refid="semaphore_8h_1a46e2163685880ebc53e237c1e3ebf30e" kindref="member" tooltip="Gets a semaphore for the given mode.">sem_get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref>)<ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a3d8c8d58c8d93f421df06d22a2fee661" kindref="member">_SYS_SEM_GET</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>mode,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="semaphore_8c_1ad789c6f97a5592c78cb99d9413c9607b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_8h_1ad789c6f97a5592c78cb99d9413c9607b" kindref="member" tooltip="Frees up the given semid semaphore.">sem_free</ref>(<sp/><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>semid<sp/>){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a77aa510ee867b35c7fc08192d3aa91cf" kindref="member">_SYS_SEM_FREE</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)semid,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="semaphore_8c_1a5d86815c472afe2d2175180835500008" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_8h_1a5d86815c472afe2d2175180835500008" kindref="member" tooltip="Waits for the semaphore to be available..">sem_wait</ref>(<sp/><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>sem){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43ab736039b36e06b1498250d40ef7f8dd6" kindref="member">_SYS_SEM_WAIT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)sem,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="semaphore_8c_1adf32347e1821519a91572b64a6c53101" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_8h_1adf32347e1821519a91572b64a6c53101" kindref="member" tooltip="Signals the given semaphore to enable it for other users.">sem_signal</ref>(<sp/><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>sem){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int80_8h_1a36ef33b2d2512c40b2aee77f85c56c38" kindref="member" tooltip="copy the parameters to the processor registers.">int80</ref>(<ref refid="types_8h_1ab287c195e026dd24b42c98d06af3ce43a374d238db5f4d6c23fdb2fca1af57268" kindref="member">_SYS_SEM_SIGNAL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)sem,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="semaphore_8c_1a633350244fdf193f5f24b3273d5713b9" refkind="member"><highlight class="normal"><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/><ref refid="semaphore_8c_1a633350244fdf193f5f24b3273d5713b9" kindref="member">_sys_sem_get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="semaphore_8h_1aef72fe86b7c60b1a86920496456edeac" kindref="member">WAIT</ref><sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/><ref refid="semaphore_8h_1a52220397ecea855b3a99746e451426e1" kindref="member">BLOCK</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_8h_1a1cc85de814c436a9222016d715ec1632" kindref="member">MAX_SEMS</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sems[i].state<sp/>==<sp/><ref refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" kindref="member">UNUSED</ref>){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>MAX_SEMS){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="semaphore_8h_1abcd0a22ee4346cad5706adb6d2119429" kindref="member">USED</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[i].<ref refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" kindref="member">sempid</ref><sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sems[i].<ref refid="structsemaphore_1a9222a19bf63a4f9775ec6307f10955ac" kindref="member">semid</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="semaphore_8c_1a5e49ccd7f03e2c50ec12fc8f682a1059" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_8c_1a5e49ccd7f03e2c50ec12fc8f682a1059" kindref="member">_sys_sem_free</ref>(<sp/><ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>semid<sp/>){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sems[semid].state<sp/>!=<sp/><ref refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" kindref="member">UNUSED</ref>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[semid].<ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[semid].<ref refid="structsemaphore_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="semaphore_8h_1addf5ec070e9499d36b7f2009ce736076" kindref="member">UNUSED</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[semid].<ref refid="structsemaphore_1ab2c2b336eae3da49c4f83d6f44c1fc7b" kindref="member">sempid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[semid].<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref>-&gt;<ref refid="structsem_queue_1a3742955749f912de093848fe1385659d" kindref="member">actPos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sems[semid].<ref refid="structsemaphore_1aa98d8a188e5b2388de0be4c7c48709fe" kindref="member">waitQueue</ref>-&gt;<ref refid="structsem_queue_1a9d456afc79beb2848acfed9c69887f8a" kindref="member">pidsQty</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="semaphore_8c_1abada34c4103e3b6963caa4286ad82b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="semaphore_8c_1abada34c4103e3b6963caa4286ad82b4c" kindref="member">_sys_sem_wait</ref>(<ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>semid){<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sems[semid].semval<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(semEnque(sems[semid].waitQueue)<sp/>==<sp/>-1){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>en<sp/>enque<sp/>de<sp/>semaforos\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1a1fd8ccd9bf174a1b3ff78daa2b87872d" kindref="member" tooltip="Blocks the calling process.">sysSelfBlock</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++sems[semid].<ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="semaphore_8c_1ad10680f7901c93d3b8e6f2a690f11e36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="semaphore_8c_1ad10680f7901c93d3b8e6f2a690f11e36" kindref="member">_sys_sem_signal</ref>(<ref refid="types_8h_1a158b5efbc244b8995c439d60c976c818" kindref="member" tooltip="key_t typedef.">key_t</ref><sp/>semid){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sems[semid].semval<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Sali<sp/>del<sp/>sem<sp/>signal<sp/>por<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!semIsEmpty(sems[semid].waitQueue)){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1a309acd4364c8a2cac76e01219a583aa0" kindref="member" tooltip="Unblocks the given pid process.">sysUnblock</ref>(semDeque(sems[semid].waitQueue));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>--sems[semid].<ref refid="structsemaphore_1a6191200d6dbe7f09897db13350a06c61" kindref="member">semval</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/semaphore.c"/>
  </compounddef>
</doxygen>
