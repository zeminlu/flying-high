<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="sys_process_8c" kind="file">
    <compoundname>sysProcess.c</compoundname>
    <includes refid="sys_process_8h" local="yes">sysProcess.h</includes>
    <incdepgraph>
      <node id="4539">
        <label>rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="4527" relation="include">
        </childnode>
      </node>
      <node id="4523">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="4545">
        <label>shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="4543" relation="include">
        </childnode>
      </node>
      <node id="4532">
        <label>int80.h</label>
        <link refid="int80_8h"/>
      </node>
      <node id="4527">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4533" relation="include">
        </childnode>
        <childnode refid="4534" relation="include">
        </childnode>
        <childnode refid="4537" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
      </node>
      <node id="4534">
        <label>schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4535" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
      </node>
      <node id="4530">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4529">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4530" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4520">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4521" relation="include">
        </childnode>
        <childnode refid="4522" relation="include">
        </childnode>
      </node>
      <node id="4538">
        <label>kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
      </node>
      <node id="4540">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4530" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4523" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4535" relation="include">
        </childnode>
        <childnode refid="4542" relation="include">
        </childnode>
        <childnode refid="4534" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
      </node>
      <node id="4533">
        <label>kasm.h</label>
        <link refid="kasm_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4541">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4525" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4524">
        <label>video_driver.h</label>
        <link refid="video__driver_8h"/>
        <childnode refid="4525" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4516">
        <label>sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4519" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4534" relation="include">
        </childnode>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
      </node>
      <node id="4525">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="4537">
        <label>kernelDepth.h</label>
        <link refid="kernel_depth_8h"/>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4533" relation="include">
        </childnode>
      </node>
      <node id="4536">
        <label>sysMalloc.h</label>
        <link refid="sys_malloc_8h"/>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
      </node>
      <node id="4522">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4523" relation="include">
        </childnode>
      </node>
      <node id="4517">
        <label>ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="4518" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4519" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4530" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
      </node>
      <node id="4544">
        <label>bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4545" relation="include">
        </childnode>
        <childnode refid="4543" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
      </node>
      <node id="4526">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4519">
        <label>keyboard_buffer.h</label>
        <link refid="keyboard__buffer_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4531">
        <label>process.h</label>
        <link refid="process_8h"/>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4532" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
      </node>
      <node id="4515">
        <label>src/sysProcess.c</label>
        <link refid="sysProcess.c"/>
        <childnode refid="4516" relation="include">
        </childnode>
      </node>
      <node id="4518">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="4519" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4543">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
      </node>
      <node id="4528">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
      </node>
      <node id="4535">
        <label>uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
      </node>
      <node id="4521">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="4542">
        <label>bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="4542" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4519" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4533" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4530" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4534" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4525" relation="include">
        </childnode>
        <childnode refid="4523" relation="include">
        </childnode>
        <childnode refid="4535" relation="include">
        </childnode>
        <childnode refid="4543" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sys_process_8c_1a50403f70d039eb253c1be121d72a9c5a" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tickCount</definition>
        <argsstring></argsstring>
        <name>tickCount</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="12" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="12" bodyend="-1"/>
        <referencedby refid="syscall_8c_1a49625be8c1454120bf8cb73d3daaaa6b" compoundref="syscall_8c" startline="368" endline="370">_sys_uptime</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a9a676b8b31337abb6fcf49d5b41d5921" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref></type>
        <definition>process_t processTable[MAX_PROCESS]</definition>
        <argsstring>[MAX_PROCESS]</argsstring>
        <name>processTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="14" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1ab7f4e33be6189512770d5aaa43bd03fe" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* runningProcess</definition>
        <argsstring></argsstring>
        <name>runningProcess</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="16" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="16" bodyend="-1"/>
        <referencedby refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" compoundref="shell_8c" startline="497" endline="538">shell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a8f3d19e4d5dfc217f2a8bd0492856f32" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* initProcess</definition>
        <argsstring></argsstring>
        <name>initProcess</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="18" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1aa4fe1fb513349b18bfc91787f615e57f" prot="public" static="no" mutable="no">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* nextProcess</definition>
        <argsstring></argsstring>
        <name>nextProcess</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="20" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1adda3f73d89a86734bf44ef368d8ca2a7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int mtActivated</definition>
        <argsstring></argsstring>
        <name>mtActivated</name>
        <initializer> FALSE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="22" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a7c1b71ff2ff49f8c502138efd43d01ef" prot="public" static="yes" mutable="no">
        <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
        <definition>pid_t ttyRestPlace[MAX_TTY]</definition>
        <argsstring>[MAX_TTY]</argsstring>
        <name>ttyRestPlace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="24" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a7e91edb7505bee836f84641cb33d0f5e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_i_l_e" kindref="compound">FILE</ref></type>
        <definition>FILE fileSystems[MAX_PROCESS][MAX_FILES]</definition>
        <argsstring>[MAX_PROCESS][MAX_FILES]</argsstring>
        <name>fileSystems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="26" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a04a16ab64e2131f772cd461bfa97c672" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char fileBuffers[MAX_PROCESS][MAX_FILES][SCREEN_SIZE]</definition>
        <argsstring>[MAX_PROCESS][MAX_FILES][SCREEN_SIZE]</argsstring>
        <name>fileBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="28" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="28" bodyend="-1"/>
        <referencedby refid="sys_process_8c_1add8034131384a469e96c6efeb83d6043" compoundref="sys_process_8c" startline="55" endline="91">initMultitasker</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sys_process_8c_1a9f730f3b3543bd94a38c0b82ecd15a5b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int qtyProccessTable</definition>
        <argsstring></argsstring>
        <name>qtyProccessTable</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="30" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sys_process_8c_1a4645c68ff4b67ae7de543c23c9117047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isMTActivated</definition>
        <argsstring>()</argsstring>
        <name>isMTActivated</name>
        <briefdescription>
<para>Checks wether the multitasker is activated or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if it&apos;s activated, False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="32" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a99034092f5809aaf880fd5dd77737a98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void freeTerminatedProcesses</definition>
        <argsstring>(void)</argsstring>
        <name>freeTerminatedProcesses</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="36" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1add8034131384a469e96c6efeb83d6043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initMultitasker</definition>
        <argsstring>(pfunc_t init)</argsstring>
        <name>initMultitasker</name>
        <param>
          <type><ref refid="types_8h_1ac33fbdfb125ea93ff0028a9cccf0fe5d" kindref="member">pfunc_t</ref></type>
          <declname>init</declname>
        </param>
        <briefdescription>
<para>Initializes the multitasker and creates the init process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the init function.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="sys_process_8c_1a9aa73aebdb67c7b8551305ec0ebf6087" kindref="member">multitasker()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="55" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="55" bodyend="91"/>
        <references refid="defs_8h_1a8026e8d87908b0239264d643c90183f5" compoundref="defs_8h" startline="53">_READ</references>
        <references refid="defs_8h_1a622e22a8bb12b59a4e14802f6aa1737e" compoundref="defs_8h" startline="58">_WRITE</references>
        <references refid="defs_8h_1a850b2f07a67b73890889e63fb8a49fda" compoundref="defs_8h" startline="133">BACKGROUND</references>
        <references refid="struct_f_i_l_e_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="types_8h" startline="124">FILE::buffer</references>
        <references refid="struct_f_i_l_e_1a7be887a2ca0a258cf6b368d32fd87487" compoundref="types_8h" startline="127">FILE::bufferSize</references>
        <references refid="structprocess__t_1ae77317d364318c5912ead6b8114777bc" compoundref="types_8h" startline="149">process_t::childsQty</references>
        <references refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" compoundref="process_8c" startline="22" endline="24">createProcess</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a11fd9ca455f92c69c084484d5cd803c2" compoundref="types_8h" startline="226">DEAD</references>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
        <references refid="struct_f_i_l_e_1a6f8059414f0228f0256115e024eeed4b" compoundref="types_8h" startline="123">FILE::fd</references>
        <references refid="sys_process_8c_1a04a16ab64e2131f772cd461bfa97c672" compoundref="sys_process_8c" startline="28">fileBuffers</references>
        <references refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" compoundref="types_8h" startline="152">process_t::files</references>
        <references refid="struct_f_i_l_e_1adf916204820072417ed73a32de1cefcf" compoundref="types_8h" startline="126">FILE::flag</references>
        <references refid="config_8h_1a2c5eecb22513a88c24ae5831a3265e54" compoundref="config_8h" startline="128">MAX_FILES</references>
        <references refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" compoundref="config_8h" startline="123">MAX_TTY</references>
        <references refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" compoundref="types_8h" startline="144">process_t::pid</references>
        <references refid="structprocess__t_1acec9ce2df15222151ad66fcb1d74eb9f" compoundref="types_8h" startline="157">process_t::priority</references>
        <references refid="struct_f_i_l_e_1a935adc2e417a61d7eb6f04efb18ba031" compoundref="types_8h" startline="125">FILE::ptr</references>
        <references refid="structprocess__t_1aa92db4fb120da36d4d5f60e2a8e01ce0" compoundref="types_8h" startline="154">process_t::rpgOld</references>
        <references refid="config_8h_1a6cacb150853456c97c51481e67d0dabc" compoundref="config_8h" startline="33">SCREEN_SIZE</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <referencedby refid="kernel_8c_1a6b8fb674fb359f6ae53dc9c4fb7fc6be" compoundref="kernel_8c" startline="15" endline="59">kernel_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a9aa73aebdb67c7b8551305ec0ebf6087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void multitasker</definition>
        <argsstring>(void)</argsstring>
        <name>multitasker</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="93" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="93" bodyend="132"/>
        <references refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" compoundref="defs_8h" startline="118">ATOMIC</references>
        <references refid="structprocess__t_1ae2d34916281a962b63074e700a0e4e68" compoundref="types_8h" startline="169">process_t::atomicity</references>
        <references refid="structprocess__t_1a27f83ceda788165817cb18a475c91062" compoundref="types_8h" startline="162">process_t::ebp</references>
        <references refid="structprocess__t_1a9a4b64202371e10f27f3769b73537182" compoundref="types_8h" startline="163">process_t::esp</references>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
        <references refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" compoundref="defs_8h" startline="128">FOREGROUND</references>
        <references refid="schedule_8h_1a646e9b6a815f3a5bcbc2fdaf01913ab8" compoundref="schedule_8c" startline="69" endline="80">getNextTask</references>
        <references refid="structprocess__t_1a597f5bd642c4a5d073a48ddd37ed0458" compoundref="types_8h" startline="168">process_t::hFrame</references>
        <references refid="structprocess__t_1acf4d33ee4cff36f69b924471174dcb11" compoundref="types_8h" startline="158">process_t::level</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" compoundref="types_8h" startline="144">process_t::pid</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" compoundref="types_8h" startline="220">READY</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" compoundref="types_8h" startline="219">RUNNING</references>
        <references refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" compoundref="mem_module_8c" startline="131" endline="141">setFramePresence</references>
        <references refid="structprocess__t_1a835da90e3143feb2586b1d88a186a32c" compoundref="types_8h" startline="166">process_t::sFrame</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <references refid="ttys_8h_1aca07223864f88814919b02e6729569a5" compoundref="ttys_8c" startline="554" endline="556">sysSetTTYFocusedProcess</references>
        <references refid="structprocess__t_1ae205502dd5c0be67092374ce83267bdf" compoundref="types_8h" startline="155">process_t::tickCounter</references>
        <references refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="defs_8h" startline="32">TRUE</references>
        <references refid="structprocess__t_1af7f414d19241988592fad1bc470e8761" compoundref="types_8h" startline="147">process_t::tty</references>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a12b10452eb40c51a2f71a5afc314b234" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wakeUpProcess</definition>
        <argsstring>(process_t *process, int status)</argsstring>
        <name>wakeUpProcess</name>
        <param>
          <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
          <declname>process</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="134" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a1fd8ccd9bf174a1b3ff78daa2b87872d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sysSelfBlock</definition>
        <argsstring>()</argsstring>
        <name>sysSelfBlock</name>
        <briefdescription>
<para>Blocks the calling process. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="sys_process_8h_1a309acd4364c8a2cac76e01219a583aa0" kindref="member">sysUnblock()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="141" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="141" bodyend="146"/>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" compoundref="types_8h" startline="221">BLOCKED</references>
        <references refid="sys_process_8h_1a4e14e480ef0c76ed52ff2c261e9d13cb">forceMultitasker</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <referencedby refid="semaphore_8c_1abada34c4103e3b6963caa4286ad82b4c" compoundref="semaphore_8c" startline="133" endline="144">_sys_sem_wait</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a309acd4364c8a2cac76e01219a583aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sysUnblock</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>sysUnblock</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Unblocks the given pid process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid of the process to be unlocked.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="sys_process_8h_1a1fd8ccd9bf174a1b3ff78daa2b87872d" kindref="member">sysSelfBlock()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="148" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="148" bodyend="155"/>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" compoundref="types_8h" startline="221">BLOCKED</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" compoundref="types_8h" startline="220">READY</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <referencedby refid="semaphore_8c_1ad10680f7901c93d3b8e6f2a690f11e36" compoundref="semaphore_8c" startline="146" endline="158">_sys_sem_signal</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a2cd7c071907edcb9f8151c8519d4b27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void waitTty</definition>
        <argsstring>(tty_t tty)</argsstring>
        <name>waitTty</name>
        <param>
          <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
          <declname>tty</declname>
        </param>
        <briefdescription>
<para>Blocks the calling process until it&apos;s tty is signaled. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tty</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty of the process to be blocked.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="sys_process_8h_1a7cf69c15da459e564717f8116eb75c57" kindref="member">signalTty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="157" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="157" bodyend="163"/>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" compoundref="types_8h" startline="221">BLOCKED</references>
        <references refid="sys_process_8h_1a4e14e480ef0c76ed52ff2c261e9d13cb">forceMultitasker</references>
        <references refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" compoundref="types_8h" startline="144">process_t::pid</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <referencedby refid="bttlship_8c_1a52e47768a66b91e89d5546a8cb0f168c" compoundref="bttlship_8c" startline="12" endline="181">battleship</referencedby>
        <referencedby refid="bttlship_8c_1a4003a14058da5be60c7e7600713cd5c0" compoundref="bttlship_8c" startline="241" endline="281">getInput</referencedby>
        <referencedby refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" compoundref="shell_8c" startline="497" endline="538">shell</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a7cf69c15da459e564717f8116eb75c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void signalTty</definition>
        <argsstring>(tty_t tty)</argsstring>
        <name>signalTty</name>
        <param>
          <type><ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member">tty_t</ref></type>
          <declname>tty</declname>
        </param>
        <briefdescription>
<para>Signals the given tty so that any blocked process from it can be unblocked. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tty</parametername>
</parameternamelist>
<parameterdescription>
<para>The tty to be signaled.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="sys_process_8h_1a2cd7c071907edcb9f8151c8519d4b27e" kindref="member">waitTty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="165" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="165" bodyend="174"/>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" compoundref="types_8h" startline="220">READY</references>
        <references refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" compoundref="types_8h" startline="151">process_t::state</references>
        <referencedby refid="exceptions_8c_1a7bb93194b9711c5e41743a0b15e1f96d" compoundref="exceptions_8c" startline="136" endline="149">handleException</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a30701c9fdd5cc1e64294743ff6dbf6d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void alertWaitingProcesses</definition>
        <argsstring>(pid_t pid, int status)</argsstring>
        <name>alertWaitingProcesses</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="176" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="176" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1ab5b0962abeaa4a1657d1fc3d5931a612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void terminate</definition>
        <argsstring>(pid_t pid, int status)</argsstring>
        <name>terminate</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Terminates the given process with the given status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid number from the process to be terminated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status upon which the process is being terminated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="203" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="203" bodyend="221"/>
        <references refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" compoundref="defs_8h" startline="128">FOREGROUND</references>
        <references refid="config_8h_1aca2d241a951204f1f8e2d905f162dcbe" compoundref="config_8h" startline="108">MAX_CHILDS</references>
        <references refid="ttys_8h_1aca07223864f88814919b02e6729569a5" compoundref="ttys_8c" startline="554" endline="556">sysSetTTYFocusedProcess</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a240c1965a48eaf409ba68c4cc9462ac5" compoundref="types_8h" startline="225">TERMINATED</references>
        <references refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" compoundref="defs_8h" startline="123">UNATOMIC</references>
        <referencedby refid="syscall_8c_1ae899f7ec6cb314499b5eb7fe8458fcce" compoundref="syscall_8c" startline="293" endline="321">_sys_kill</referencedby>
        <referencedby refid="syscall_8c_1a13d5257c80be9824dd100a5d21a6b1de" compoundref="syscall_8c" startline="114" endline="128">_sysExit</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a18afd4bf4046ef60e7827333850e1bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refreshProcessesCPUs</definition>
        <argsstring>()</argsstring>
        <name>refreshProcessesCPUs</name>
        <briefdescription>
<para>Refreshes the process comsumption of every process. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="sys_process_8h_1accfbf2e870cb5b019499cd068db1eb07" kindref="member">clearProcessesTicks()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="223" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="223" bodyend="238"/>
        <referencedby refid="bin_8c_1a9795fbee9531f56aeda1376bf9934506" compoundref="bin_8c" startline="63" endline="215">top</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1accfbf2e870cb5b019499cd068db1eb07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearProcessesTicks</definition>
        <argsstring>()</argsstring>
        <name>clearProcessesTicks</name>
        <briefdescription>
<para>Clears the current tickcount of every process. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>refreshProcesses() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="240" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="240" bodyend="248"/>
        <referencedby refid="bin_8c_1a9795fbee9531f56aeda1376bf9934506" compoundref="bin_8c" startline="63" endline="215">top</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a155dc1e2b61c56c4c10c518f3e99387e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>process_t* getProcessTable</definition>
        <argsstring>(void)</argsstring>
        <name>getProcessTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieves the OS process table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the OS process table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="250" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="250" bodyend="252"/>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
        <referencedby refid="ttys_8c_1abbca9cfc412d307fa56ca4a4095f0f87" compoundref="ttys_8c" startline="487" endline="513">refreshKeyboardBufferTTY</referencedby>
        <referencedby refid="bin_8c_1a9795fbee9531f56aeda1376bf9934506" compoundref="bin_8c" startline="63" endline="215">top</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_process_8c_1a872dbe3f7089cf045fee774b6c4cc937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* getProcessName</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>getProcessName</name>
        <param>
          <type><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Retrieves the given pid process name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The pid from the process whose name to be retrieven.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The process&apos; name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" line="254" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysProcess.c" bodystart="254" bodyend="258"/>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>OS system utilities. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sys_process_8h" kindref="compound" tooltip="OS system utilities.">sysProcess.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="sys_process_8c_1a50403f70d039eb253c1be121d72a9c5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscall_8c_1a50403f70d039eb253c1be121d72a9c5a" kindref="member">tickCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="ttys_8c_1a9a676b8b31337abb6fcf49d5b41d5921" refkind="member"><highlight class="normal"><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/><ref refid="bin_8c_1a83e1a7341d63e92cd3d1733f87176a88" kindref="member">processTable</ref>[<ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="ttys_8c_1ab7f4e33be6189512770d5aaa43bd03fe" refkind="member"><highlight class="normal"><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="stdio_8h_1ab7f4e33be6189512770d5aaa43bd03fe" kindref="member">runningProcess</ref><sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="ttys_8c_1a8f3d19e4d5dfc217f2a8bd0492856f32" refkind="member"><highlight class="normal"><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="process_8c_1a8f3d19e4d5dfc217f2a8bd0492856f32" kindref="member">initProcess</ref><sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="sys_process_8c_1aa4fe1fb513349b18bfc91787f615e57f" refkind="member"><highlight class="normal"><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="schedule_8c_1aa4fe1fb513349b18bfc91787f615e57f" kindref="member">nextProcess</ref><sp/>=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mtActivated<sp/>=<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>ttyRestPlace[<ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="sys_process_8c_1a7e91edb7505bee836f84641cb33d0f5e" refkind="member"><highlight class="normal"><ref refid="struct_f_i_l_e" kindref="compound" tooltip="The FILE struct.">FILE</ref><sp/><ref refid="sys_process_8c_1a7e91edb7505bee836f84641cb33d0f5e" kindref="member">fileSystems</ref>[<ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>][<ref refid="config_8h_1a2c5eecb22513a88c24ae5831a3265e54" kindref="member" tooltip="The maximum amount of files.">MAX_FILES</ref>];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sys_process_8c_1a04a16ab64e2131f772cd461bfa97c672" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sys_process_8c_1a04a16ab64e2131f772cd461bfa97c672" kindref="member">fileBuffers</ref>[<ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>][<ref refid="config_8h_1a2c5eecb22513a88c24ae5831a3265e54" kindref="member" tooltip="The maximum amount of files.">MAX_FILES</ref>][<ref refid="config_8h_1a6cacb150853456c97c51481e67d0dabc" kindref="member" tooltip="Real screen size without color attribute.">SCREEN_SIZE</ref>];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="sys_process_8c_1a9f730f3b3543bd94a38c0b82ecd15a5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="schedule_8c_1a9f730f3b3543bd94a38c0b82ecd15a5b" kindref="member">qtyProccessTable</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="sys_process_8c_1a4645c68ff4b67ae7de543c23c9117047" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a4645c68ff4b67ae7de543c23c9117047" kindref="member" tooltip="Checks wether the multitasker is activated or not.">isMTActivated</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mtActivated;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeTerminatedProcesses(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref>;<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>processTable[i].state<sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a240c1965a48eaf409ba68c4cc9462ac5" kindref="member">TERMINATED</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a49336e498bea7c6948b194027bfa32d4" kindref="member" tooltip="Frees the given frame.">freeFrame</ref>(processTable[i].sFrame);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a49336e498bea7c6948b194027bfa32d4" kindref="member" tooltip="Frees the given frame.">freeFrame</ref>(processTable[i].hFrame);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="config_8h_1aca2d241a951204f1f8e2d905f162dcbe" kindref="member" tooltip="The maximum amount of childs that a process could have.">MAX_CHILDS</ref>;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>processTable[i].childs[j]<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1ab5b0962abeaa4a1657d1fc3d5931a612" kindref="member" tooltip="Terminates the given process with the given status.">terminate</ref>(j,<sp/><ref refid="syscall_8h_1a85a3cf79d2a8eb3015056b14811f501c" kindref="member">KILL_EXIT_STATUS</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a11fd9ca455f92c69c084484d5cd803c2" kindref="member">DEAD</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a69756b34768c5818fb406d341c9b3e74" kindref="member">name</ref>[0]=<sp/><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="sys_process_8c_1add8034131384a469e96c6efeb83d6043" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1add8034131384a469e96c6efeb83d6043" kindref="member" tooltip="Initializes the multitasker and creates the init process.">initMultitasker</ref>(<ref refid="types_8h_1ac33fbdfb125ea93ff0028a9cccf0fe5d" kindref="member" tooltip="pfunc_t typedef.">pfunc_t</ref><sp/><ref refid="bin_8h_1a5bfde7b5020b14bdcb1c9269ab308dc5" kindref="member" tooltip="This functions initialize the welcome process, all the shells and goodbye process...">init</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstTime<sp/>=<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!firstTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstTime<sp/>=<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_PROCESS;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a11fd9ca455f92c69c084484d5cd803c2" kindref="member">DEAD</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1ae77317d364318c5912ead6b8114777bc" kindref="member">childsQty</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1aa92db4fb120da36d4d5f60e2a8e01ce0" kindref="member">rpgOld</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="config_8h_1a2c5eecb22513a88c24ae5831a3265e54" kindref="member" tooltip="The maximum amount of files.">MAX_FILES</ref>;<sp/>++j<sp/>){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]<sp/>=<sp/>&amp;(fileSystems[i][j]);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]-&gt;<ref refid="struct_f_i_l_e_1a935adc2e417a61d7eb6f04efb18ba031" kindref="member">ptr</ref><sp/>=<sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]-&gt;<ref refid="struct_f_i_l_e_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>=<sp/><ref refid="sys_process_8c_1a04a16ab64e2131f772cd461bfa97c672" kindref="member">fileBuffers</ref>[i][j];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]-&gt;<ref refid="struct_f_i_l_e_1a6f8059414f0228f0256115e024eeed4b" kindref="member">fd</ref><sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]-&gt;<ref refid="struct_f_i_l_e_1adf916204820072417ed73a32de1cefcf" kindref="member">flag</ref><sp/>=<sp/>(<ref refid="defs_8h_1a8026e8d87908b0239264d643c90183f5" kindref="member" tooltip="DefineBrief.">_READ</ref><sp/>|<sp/><ref refid="defs_8h_1a622e22a8bb12b59a4e14802f6aa1737e" kindref="member" tooltip="DefineBrief.">_WRITE</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].<ref refid="structprocess__t_1a38a7314b52579446f9acf4f643084465" kindref="member">files</ref>[j]-&gt;<ref refid="struct_f_i_l_e_1a7be887a2ca0a258cf6b368d32fd87487" kindref="member">bufferSize</ref><sp/>=<sp/><ref refid="config_8h_1a6cacb150853456c97c51481e67d0dabc" kindref="member" tooltip="Real screen size without color attribute.">SCREEN_SIZE</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;init&quot;</highlight><highlight class="normal">,<sp/>init,<sp/>0,<sp/><ref refid="defs_8h_1a850b2f07a67b73890889e63fb8a49fda" kindref="member" tooltip="DefineBrief.">BACKGROUND</ref>))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttyRestPlace[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initProcess<sp/>=<sp/>&amp;processTable[pid];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initProcess-&gt;<ref refid="structprocess__t_1acec9ce2df15222151ad66fcb1d74eb9f" kindref="member">priority</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextProcess<sp/>=<sp/>initProcess;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtActivated<sp/>=<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="sys_process_8c_1a9aa73aebdb67c7b8551305ec0ebf6087" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8c_1a9aa73aebdb67c7b8551305ec0ebf6087" kindref="member">multitasker</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mtActivated)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>runningProcess<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>&amp;&amp;<sp/>runningProcess-&gt;<ref refid="structprocess__t_1ae2d34916281a962b63074e700a0e4e68" kindref="member">atomicity</ref><sp/>==<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref><sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextProcess<sp/>=<sp/>(runningProcess<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>)<sp/>?<sp/>nextProcess<sp/>:<sp/><ref refid="schedule_8h_1a646e9b6a815f3a5bcbc2fdaf01913ab8" kindref="member" tooltip="This function returns the next task that should be attended.">getNextTask</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nextProcess<sp/>!=<sp/>runningProcess)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextProcess<sp/>==<sp/>initProcess<sp/>&amp;&amp;<sp/>runningProcess<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>&amp;&amp;<sp/>runningProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref>){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextProcess<sp/>=<sp/>runningProcess;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>done<sp/>when<sp/>loading<sp/>the<sp/>init<sp/>process<sp/>for<sp/>the<sp/>first<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>runningProcess<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>runningProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref><sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" kindref="member">READY</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%esp,<sp/>%0&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal">(runningProcess-&gt;<ref refid="structprocess__t_1a9a4b64202371e10f27f3769b73537182" kindref="member">esp</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%ebp,<sp/>%0&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal">(runningProcess-&gt;<ref refid="structprocess__t_1a27f83ceda788165817cb18a475c91062" kindref="member">ebp</ref>));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Protection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(nextProcess-&gt;<ref refid="structprocess__t_1a835da90e3143feb2586b1d88a186a32c" kindref="member">sFrame</ref>,<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(nextProcess-&gt;<ref refid="structprocess__t_1a597f5bd642c4a5d073a48ddd37ed0458" kindref="member">hFrame</ref>,<sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%0,<sp/>%%esp&quot;</highlight><highlight class="normal">::<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">(nextProcess-&gt;<ref refid="structprocess__t_1a9a4b64202371e10f27f3769b73537182" kindref="member">esp</ref>));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/>%0,<sp/>%%ebp&quot;</highlight><highlight class="normal">::<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">(nextProcess-&gt;<ref refid="structprocess__t_1a27f83ceda788165817cb18a475c91062" kindref="member">ebp</ref>));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>runningProcess<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(runningProcess-&gt;<ref refid="structprocess__t_1a835da90e3143feb2586b1d88a186a32c" kindref="member">sFrame</ref>,<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem_module_8h_1a33bcef362cae377767738cdcc12fb340" kindref="member" tooltip="Sets the presence bit of the pages from the given frame to the given state.">setFramePresence</ref>(runningProcess-&gt;<ref refid="structprocess__t_1a597f5bd642c4a5d073a48ddd37ed0458" kindref="member">hFrame</ref>,<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeTerminatedProcesses();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningProcess<sp/>=<sp/>nextProcess;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++runningProcess-&gt;<ref refid="structprocess__t_1ae205502dd5c0be67092374ce83267bdf" kindref="member">tickCounter</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runningProcess<sp/>!=<sp/>initProcess<sp/>&amp;&amp;<sp/>runningProcess-&gt;<ref refid="structprocess__t_1acf4d33ee4cff36f69b924471174dcb11" kindref="member">level</ref><sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ttys_8h_1aca07223864f88814919b02e6729569a5" kindref="member" tooltip="Sets the pid to the process which is in focus.">sysSetTTYFocusedProcess</ref>(runningProcess-&gt;<ref refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref>,<sp/>runningProcess-&gt;<ref refid="structprocess__t_1af7f414d19241988592fad1bc470e8761" kindref="member">tty</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wakeUpProcess(<ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*process,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process-&gt;<ref refid="structprocess__t_1a302f417bbfe3271770ffef16d2b53959" kindref="member">waitedStatus</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" kindref="member">READY</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="sys_process_8c_1a1fd8ccd9bf174a1b3ff78daa2b87872d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a1fd8ccd9bf174a1b3ff78daa2b87872d" kindref="member" tooltip="Blocks the calling process.">sysSelfBlock</ref>(){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" kindref="member">BLOCKED</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1a4e14e480ef0c76ed52ff2c261e9d13cb" kindref="member" tooltip="Forces the call to the multitasker.">forceMultitasker</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="sys_process_8c_1a309acd4364c8a2cac76e01219a583aa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a309acd4364c8a2cac76e01219a583aa0" kindref="member" tooltip="Unblocks the given pid process.">sysUnblock</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processTable[pid].state<sp/>!=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" kindref="member">BLOCKED</ref>){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[pid].<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" kindref="member">READY</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="sys_process_8c_1a2cd7c071907edcb9f8151c8519d4b27e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a2cd7c071907edcb9f8151c8519d4b27e" kindref="member" tooltip="Blocks the calling process until it&amp;#39;s tty is signaled.">waitTty</ref>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/>tty)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttyRestPlace[tty]<sp/>=<sp/>runningProcess-&gt;<ref refid="structprocess__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningProcess-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a376c1b6a3f75d283a2efacf737438d61" kindref="member">BLOCKED</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1a4e14e480ef0c76ed52ff2c261e9d13cb" kindref="member" tooltip="Forces the call to the multitasker.">forceMultitasker</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="sys_process_8c_1a7cf69c15da459e564717f8116eb75c57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a7cf69c15da459e564717f8116eb75c57" kindref="member" tooltip="Signals the given tty so that any blocked process from it can be unblocked.">signalTty</ref>(<ref refid="types_8h_1a10bbb7176245baeab9f398547c410779" kindref="member" tooltip="tty_t typedef.">tty_t</ref><sp/>tty)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/>ttyRestPlace[tty];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>processTable[pid].pid<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[pid].<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a6564f2f3e15be06b670547bbcaaf0798" kindref="member">READY</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttyRestPlace[tty]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alertWaitingProcesses(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*process;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>=<sp/>&amp;processTable[processTable[pid].<ref refid="structprocess__t_1a812d4e1057eab93f0c388dc6c00b2cf8" kindref="member">ppid</ref>];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>process-&gt;<ref refid="structprocess__t_1a89f234133d3efe315836311cbf21c64b" kindref="member">state</ref><sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a2ab3b1e8acf4975677202367f5bb0c21" kindref="member">WAITING_CHILD</ref><sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeUpProcess(process,<sp/>status);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_PROCESS;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(processTable[i].state<sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a61a718eb0f51f850ecc7985cba8b7c4b" kindref="member">WAITING_PID</ref>)<sp/>&amp;&amp;<sp/>(processTable[i].waitingPid<sp/>==<sp/>pid)<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeUpProcess(&amp;processTable[i],<sp/>status);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>process-&gt;<ref refid="structprocess__t_1a51c991682921a9f2a4de5cf819c29f17" kindref="member">sleepingPid</ref><sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ttyRestPlace[i]<sp/>==<sp/>process-&gt;<ref refid="structprocess__t_1a51c991682921a9f2a4de5cf819c29f17" kindref="member">sleepingPid</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttyRestPlace[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeUpProcess(&amp;processTable[process-&gt;<ref refid="structprocess__t_1a51c991682921a9f2a4de5cf819c29f17" kindref="member">sleepingPid</ref>],<sp/>status);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="sys_process_8c_1ab5b0962abeaa4a1657d1fc3d5931a612" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1ab5b0962abeaa4a1657d1fc3d5931a612" kindref="member" tooltip="Terminates the given process with the given status.">terminate</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>ppid;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppid<sp/>=<sp/>processTable[pid].ppid;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1aca2d241a951204f1f8e2d905f162dcbe" kindref="member" tooltip="The maximum amount of childs that a process could have.">MAX_CHILDS</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processTable[ppid].childs[i]<sp/>==<sp/>pid)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[ppid].childs[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[ppid].childsQty--;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processTable[pid].level<sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref><sp/>&amp;&amp;<sp/>processTable[pid].childsQty<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ttys_8h_1aca07223864f88814919b02e6729569a5" kindref="member" tooltip="Sets the pid to the process which is in focus.">sysSetTTYFocusedProcess</ref>((ppid<sp/>&gt;<sp/>0)<sp/>?<sp/>ppid<sp/>:<sp/>0,<sp/>processTable[pid].tty);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alertWaitingProcesses(pid,<sp/>status);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[pid].state<sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a240c1965a48eaf409ba68c4cc9462ac5" kindref="member">TERMINATED</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[pid].atomicity<sp/>=<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="sys_process_8c_1a18afd4bf4046ef60e7827333850e1bc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1a18afd4bf4046ef60e7827333850e1bc6" kindref="member" tooltip="Refreshes the process comsumption of every process.">refreshProcessesCPUs</ref>(){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>MAX_PROCESS<sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processTable[i].pid<sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>processTable[i].tickCounter;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>MAX_PROCESS<sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processTable[i].pid<sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].cpuPercent<sp/>=<sp/>processTable[i].tickCounter<sp/>/<sp/>total<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="sys_process_8c_1accfbf2e870cb5b019499cd068db1eb07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_process_8h_1accfbf2e870cb5b019499cd068db1eb07" kindref="member" tooltip="Clears the current tickcount of every process.">clearProcessesTicks</ref>(){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>MAX_PROCESS<sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processTable[i].pid<sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable[i].tickCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="sys_process_8c_1a155dc1e2b61c56c4c10c518f3e99387e" refkind="member"><highlight class="normal"><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="sys_process_8h_1aa1cd2078219adc47ca22033bf86a76be" kindref="member" tooltip="Retrieves the OS process table.">getProcessTable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processTable;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="sys_process_8c_1a872dbe3f7089cf045fee774b6c4cc937" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sys_process_8h_1ae09fcffc18c78e7ca54e5b4df10c235a" kindref="member" tooltip="Retrieves the given pid process name.">getProcessName</ref>(<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pid<sp/>&gt;<sp/>MAX_PROCESS<sp/>||<sp/>pid<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processTable[pid].name;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/sysProcess.c"/>
  </compounddef>
</doxygen>
