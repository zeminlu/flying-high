<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="sys_malloc_8h" kind="file">
    <compoundname>sysMalloc.h</compoundname>
    <includes refid="mem_module_8h" local="yes">memModule.h</includes>
    <includes refid="string_8h" local="yes">string.h</includes>
    <includedby refid="bin_8h" local="yes">inc/bin.h</includedby>
    <includedby refid="k_malloc_8h" local="yes">inc/kMalloc.h</includedby>
    <includedby refid="u_malloc_8h" local="yes">inc/uMalloc.h</includedby>
    <includedby refid="sys_malloc_8c" local="yes">src/sysMalloc.c</includedby>
    <incdepgraph>
      <node id="3641">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="3643">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="3638" relation="include">
        </childnode>
      </node>
      <node id="3642">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="3637" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3638" relation="include">
        </childnode>
      </node>
      <node id="3638">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
      </node>
      <node id="3635">
        <label>inc/sysMalloc.h</label>
        <link refid="sysMalloc.h"/>
        <childnode refid="3636" relation="include">
        </childnode>
        <childnode refid="3637" relation="include">
        </childnode>
      </node>
      <node id="3640">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="3641" relation="include">
        </childnode>
      </node>
      <node id="3637">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3638" relation="include">
        </childnode>
      </node>
      <node id="3636">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="3637" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3638" relation="include">
        </childnode>
      </node>
      <node id="3639">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3660">
        <label>inc/rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3646">
        <label>inc/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
      </node>
      <node id="3676">
        <label>src/shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="3656">
        <label>inc/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="3656" relation="include">
        </childnode>
      </node>
      <node id="3653">
        <label>src/bttlship.c</label>
        <link refid="bttlship_8c"/>
      </node>
      <node id="3665">
        <label>inc/shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
      </node>
      <node id="3659">
        <label>inc/syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
      </node>
      <node id="3669">
        <label>inc/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3670" relation="include">
        </childnode>
      </node>
      <node id="3670">
        <label>src/schedule.c</label>
        <link refid="schedule_8c"/>
      </node>
      <node id="3677">
        <label>src/bin.c</label>
        <link refid="bin_8c"/>
      </node>
      <node id="3675">
        <label>src/system.c</label>
        <link refid="system_8c"/>
      </node>
      <node id="3654">
        <label>inc/kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
      </node>
      <node id="3648">
        <label>inc/shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3674" relation="include">
        </childnode>
        <childnode refid="3676" relation="include">
        </childnode>
      </node>
      <node id="3672">
        <label>src/pQueueP.c</label>
        <link refid="p_queue_p_8c"/>
        <childnode refid="3672" relation="include">
        </childnode>
      </node>
      <node id="3674">
        <label>inc/system.h</label>
        <link refid="system_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3649">
        <label>inc/sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3672" relation="include">
        </childnode>
        <childnode refid="3673" relation="include">
        </childnode>
      </node>
      <node id="3666">
        <label>src/shMemory.c</label>
        <link refid="sh_memory_8c"/>
      </node>
      <node id="3657">
        <label>inc/keyboard_driver.h</label>
        <link refid="keyboard__driver_8h"/>
        <childnode refid="3658" relation="include">
        </childnode>
      </node>
      <node id="3644">
        <label>inc/sysMalloc.h</label>
        <link refid="sysMalloc.h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3654" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
      </node>
      <node id="3678">
        <label>src/sysMalloc.c</label>
        <link refid="sys_malloc_8c"/>
      </node>
      <node id="3655">
        <label>inc/ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3657" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
      </node>
      <node id="3652">
        <label>inc/bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
      </node>
      <node id="3651">
        <label>inc/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3654" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
      </node>
      <node id="3673">
        <label>src/sysProcess.c</label>
        <link refid="sys_process_8c"/>
      </node>
      <node id="3671">
        <label>src/process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="3667">
        <label>src/semaphore.c</label>
        <link refid="semaphore_8c"/>
      </node>
      <node id="3664">
        <label>inc/semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
      </node>
      <node id="3662">
        <label>src/syscall.c</label>
        <link refid="syscall_8c"/>
      </node>
      <node id="3647">
        <label>src/kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="3661">
        <label>src/rand.c</label>
        <link refid="rand_8c"/>
      </node>
      <node id="3663">
        <label>src/ttys.c</label>
        <link refid="ttys_8c"/>
      </node>
      <node id="3658">
        <label>src/keyboard_driver.c</label>
        <link refid="keyboard__driver_8c"/>
      </node>
      <node id="3668">
        <label>inc/uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
      </node>
      <node id="3645">
        <label>inc/bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3677" relation="include">
        </childnode>
      </node>
      <node id="3650">
        <label>inc/pQueueP.h</label>
        <link refid="p_queue_p_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sys_malloc_8h_1afc18fe654253c72492875d6b15506744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sysFree</definition>
        <argsstring>(void *ap, memArea_t *(*getMemoryArea)())</argsstring>
        <name>sysFree</name>
        <param>
          <type>void *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structmem_area__t" kindref="compound">memArea_t</ref> *(*)()</type>
          <declname>getMemoryArea</declname>
        </param>
        <briefdescription>
<para>Leaves avaiable the segment to be used in futures calls to sysMalloc. The memory segment is taken from the function pased by arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ap</parametername>
</parameternamelist>
<parameterdescription>
<para>The logical memory segment to be freed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getMemoryArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that returns the memory frame that sysMalloc wold be used in the future.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="sys_malloc_8h_1adac4283ee6b45334ca1ea574599d7532" kindref="member">sysRealloc()</ref> <ref refid="sys_malloc_8h_1a7472d23b0529e946d8dcdf5a0de26c52" kindref="member">sysMalloc()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/inc/sysMalloc.h" line="28" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysMalloc.c" bodystart="31" bodyend="33"/>
        <referencedby refid="u_malloc_8c_1adebb229f063e66907017098087cbe791" compoundref="u_malloc_8c" startline="16" endline="19">free</referencedby>
        <referencedby refid="k_malloc_8c_1ab10ef73295572f6facd6e0c9c84e1357" compoundref="k_malloc_8c" startline="28" endline="31">kFree</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_malloc_8h_1a7472d23b0529e946d8dcdf5a0de26c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * sysMalloc</definition>
        <argsstring>(size_t nbytes, memArea_t *(*getMemoryArea)())</argsstring>
        <name>sysMalloc</name>
        <param>
          <type><ref refid="types_8h_1a7b60c5629e55e8ec87a4547dd4abced4" kindref="member">size_t</ref></type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type><ref refid="structmem_area__t" kindref="compound">memArea_t</ref> *(*)()</type>
          <declname>getMemoryArea</declname>
        </param>
        <briefdescription>
<para>Function that gives a continuous segment of memory. This memory comes from the function getMemoryArea. It could return null if there is not enougth free space on that frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of continuous segment memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getMemoryArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Functions that gives the frame to use be used by sysMalloc.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The continuous segment of memory.</para></simplesect>
<simplesect kind="see"><para><ref refid="sys_malloc_8h_1afc18fe654253c72492875d6b15506744" kindref="member">sysFree()</ref> <ref refid="sys_malloc_8h_1adac4283ee6b45334ca1ea574599d7532" kindref="member">sysRealloc()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/inc/sysMalloc.h" line="45" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysMalloc.c" bodystart="48" bodyend="57"/>
        <referencedby refid="k_malloc_8c_1a56f36ea42ec22a22158c4fb5f841e82e" compoundref="k_malloc_8c" startline="32" endline="34">kMalloc</referencedby>
        <referencedby refid="u_malloc_8c_1a46627f45f4a4d33db3de37fce9b5a8a6" compoundref="u_malloc_8c" startline="20" endline="22">malloc</referencedby>
        <referencedby refid="sys_malloc_8c_1a9dd7a27b9a2dd7b9249af7fdef77fb4f" compoundref="sys_malloc_8c" startline="35" endline="46">sysRealloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_malloc_8h_1adac4283ee6b45334ca1ea574599d7532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * sysRealloc</definition>
        <argsstring>(void *ap, size_t size, memArea_t *(*getMemoryArea)())</argsstring>
        <name>sysRealloc</name>
        <param>
          <type>void *</type>
          <declname>ap</declname>
          <defname>ptr</defname>
        </param>
        <param>
          <type><ref refid="types_8h_1a7b60c5629e55e8ec87a4547dd4abced4" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structmem_area__t" kindref="compound">memArea_t</ref> *(*)()</type>
          <declname>getMemoryArea</declname>
        </param>
        <briefdescription>
<para>This function changes the original size of the logical memory to a new one if it&apos;s necesary.Returns null if theres not enough free space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Old logical memory segment, that could be moved to a new one. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new size of the continuous memory segment. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getMemoryArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that gives the frame to use be used by sysMalloc.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new continuous memory segment.</para></simplesect>
<simplesect kind="see"><para><ref refid="sys_malloc_8h_1afc18fe654253c72492875d6b15506744" kindref="member">sysFree()</ref> <ref refid="sys_malloc_8h_1a7472d23b0529e946d8dcdf5a0de26c52" kindref="member">sysMalloc()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/inc/sysMalloc.h" line="62" bodyfile="/Users/Luciano/Desktop/flying-high/src/sysMalloc.c" bodystart="35" bodyend="46"/>
        <references refid="string_8h_1aba088e716bccbc96d42da97e96316df1" compoundref="string_8c" startline="141" endline="152">memcpy</references>
        <references refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="defs_8h" startline="328">NULL</references>
        <references refid="sys_malloc_8h_1a7472d23b0529e946d8dcdf5a0de26c52" compoundref="sys_malloc_8c" startline="48" endline="57">sysMalloc</references>
        <referencedby refid="k_malloc_8c_1ad9fb012fb56b43ef1ab6078646973b3f" compoundref="k_malloc_8c" startline="35" endline="37">kRealloc</referencedby>
        <referencedby refid="u_malloc_8c_1a5ed3930d6e86bee548f632e2c571c736" compoundref="u_malloc_8c" startline="23" endline="25">realloc</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic malloc module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>SYSMALLOC_H_</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SYSMALLOC_H_</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mem_module_8h" kindref="compound" tooltip="The memory management / paging module.">memModule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_8h" kindref="compound" tooltip="Declaration of all functions that deals with strings and buffers.">string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_malloc_8h_1afc18fe654253c72492875d6b15506744" kindref="member" tooltip="Leaves avaiable the segment to be used in futures calls to sysMalloc. The memory...">sysFree</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ap,<sp/><ref refid="structmem_area__t" kindref="compound" tooltip="The mem area malloc struct.">memArea_t</ref><sp/>*<sp/>(*getMemoryArea)());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="sys_malloc_8h_1a7472d23b0529e946d8dcdf5a0de26c52" kindref="member" tooltip="Function that gives a continuous segment of memory. This memory comes from the function...">sysMalloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes,<sp/><ref refid="structmem_area__t" kindref="compound" tooltip="The mem area malloc struct.">memArea_t</ref><sp/>*<sp/>(*getMemoryArea)());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="sys_malloc_8h_1adac4283ee6b45334ca1ea574599d7532" kindref="member" tooltip="This function changes the original size of the logical memory to a new one if it&amp;#39;s...">sysRealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ap,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/><ref refid="structmem_area__t" kindref="compound" tooltip="The mem area malloc struct.">memArea_t</ref><sp/>*<sp/>(*getMemoryArea)());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/inc/sysMalloc.h"/>
  </compounddef>
</doxygen>
