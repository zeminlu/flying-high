.TH "inc/video_driver.h" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/video_driver.h \- 
.PP
Defines the basic function to manage the video screen, cursor & mouse pointer.  

.SH SYNOPSIS
.br
.PP
\fC#include 'io.h'\fP
.br
\fC#include 'types.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBmemcpy\fP (void *dest, const void *src, \fBsize_t\fP n)"
.br
.RI "\fIThe \fBmemcpy()\fP function copies n bytes from memory area src to memory area dest. The memory areas should not overlap. \fP"
.ti -1c
.RI "void \fBrefreshScreen\fP (void)"
.br
.RI "\fIUpdates all changes made to video buffer into screen. \fP"
.ti -1c
.RI "void \fBinitVideo\fP (int cursorEnabled)"
.br
.RI "\fIInitializes the video driver, by setting the initial cursor position, setting it's visibility, enabling the blinking cursor and defining cursor shape. \fP"
.ti -1c
.RI "void \fBincCursor\fP (void)"
.br
.RI "\fIIncrements the position of the cursor by one unit. Automatically resolves new lines and screen scrolling. \fP"
.ti -1c
.RI "void \fBdecCursor\fP (void)"
.br
.RI "\fIDecrements the position of the cursor by one unit. Automatically resolves jumps to previous lines. \fP"
.ti -1c
.RI "int \fBsetCursorVisibility\fP (int b)"
.br
.RI "\fISets the cursor's visibility. Zero to turn it off not zero to turn it on. \fP"
.ti -1c
.RI "int \fBsetCursorPosition\fP (int row, int col)"
.br
.RI "\fISets the cursor's position. \fP"
.ti -1c
.RI "int \fBsetCursorPositionByOffset\fP (int offset)"
.br
.RI "\fISets the cursor's position. \fP"
.ti -1c
.RI "void \fBgetCursorPosition\fP (int *row, int *col)"
.br
.RI "\fIGets the actual cursor's position. \fP"
.ti -1c
.RI "int \fBgetVideoColor\fP (void)"
.br
.RI "\fIGets the actual default video color. \fP"
.ti -1c
.RI "int \fBsetVideoColor\fP (int color)"
.br
.RI "\fISet the default video color. \fP"
.ti -1c
.RI "void \fBputCharAtCurrentPos\fP (int c, int color)"
.br
.RI "\fIPuts a character into the video buffer at the current cursor position. \fP"
.ti -1c
.RI "void \fBprintChar\fP (int c)"
.br
.RI "\fIPuts a character into the video buffer at the current position and moves the cursor. \fP"
.ti -1c
.RI "void \fBprintColorChar\fP (int c, int color)"
.br
.RI "\fIPuts a character into the video buffer at the current position and moves the cursor. \fP"
.ti -1c
.RI "int \fBputCharAtFixedPos\fP (int c, int color, int row, int col)"
.br
.RI "\fIPuts a character into the video buffer at a given position. \fP"
.ti -1c
.RI "int \fBputColoredStringAtFixedPos\fP (char *s, int *color, int length, int row, int col)"
.br
.RI "\fIPuts a string at a given position. \fP"
.ti -1c
.RI "void \fBfillScreen\fP (int c)"
.br
.RI "\fIFills the screen with a character. \fP"
.ti -1c
.RI "void \fBclearScreen\fP (void)"
.br
.ti -1c
.RI "int \fBgetVideoTabStop\fP (void)"
.br
.RI "\fIGets the video tab stop. \fP"
.ti -1c
.RI "int \fBsetVideoTabStop\fP (int num)"
.br
.RI "\fISets the video tab stop. \fP"
.ti -1c
.RI "int \fBgetVideoVTabStop\fP (void)"
.br
.RI "\fIGets the video vertical tab. \fP"
.ti -1c
.RI "int \fBsetVideoVTabStop\fP (int num)"
.br
.RI "\fISets the video vertical tab stop. \fP"
.ti -1c
.RI "void \fBupdateColor\fP (void)"
.br
.RI "\fIUpdates the hole screen with actual video color all colors will be changed. \fP"
.ti -1c
.RI "void \fBprintAlarm\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintBackspace\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintNewLine\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintLineFeed\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintReturn\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintTab\fP (void)"
.br
.RI "\fIBrief. \fP"
.ti -1c
.RI "void \fBprintVTab\fP (void)"
.br
.RI "\fIBrief. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Defines the basic function to manage the video screen, cursor & mouse pointer. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBvideo_driver.h\fP.
.SH "Function Documentation"
.PP 
.SS "void clearScreen (void)"Clears the screen 
.PP
Definition at line 425 of file video_driver.c.
.SS "void decCursor (void)"
.PP
Decrements the position of the cursor by one unit. Automatically resolves jumps to previous lines. 
.PP
Definition at line 287 of file video_driver.c.
.SS "void fillScreen (int c)"
.PP
Fills the screen with a character. 
.PP
Definition at line 413 of file video_driver.c.
.SS "void getCursorPosition (int * row, int * col)"
.PP
Gets the actual cursor's position. \fBParameters:\fP
.RS 4
\fIrow\fP a pointer to int where the actual row position will be returned. Must not be NULL. 
.br
\fIcol\fP a pointer to int where the acutal col position will bie returned. Must not be NULL. 
.RE
.PP

.PP
Definition at line 315 of file video_driver.c.
.SS "int getVideoColor (void)"
.PP
Gets the actual default video color. \fBReturns:\fP
.RS 4
the actual video color code 
.RE
.PP

.PP
Definition at line 326 of file video_driver.c.
.SS "int getVideoTabStop (void)"
.PP
Gets the video tab stop. 
.PP
Definition at line 336 of file video_driver.c.
.SS "int getVideoVTabStop (void)"
.PP
Gets the video vertical tab. 
.PP
Definition at line 348 of file video_driver.c.
.SS "void incCursor (void)"
.PP
Increments the position of the cursor by one unit. Automatically resolves new lines and screen scrolling. 
.PP
Definition at line 274 of file video_driver.c.
.SS "void initVideo (int cursorEnabled)"
.PP
Initializes the video driver, by setting the initial cursor position, setting it's visibility, enabling the blinking cursor and defining cursor shape. \fBParameters:\fP
.RS 4
\fIcursorEnabled\fP zero to disable the cursor, not zero to enable the cursor. 
.RE
.PP

.PP
Definition at line 176 of file video_driver.c.
.SS "void* memcpy (void * dest, const void * source, \fBsize_t\fP n)"
.PP
The \fBmemcpy()\fP function copies n bytes from memory area src to memory area dest. The memory areas should not overlap. \fBParameters:\fP
.RS 4
\fIdest\fP the destination memory address 
.br
\fIsource\fP the source memory address 
.br
\fIn\fP the amount of bytes to be copied
.RE
.PP
\fBReturns:\fP
.RS 4
A pointer to the copied memory. 
.RE
.PP

.PP
Definition at line 141 of file string.c.
.SS "void printAlarm (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 72 of file video_driver.c.
.SS "printBackspace (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 76 of file video_driver.c.
.SS "void printChar (int c)"
.PP
Puts a character into the video buffer at the current position and moves the cursor. \fBParameters:\fP
.RS 4
\fIc\fP the character to be putted into the video buffer 
.RE
.PP

.PP
Definition at line 367 of file video_driver.c.
.SS "void printColorChar (int c, int color)"
.PP
Puts a character into the video buffer at the current position and moves the cursor. \fBParameters:\fP
.RS 4
\fIc\fP the character to be putted into the video buffer 
.br
\fIcolor\fP the color code of the character. 
.RE
.PP

.PP
Definition at line 372 of file video_driver.c.
.SS "void printLineFeed (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 91 of file video_driver.c.
.SS "void printNewLine (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 83 of file video_driver.c.
.SS "void printReturn (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 103 of file video_driver.c.
.SS "void printTab (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 109 of file video_driver.c.
.SS "void printVTab (void)"
.PP
Brief. Use: 
.PP
.nf

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
f1() f2() 
.RE
.PP

.PP
Definition at line 124 of file video_driver.c.
.SS "void putCharAtCurrentPos (int c, int color)"
.PP
Puts a character into the video buffer at the current cursor position. \fBParameters:\fP
.RS 4
\fIc\fP the character to be putted into the video buffer 
.br
\fIcolor\fP the color code of the character 
.RE
.PP

.PP
Definition at line 361 of file video_driver.c.
.SS "int putCharAtFixedPos (int c, int color, int row, int col)"
.PP
Puts a character into the video buffer at a given position. \fBParameters:\fP
.RS 4
\fIc\fP the character to be putted into the video buffer 
.br
\fIcolor\fP the color code of the character. 
.br
\fIrow\fP the row position where the character will be putted 
.br
\fIcol\fP the col position where the character will be putted 
.RE
.PP

.PP
Definition at line 380 of file video_driver.c.
.SS "int putColoredStringAtFixedPos (char * s, int * color, int length, int row, int col)"
.PP
Puts a string at a given position. \fBParameters:\fP
.RS 4
\fIs\fP The string to be putted. 
.br
\fIcolor\fP a pointer to int with the color codes for each character or NULL to print with the default video color. 
.br
\fIlength\fP ParamDescription. 
.br
\fIrow\fP ParamDescription. 
.br
\fIcol\fP ParamDescription. 
.RE
.PP

.PP
Definition at line 394 of file video_driver.c.
.SS "void refreshScreen (void)"
.PP
Updates all changes made to video buffer into screen. 
.PP
Definition at line 233 of file video_driver.c.
.SS "int setCursorPosition (int row, int col)"
.PP
Sets the cursor's position. \fBParameters:\fP
.RS 4
\fIrow\fP the new row position. 
.br
\fIcol\fP the new col position.
.RE
.PP
\fBReturns:\fP
.RS 4
the offset from the (0,0) including the attribute byte. 
.RE
.PP

.PP
Definition at line 305 of file video_driver.c.
.SS "int setCursorPositionByOffset (int offset)"
.PP
Sets the cursor's position. \fBParameters:\fP
.RS 4
\fIoffset\fP the offset from the (0,0) including the attribute byte. 
.RE
.PP

.SS "int setCursorVisibility (int b)"
.PP
Sets the cursor's visibility. Zero to turn it off not zero to turn it on. \fBReturns:\fP
.RS 4
The actual state of visibility 
.RE
.PP

.PP
Definition at line 246 of file video_driver.c.
.SS "int setVideoColor (int color)"
.PP
Set the default video color. \fBParameters:\fP
.RS 4
\fIcolor\fP the new video color code 
.RE
.PP
\fBReturns:\fP
.RS 4
the new video color code 
.RE
.PP

.PP
Definition at line 331 of file video_driver.c.
.SS "int setVideoTabStop (int num)"
.PP
Sets the video tab stop. 
.PP
Definition at line 341 of file video_driver.c.
.SS "int setVideoVTabStop (int num)"
.PP
Sets the video vertical tab stop. 
.PP
Definition at line 353 of file video_driver.c.
.SS "void updateColor (void)"
.PP
Updates the hole screen with actual video color all colors will be changed. 
.PP
Definition at line 238 of file video_driver.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
