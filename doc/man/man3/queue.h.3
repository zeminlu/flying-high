.TH "inc/queue.h" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/queue.h \- 
.PP
Keyboard queue module.  

.SH SYNOPSIS
.br
.PP
\fC#include 'keyboard_buffer.h'\fP
.br
\fC#include 'types.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcharEnque\fP (\fBKeycode\fP elem)"
.br
.ti -1c
.RI "\fBKeycode\fP \fBcharDeque\fP (void)"
.br
.RI "\fIDequeue an element while the buffer is not Empty. \fP"
.ti -1c
.RI "int \fBkbBufferIsEmpty\fP (void)"
.br
.RI "\fIreturn if the buffer is empty \fP"
.in -1c
.SH "Detailed Description"
.PP 
Keyboard queue module. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBqueue.h\fP.
.SH "Function Documentation"
.PP 
.SS "keycode charDeque (void)"
.PP
Dequeue an element while the buffer is not Empty. \fBReturns:\fP
.RS 4
The keycode 
.RE
.PP

.PP
Definition at line 43 of file queue.c.
.SS "void charEnque (\fBKeycode\fP elem)"\fBParameters:\fP
.RS 4
\fIelem\fP This function receive the ASCII code of the key to enqueue in the buffer.
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the key was added or FALSE if the buffer is FULL 
.RE
.PP

.PP
Definition at line 21 of file queue.c.
.SS "int kbBufferIsEmpty (void)"
.PP
return if the buffer is empty \fBReturns:\fP
.RS 4
TRUE if it's empty, FALSE if not 
.RE
.PP

.PP
Definition at line 54 of file queue.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
