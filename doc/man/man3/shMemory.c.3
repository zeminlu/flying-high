.TH "src/shMemory.c" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/shMemory.c \- 
.PP
The shared memory IPC module.  

.SH SYNOPSIS
.br
.PP
\fC#include 'shMemory.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBshMem\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBFREE\fP   1"
.br
.ti -1c
.RI "#define \fBBUSY\fP   !FREE"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBshMem\fP \fBshMem_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBshmget\fP (\fBkey_t\fP key, int size)"
.br
.RI "\fIGets a new shared memory with the given key and size. \fP"
.ti -1c
.RI "char * \fBshmat\fP (int shmid, \fBkey_t\fP *semid)"
.br
.RI "\fIAttaches the current process to the shmid shared memory. \fP"
.ti -1c
.RI "int \fBshmdt\fP (int shmid)"
.br
.RI "\fIDetaches the current process form the shmid shared memory segment. \fP"
.ti -1c
.RI "void \fBinitializeShMems\fP ()"
.br
.RI "\fIInitializes all the shared memories. \fP"
.ti -1c
.RI "int \fB_sys_shmget\fP (\fBkey_t\fP key, int size)"
.br
.ti -1c
.RI "char * \fB_sys_shmat\fP (int shmid, \fBkey_t\fP *semid)"
.br
.ti -1c
.RI "int \fB_sys_shm_detach\fP (int shmid)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The shared memory IPC module. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBshMemory.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define BUSY   !FREE"
.PP
Definition at line 12 of file shMemory.c.
.SS "#define FREE   1"
.PP
Definition at line 11 of file shMemory.c.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBshMem\fP \fBshMem_t\fP"
.SH "Function Documentation"
.PP 
.SS "int _sys_shm_detach (int shmid)"
.PP
Definition at line 149 of file shMemory.c.
.SS "char* _sys_shmat (int shmid, \fBkey_t\fP * semid)"
.PP
Definition at line 124 of file shMemory.c.
.SS "int _sys_shmget (\fBkey_t\fP key, int size)"
.PP
Definition at line 79 of file shMemory.c.
.SS "void initializeShMems ()"
.PP
Initializes all the shared memories. 
.PP
Definition at line 60 of file shMemory.c.
.SS "char* shmat (int shmid, \fBkey_t\fP * semid)"
.PP
Attaches the current process to the shmid shared memory. \fBParameters:\fP
.RS 4
\fIshmid\fP The id of the shared memory segment. 
.br
\fIsemid\fP A pointer to a key_t variable where to store the shared memory inner semaphore id.
.RE
.PP
\fBReturns:\fP
.RS 4
A pointer to the shared memory space.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBshmget()\fP \fBshmdt()\fP 
.RE
.PP

.PP
Definition at line 35 of file shMemory.c.
.SS "int shmdt (int shmid)"
.PP
Detaches the current process form the shmid shared memory segment. \fBParameters:\fP
.RS 4
\fIshmid\fP The id of the shared memory segment.
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBshmget()\fP \fBshmat()\fP 
.RE
.PP

.PP
Definition at line 39 of file shMemory.c.
.SS "int shmget (\fBkey_t\fP key, int size)"
.PP
Gets a new shared memory with the given key and size. \fBParameters:\fP
.RS 4
\fIkey\fP The key for the shared memory segment. 
.br
\fIsize\fP The shared memory size.
.RE
.PP
\fBReturns:\fP
.RS 4
The id of the shared memory on success, -1 on error.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBshmat()\fP \fBshmdt()\fP 
.RE
.PP

.PP
Definition at line 31 of file shMemory.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
