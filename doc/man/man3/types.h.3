.TH "inc/types.h" 3 "18 May 2010" "Version 1.0" "flying-high" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/types.h \- 
.PP
Definition for system dependent types.  

.SH SYNOPSIS
.br
.PP
\fC#include 'defs.h'\fP
.br
\fC#include 'config.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBpage\fP"
.br
.ti -1c
.RI "struct \fBdirectory\fP"
.br
.ti -1c
.RI "struct \fBframe\fP"
.br
.ti -1c
.RI "struct \fBmemArea\fP"
.br
.ti -1c
.RI "struct \fBFILE\fP"
.br
.RI "\fIThe \fBFILE\fP struct. \fP"
.ti -1c
.RI "struct \fBheapStatus\fP"
.br
.RI "\fIThe heap status struct. \fP"
.ti -1c
.RI "struct \fBprocess_t\fP"
.br
.RI "\fIThe process struct. \fP"
.ti -1c
.RI "struct \fBstdInTTY\fP"
.br
.RI "\fIThe tty stdin struct. \fP"
.ti -1c
.RI "struct \fBstdOutTTY\fP"
.br
.RI "\fIThe tty stdout struct. \fP"
.ti -1c
.RI "struct \fBtty_s\fP"
.br
.RI "\fIThe \fBtty_s\fP struct. \fP"
.ti -1c
.RI "struct \fBsysTTY\fP"
.br
.RI "\fIThe tty system struct. \fP"
.ti -1c
.RI "struct \fBcommandT\fP"
.br
.RI "\fIThe command struct. \fP"
.ti -1c
.RI "struct \fBpropertyT\fP"
.br
.RI "\fIThe property struct. \fP"
.ti -1c
.RI "struct \fBdataSlotShell\fP"
.br
.RI "\fIThe shell data slot struct. \fP"
.ti -1c
.RI "struct \fBDESCR_SEG\fP"
.br
.RI "\fIOS segment descriptor struct. \fP"
.ti -1c
.RI "struct \fBDESCR_INT\fP"
.br
.RI "\fIOS interrupt descriptor struct. \fP"
.ti -1c
.RI "struct \fBIDTR\fP"
.br
.RI "\fIOS \fBIDTR\fP struct. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef unsigned char \fBKeycode\fP"
.br
.RI "\fIKeycode typedef. \fP"
.ti -1c
.RI "typedef unsigned int \fBsize_t\fP"
.br
.RI "\fIsize_t typedef. \fP"
.ti -1c
.RI "typedef unsigned int \fBssize_t\fP"
.br
.RI "\fIssize_t typedef. \fP"
.ti -1c
.RI "typedef int \fBpid_t\fP"
.br
.RI "\fIpid_t typedef. \fP"
.ti -1c
.RI "typedef int \fBkey_t\fP"
.br
.RI "\fIkey_t typedef. \fP"
.ti -1c
.RI "typedef int \fBtty_t\fP"
.br
.RI "\fItty_t typedef. \fP"
.ti -1c
.RI "typedef void( \fBpfunc_t\fP )(void *)"
.br
.RI "\fIpfunc_t typedef. \fP"
.ti -1c
.RI "typedef struct \fBpage\fP \fBpage_t\fP"
.br
.ti -1c
.RI "typedef \fBpage_t\fP \fBpageTable_t\fP [PAGE_ENTRIES_PER_TABLE]"
.br
.ti -1c
.RI "typedef struct \fBdirectory\fP \fBdirectory_t\fP"
.br
.ti -1c
.RI "typedef struct \fBframe\fP \fBframe_t\fP"
.br
.ti -1c
.RI "typedef struct \fBmemArea\fP \fBmemArea_t\fP"
.br
.ti -1c
.RI "typedef \fBframe_t\fP \fBframesTable_t\fP [TOTAL_FRAMES_QTY]"
.br
.ti -1c
.RI "typedef struct \fBheapStatus\fP \fBheapStatus\fP"
.br
.ti -1c
.RI "typedef struct \fBprocess_t\fP \fBprocess_t\fP"
.br
.ti -1c
.RI "typedef struct \fBstdInTTY\fP \fBstdInTTY\fP"
.br
.ti -1c
.RI "typedef struct \fBstdOutTTY\fP \fBstdOutTTY\fP"
.br
.ti -1c
.RI "typedef struct \fBtty_s\fP \fBtty_s\fP"
.br
.ti -1c
.RI "typedef struct \fBsysTTY\fP \fBsysTTY\fP"
.br
.ti -1c
.RI "typedef void(* \fBshellFuncT\fP )(char *)"
.br
.RI "\fIThe shellFuncT typedef. \fP"
.ti -1c
.RI "typedef int(* \fBpFuncT\fP )(char *)"
.br
.RI "\fIthe pFuncT typedef. \fP"
.ti -1c
.RI "typedef \fBdataSlotShell\fP * \fBdataShell\fP"
.br
.RI "\fIThe shell data struct typedef. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSYSCALL_IDS\fP { \fB_SYS_WRITE\fP, \fB_SYS_READ\fP, \fB_SYS_MEMMAP\fP, \fB_SYS_CREATE\fP, \fB_SYS_EXIT\fP, \fB_SYS_SET_TTY\fP, \fB_SYS_GET_TTY\fP, \fB_SYS_GET_PID\fP, \fB_SYS_GET_PPID\fP, \fB_SYS_WAIT_PID\fP, \fB_SYS_KILL\fP, \fB_SYS_FREAD\fP, \fB_SYS_FWRITE\fP, \fB_SYS_GET_TTY_FP\fP, \fB_SYS_SET_TTY_FP\fP, \fB_SYS_SHMGET\fP, \fB_SYS_SHMAT\fP, \fB_SYS_SHM_DETACH\fP, \fB_SYS_SEM_GET\fP, \fB_SYS_SEM_FREE\fP, \fB_SYS_SEM_WAIT\fP, \fB_SYS_SEM_SIGNAL\fP, \fB_SYS_WAIT\fP, \fB_SYS_SET_LEVEL\fP, \fB_SYS_GET_LEVEL\fP, \fB_SYS_GET_PRIO\fP, \fB_SYS_SET_PRIO\fP, \fB_SYS_TIME\fP, \fB_SYS_SET_ATOM\fP, \fB_SYS_UPTIME\fP, \fB_SYS_SET_TTY_MODE\fP, \fB_SYS_GET_TTY_MODE\fP }"
.br
.RI "\fIThe Syscall id's enum. \fP"
.ti -1c
.RI "enum \fBSTATES\fP { \fBRUNNING\fP, \fBREADY\fP, \fBBLOCKED\fP, \fBWAITING_CHILD\fP, \fBWAITING_TIME\fP, \fBWAITING_PID\fP, \fBTERMINATED\fP, \fBDEAD\fP }"
.br
.RI "\fIThe process states enum. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition for system dependent types. 

\fBAuthor:\fP
.RS 4
Luciano Zemin, Nicolás Magni, Nicolás Purita 
.RE
.PP

.PP
Definition in file \fBtypes.h\fP.
.SH "Typedef Documentation"
.PP 
.SS "\fBdataShell\fP"
.PP
The shell data struct typedef. 
.PP
Definition at line 326 of file types.h.
.SS "typedef struct \fBdirectory\fP  \fBdirectory_t\fP"
.SS "typedef struct \fBframe\fP  \fBframe_t\fP"
.SS "typedef \fBframe_t\fP \fBframesTable_t\fP[TOTAL_FRAMES_QTY]"
.PP
Definition at line 116 of file types.h.
.SS "typedef struct \fBheapStatus\fP  \fBheapStatus\fP"
.SS "\fBkey_t\fP"
.PP
key_t typedef. 
.PP
Definition at line 48 of file types.h.
.SS "\fBKeycode\fP"
.PP
Keycode typedef. 
.PP
Definition at line 24 of file types.h.
.SS "typedef struct \fBmemArea\fP  \fBmemArea_t\fP"
.SS "typedef struct \fBpage\fP  \fBpage_t\fP"
.SS "typedef \fBpage_t\fP \fBpageTable_t\fP[PAGE_ENTRIES_PER_TABLE]"
.PP
Definition at line 82 of file types.h.
.SS "\fBpfunc_t\fP"
.PP
pfunc_t typedef. 
.PP
Definition at line 60 of file types.h.
.SS "\fBpFuncT\fP"
.PP
the pFuncT typedef. 
.PP
Definition at line 298 of file types.h.
.SS "\fBpid_t\fP"
.PP
pid_t typedef. 
.PP
Definition at line 42 of file types.h.
.SS "typedef struct \fBprocess_t\fP  \fBprocess_t\fP"
.SS "\fBshellFuncT\fP"
.PP
The shellFuncT typedef. 
.PP
Definition at line 282 of file types.h.
.SS "\fBsize_t\fP"
.PP
size_t typedef. 
.PP
Definition at line 30 of file types.h.
.SS "\fBssize_t\fP"
.PP
ssize_t typedef. 
.PP
Definition at line 36 of file types.h.
.SS "typedef struct \fBstdInTTY\fP \fBstdInTTY\fP"
.SS "typedef struct \fBstdOutTTY\fP \fBstdOutTTY\fP"
.SS "typedef struct \fBsysTTY\fP \fBsysTTY\fP"
.SS "typedef struct \fBtty_s\fP \fBtty_s\fP"
.SS "\fBtty_t\fP"
.PP
tty_t typedef. 
.PP
Definition at line 54 of file types.h.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBSTATES\fP"
.PP
The process states enum. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIRUNNING \fP\fP
.TP
\fB\fIREADY \fP\fP
.TP
\fB\fIBLOCKED \fP\fP
.TP
\fB\fIWAITING_CHILD \fP\fP
.TP
\fB\fIWAITING_TIME \fP\fP
.TP
\fB\fIWAITING_PID \fP\fP
.TP
\fB\fITERMINATED \fP\fP
.TP
\fB\fIDEAD \fP\fP

.PP
Definition at line 218 of file types.h.
.SS "enum \fBSYSCALL_IDS\fP"
.PP
The Syscall id's enum. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI_SYS_WRITE \fP\fP
.TP
\fB\fI_SYS_READ \fP\fP
.TP
\fB\fI_SYS_MEMMAP \fP\fP
.TP
\fB\fI_SYS_CREATE \fP\fP
.TP
\fB\fI_SYS_EXIT \fP\fP
.TP
\fB\fI_SYS_SET_TTY \fP\fP
.TP
\fB\fI_SYS_GET_TTY \fP\fP
.TP
\fB\fI_SYS_GET_PID \fP\fP
.TP
\fB\fI_SYS_GET_PPID \fP\fP
.TP
\fB\fI_SYS_WAIT_PID \fP\fP
.TP
\fB\fI_SYS_KILL \fP\fP
.TP
\fB\fI_SYS_FREAD \fP\fP
.TP
\fB\fI_SYS_FWRITE \fP\fP
.TP
\fB\fI_SYS_GET_TTY_FP \fP\fP
.TP
\fB\fI_SYS_SET_TTY_FP \fP\fP
.TP
\fB\fI_SYS_SHMGET \fP\fP
.TP
\fB\fI_SYS_SHMAT \fP\fP
.TP
\fB\fI_SYS_SHM_DETACH \fP\fP
.TP
\fB\fI_SYS_SEM_GET \fP\fP
.TP
\fB\fI_SYS_SEM_FREE \fP\fP
.TP
\fB\fI_SYS_SEM_WAIT \fP\fP
.TP
\fB\fI_SYS_SEM_SIGNAL \fP\fP
.TP
\fB\fI_SYS_WAIT \fP\fP
.TP
\fB\fI_SYS_SET_LEVEL \fP\fP
.TP
\fB\fI_SYS_GET_LEVEL \fP\fP
.TP
\fB\fI_SYS_GET_PRIO \fP\fP
.TP
\fB\fI_SYS_SET_PRIO \fP\fP
.TP
\fB\fI_SYS_TIME \fP\fP
.TP
\fB\fI_SYS_SET_ATOM \fP\fP
.TP
\fB\fI_SYS_UPTIME \fP\fP
.TP
\fB\fI_SYS_SET_TTY_MODE \fP\fP
.TP
\fB\fI_SYS_GET_TTY_MODE \fP\fP

.PP
Definition at line 179 of file types.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for flying-high from the source code.
