<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="shell_8c" kind="file">
    <compoundname>shell.c</compoundname>
    <includes refid="shell_8h" local="yes">shell.h</includes>
    <incdepgraph>
      <node id="4417">
        <label>rand.h</label>
        <link refid="rand_8h"/>
        <childnode refid="4405" relation="include">
        </childnode>
      </node>
      <node id="4392">
        <label>src/shell.c</label>
        <link refid="shell.c"/>
        <childnode refid="4393" relation="include">
        </childnode>
      </node>
      <node id="4399">
        <label>colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="4422">
        <label>shMemory.h</label>
        <link refid="sh_memory_8h"/>
        <childnode refid="4420" relation="include">
        </childnode>
      </node>
      <node id="4418">
        <label>int80.h</label>
        <link refid="int80_8h"/>
      </node>
      <node id="4405">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4407" relation="include">
        </childnode>
        <childnode refid="4408" relation="include">
        </childnode>
        <childnode refid="4411" relation="include">
        </childnode>
        <childnode refid="4412" relation="include">
        </childnode>
      </node>
      <node id="4408">
        <label>schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4409" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
      </node>
      <node id="4400">
        <label>unistd.h</label>
        <link refid="unistd_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4394">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4400" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4396">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4397" relation="include">
        </childnode>
        <childnode refid="4398" relation="include">
        </childnode>
      </node>
      <node id="4416">
        <label>kMalloc.h</label>
        <link refid="k_malloc_8h"/>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4410" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
      </node>
      <node id="4393">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4400" relation="include">
        </childnode>
        <childnode refid="4403" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4399" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
        <childnode refid="4409" relation="include">
        </childnode>
        <childnode refid="4419" relation="include">
        </childnode>
        <childnode refid="4408" relation="include">
        </childnode>
        <childnode refid="4421" relation="include">
        </childnode>
      </node>
      <node id="4407">
        <label>kasm.h</label>
        <link refid="kasm_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4403">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4402" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4401">
        <label>video_driver.h</label>
        <link refid="video__driver_8h"/>
        <childnode refid="4402" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4415">
        <label>sysProcess.h</label>
        <link refid="sys_process_8h"/>
        <childnode refid="4412" relation="include">
        </childnode>
        <childnode refid="4414" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4408" relation="include">
        </childnode>
        <childnode refid="4405" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4416" relation="include">
        </childnode>
        <childnode refid="4417" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
      </node>
      <node id="4402">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="4411">
        <label>kernelDepth.h</label>
        <link refid="kernel_depth_8h"/>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4407" relation="include">
        </childnode>
      </node>
      <node id="4410">
        <label>sysMalloc.h</label>
        <link refid="sys_malloc_8h"/>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
      </node>
      <node id="4398">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4399" relation="include">
        </childnode>
      </node>
      <node id="4412">
        <label>ttys.h</label>
        <link refid="ttys_8h"/>
        <childnode refid="4413" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4414" relation="include">
        </childnode>
        <childnode refid="4415" relation="include">
        </childnode>
        <childnode refid="4405" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4400" relation="include">
        </childnode>
        <childnode refid="4416" relation="include">
        </childnode>
      </node>
      <node id="4421">
        <label>bttlship.h</label>
        <link refid="bttlship_8h"/>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
        <childnode refid="4422" relation="include">
        </childnode>
        <childnode refid="4420" relation="include">
        </childnode>
        <childnode refid="4417" relation="include">
        </childnode>
        <childnode refid="4412" relation="include">
        </childnode>
      </node>
      <node id="4395">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4414">
        <label>keyboard_buffer.h</label>
        <link refid="keyboard__buffer_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4404">
        <label>process.h</label>
        <link refid="process_8h"/>
        <childnode refid="4405" relation="include">
        </childnode>
        <childnode refid="4418" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4415" relation="include">
        </childnode>
      </node>
      <node id="4413">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="4414" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4420">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
      </node>
      <node id="4406">
        <label>memModule.h</label>
        <link refid="mem_module_8h"/>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4409">
        <label>uMalloc.h</label>
        <link refid="u_malloc_8h"/>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4410" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
      </node>
      <node id="4397">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="4419">
        <label>bin.h</label>
        <link refid="bin_8h"/>
        <childnode refid="4419" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4414" relation="include">
        </childnode>
        <childnode refid="4415" relation="include">
        </childnode>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4405" relation="include">
        </childnode>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4407" relation="include">
        </childnode>
        <childnode refid="4412" relation="include">
        </childnode>
        <childnode refid="4400" relation="include">
        </childnode>
        <childnode refid="4410" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4408" relation="include">
        </childnode>
        <childnode refid="4416" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4402" relation="include">
        </childnode>
        <childnode refid="4399" relation="include">
        </childnode>
        <childnode refid="4409" relation="include">
        </childnode>
        <childnode refid="4420" relation="include">
        </childnode>
        <childnode refid="4417" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="shell_8c_1a881961d263cfa8c42ca67419559b3c00" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* prompt</definition>
        <argsstring></argsstring>
        <name>prompt</name>
        <initializer> &quot;root@flyingHighOS$&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="11" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shell_8c_1a5b6e74f4a162bb6525b91749524eb3ff" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char bufferA[MAX_LINE]</definition>
        <argsstring>[MAX_LINE]</argsstring>
        <name>bufferA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="12" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shell_8c_1a4cdb92c386803c0cdd38d16b0d681fae" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char bufferB[MAX_LINE]</definition>
        <argsstring>[MAX_LINE]</argsstring>
        <name>bufferB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="13" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shell_8c_1a0cd571592dbb990b227795ae30a098ad" prot="public" static="yes" mutable="no">
        <type><ref refid="structdata_slot_shell" kindref="compound">dataSlotShell</ref></type>
        <definition>dataSlotShell tableDataShell[MAX_TTY]</definition>
        <argsstring>[MAX_TTY]</argsstring>
        <name>tableDataShell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="15" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shell_8c_1a3c904a3a1bfb1e34e8b635606b76cfef" prot="public" static="yes" mutable="no">
        <type><ref refid="structproperty_t" kindref="compound">propertyT</ref></type>
        <definition>propertyT properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <initializer> {
	{&quot;video-color&quot;, videoColor, &quot;Changes the video color. Valid colors: BLUE, GREEN, CYAN, RED and MAGENTA.&quot;},
	{&quot;tab-stop&quot;, tabStop, &quot;Changes amount of spaces a tab stop inserts into a line.&quot;},
	{&quot;&quot;, NULL}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="126" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shell_8c_1ac2bfedae1a0659612a0bf5930eff9aeb" prot="public" static="yes" mutable="no">
        <type><ref refid="structcommand_t" kindref="compound">commandT</ref></type>
        <definition>commandT commands[]</definition>
        <argsstring>[]</argsstring>
        <name>commands</name>
        <initializer> {
	{&quot;clear&quot;, clear, &quot;Clears Screen.&quot;},
	{&quot;echo&quot;, echo, &quot;Prints the arguments on the standard output.&quot;},
	{&quot;logout&quot;, logout, &quot;Terminates the shell application.&quot;},
	{&quot;help&quot;, help, &quot;Prints this list of commands.&quot;},
	{&quot;set&quot;, set, &quot;Sets a system property. Use: set property=value.&quot;},
	{&quot;reboot&quot;, reboot, &quot;Reboots the system.&quot;},
	{&quot;shutdown&quot;, shutdown, &quot;Shuts the system down.&quot;},
	{&quot;mkdir&quot;, mkdir, &quot;Makes a new directory.&quot;},
	{&quot;print-sysproperties&quot;, printProperties, &quot;Prints the lisf of system properties that can be set by the set command.&quot;},
	{&quot;print-statement&quot;, printPhrasing, &quot;Prints the statment of the project.&quot;},
	{&quot;top&quot;, startTop, &quot;Runs the top process.&quot;},
	{&quot;kill&quot;,startKill, &quot;Takes the pid of the standar input, and Kill the process associated.&quot;},
	{&quot;printA&quot;, startPrintA, &quot;Prints &apos;A&apos; in the stdout, could be running in background.&quot;},
	{&quot;printB&quot;, startPrintB, &quot;Prints &apos;B&apos; in the stdout, could be running in background.&quot;},
	{&quot;nothing&quot;, startNothing, &quot;An idle process, could be running in background.&quot;},
	{&quot;pageFault&quot;, startPageFault, &quot;Force a <ref refid="structpage" kindref="compound">page</ref> fault exception.&quot;},
	{&quot;scheduling&quot;, changeSchedule, &quot;Change the Schedule Algorithm, if it&apos;s running Round Robin, it changes to RPG and viceversa&quot;},
	{&quot;battleship&quot;, startBattleShip, &quot;Starts Battleship&quot;},
	{&quot;&quot;, NULL, &quot;&quot;}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="198" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shell_8c_1a2879dea7c1ce73666eefe0dce44ea0d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initGlobalDataShell</definition>
        <argsstring>()</argsstring>
        <name>initGlobalDataShell</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the data structures for the shells. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="17" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="17" bodyend="24"/>
        <references refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" compoundref="config_8h" startline="123">MAX_TTY</references>
        <references refid="structdata_slot_shell_1ae0d46a978d5cd6707411f276ad869b9c" compoundref="types_8h" startline="315">dataSlotShell::pid</references>
        <referencedby refid="bin_8c_1a236e454e493fc9b262f746305660a2eb" compoundref="bin_8c" startline="217" endline="258">welcome</referencedby>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a06c86ea191ecc7a851f260ea3baca7e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int initDataShell</definition>
        <argsstring>()</argsstring>
        <name>initDataShell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="26" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="26" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1aea71aa87d49f97476eeec9bde152cfc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int getGlobalDataIndex</definition>
        <argsstring>()</argsstring>
        <name>getGlobalDataIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="46" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1aff5e641750265af57346d5c31ff2aeed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int getColor</definition>
        <argsstring>(char *value, int *color)</argsstring>
        <name>getColor</name>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="63" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="62" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a852e056396e2a1279234962ed6cc8403" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int videoColor</definition>
        <argsstring>(char *value)</argsstring>
        <name>videoColor</name>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="87" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="86" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a53f43c649b781690017f6ccc255dd313" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tabStop</definition>
        <argsstring>(char *value)</argsstring>
        <name>tabStop</name>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="110" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1ac60a859b3f36ee76d4daf3e26cd85b88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int setProperty</definition>
        <argsstring>(char *property, char *value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>char *</type>
          <declname>property</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="129" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="128" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1aa7827ee68ad0e2813116c003150809f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void printProperties</definition>
        <argsstring>(char *value)</argsstring>
        <name>printProperties</name>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="142" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="141" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a291f42b1c847912c5b5b31d4370aa454" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcommand_t" kindref="compound">commandT</ref> *</type>
        <definition>static commandT * getCommand</definition>
        <argsstring>(char *command)</argsstring>
        <name>getCommand</name>
        <param>
          <type>char *</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="157" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="447" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a7e3eaf28c8767fb93e2d06c98ab50b9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void clear</definition>
        <argsstring>(char *)</argsstring>
        <name>clear</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="160" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a2b812f364211ea07014c891767c15b8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void echo</definition>
        <argsstring>(char *)</argsstring>
        <name>echo</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="161" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a79f35e7910d3f37e97fa602e884f3d8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logout</definition>
        <argsstring>(char *)</argsstring>
        <name>logout</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="162" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="238" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a7e581d998dc660a20a852d0f3913f9b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void help</definition>
        <argsstring>(char *)</argsstring>
        <name>help</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="163" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="253" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1ae39148b58c36078a23fbce3bb2aed7a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set</definition>
        <argsstring>(char *)</argsstring>
        <name>set</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="164" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="282" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a73df82f84371366a5c3d4ba03717d88c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reboot</definition>
        <argsstring>(char *)</argsstring>
        <name>reboot</name>
        <param>
          <type>char *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="165" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a3fe3ddb8ce329e11aac2c6fb0fcfccdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shutdown</definition>
        <argsstring>(char *)</argsstring>
        <name>shutdown</name>
        <param>
          <type>char *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="166" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1afd2524a811c767870be70a0084ceb07a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mkdir</definition>
        <argsstring>(char *)</argsstring>
        <name>mkdir</name>
        <param>
          <type>char *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="167" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a29327eb6d3f5f94f1f73eee335bc04a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void printPhrasing</definition>
        <argsstring>(char *)</argsstring>
        <name>printPhrasing</name>
        <param>
          <type>char *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="168" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="200" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a4e3f0862c1133a9be92ae0bd26238882" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startTop</definition>
        <argsstring>(char *)</argsstring>
        <name>startTop</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="169" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="299" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a0e679f00e7bb19b93ee64f5b52debb9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startKill</definition>
        <argsstring>(char *)</argsstring>
        <name>startKill</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="170" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1aaa4cc45f03b0009d1c8b01dc83437fef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startPrintA</definition>
        <argsstring>(char *)</argsstring>
        <name>startPrintA</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="171" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="360" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1aeb38fd33f61c839f62edb15c220bad76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startPrintB</definition>
        <argsstring>(char *)</argsstring>
        <name>startPrintB</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="172" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="380" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a072c9383be0870ac65e07e86359eb253" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startNothing</definition>
        <argsstring>(char *)</argsstring>
        <name>startNothing</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="173" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="400" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a1ea0535bd53f7622036db7dfd279b5ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startPageFault</definition>
        <argsstring>(char *)</argsstring>
        <name>startPageFault</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="174" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="424" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a1f4cda5ba1adbb83043609ee14620af5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void changeSchedule</definition>
        <argsstring>(char *)</argsstring>
        <name>changeSchedule</name>
        <param>
          <type>char *</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="175" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1ad0e8d6bf5d32c9377a609d244fb9c48c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void startBattleShip</definition>
        <argsstring>(char *args)</argsstring>
        <name>startBattleShip</name>
        <param>
          <type>char *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="176" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="343" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a510282bc0aed7282768ea23433b37951" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void printPrompt</definition>
        <argsstring>()</argsstring>
        <name>printPrompt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="458" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a8c59e5b7f194945fffc6f34288860240" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parseCommand</definition>
        <argsstring>(void)</argsstring>
        <name>parseCommand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="463" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="462" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell</definition>
        <argsstring>(void)</argsstring>
        <name>shell</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The function that runs the shell application. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Luciano/Desktop/flying-high/src/shell.c" line="498" bodyfile="/Users/Luciano/Desktop/flying-high/src/shell.c" bodystart="497" bodyend="538"/>
        <references refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" compoundref="defs_8h" startline="118">ATOMIC</references>
        <references refid="stdio_8h_1a59adc4c82490d23754cd39c2fb99b0da" compoundref="stdio_8h" startline="19">EOF</references>
        <references refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="defs_8h" startline="37">FALSE</references>
        <references refid="stdio_8h_1ac0484b3e3a4d8361d91c3322440f9195" compoundref="stdio_8h" startline="56">getchar</references>
        <references refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" compoundref="process_8c" startline="47" endline="49">getpid</references>
        <references refid="process_8h_1a109666f73149f2d6bbead68763749fbd" compoundref="process_8c" startline="35" endline="37">getTty</references>
        <references refid="structdata_slot_shell_1a750b5d744c39a06bfb13e6eb010e35d0" compoundref="types_8h" startline="319">dataSlotShell::index</references>
        <references refid="structdata_slot_shell_1ae8b496c8abc98d4ba2e5f3d7992c93b7" compoundref="types_8h" startline="317">dataSlotShell::lineBuffer</references>
        <references refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" compoundref="config_8h" startline="149">MAX_LINE</references>
        <references refid="stdio_8h_1a049d7c6dddcd2eafdf1349942dbdac88" compoundref="stdio_8h" startline="61">puti</references>
        <references refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" compoundref="stdio_8h" startline="46">puts</references>
        <references refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" compoundref="types_8h" startline="219">RUNNING</references>
        <references refid="stdio_8h_1ab7f4e33be6189512770d5aaa43bd03fe" compoundref="sys_process_8c" startline="16">runningProcess</references>
        <references refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" compoundref="process_8c" startline="99" endline="101">setProcessAtomicity</references>
        <references refid="structdata_slot_shell_1a6e27f49150e9a14580fb313cc2777e00" compoundref="types_8h" startline="316">dataSlotShell::status</references>
        <references refid="structprocess__t_1af7f414d19241988592fad1bc470e8761" compoundref="types_8h" startline="147">process_t::tty</references>
        <references refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" compoundref="defs_8h" startline="123">UNATOMIC</references>
        <references refid="sys_process_8h_1a2cd7c071907edcb9f8151c8519d4b27e" compoundref="sys_process_8c" startline="157" endline="163">waitTty</references>
        <referencedby refid="bin_8c_1a5bfde7b5020b14bdcb1c9269ab308dc5" compoundref="bin_8c" startline="14" endline="61">init</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The shell process module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Luciano Zemin, Nicolás Magni, Nicolás Purita </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell_8h" kindref="compound" tooltip="The shell process module.">shell.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>prompt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;root@flyingHighOS$&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="shell_8c_1a5b6e74f4a162bb6525b91749524eb3ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a5b6e74f4a162bb6525b91749524eb3ff" kindref="member">bufferA</ref>[<ref refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" kindref="member" tooltip="The length of the shell buffer.">MAX_LINE</ref>];</highlight></codeline>
<codeline lineno="13" refid="shell_8c_1a4cdb92c386803c0cdd38d16b0d681fae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a4cdb92c386803c0cdd38d16b0d681fae" kindref="member">bufferB</ref>[<ref refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" kindref="member" tooltip="The length of the shell buffer.">MAX_LINE</ref>];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdata_slot_shell" kindref="compound" tooltip="The shell data slot struct.">dataSlotShell</ref><sp/>tableDataShell[<ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="shell_8c_1a2879dea7c1ce73666eefe0dce44ea0d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8h_1a3bffbbc4425ed2ee988c21ea67c09202" kindref="member" tooltip="Initializes the data structures for the shells.">initGlobalDataShell</ref>(){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initDataShell(){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid<sp/>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pid<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a44756bcafe20e3d49defdbab056ed7c2" kindref="member" tooltip="The maximum amount of ttys.">MAX_TTY</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tableDataShell[i].pid<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1a6e27f49150e9a14580fb313cc2777e00" kindref="member">status</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1a750b5d744c39a06bfb13e6eb010e35d0" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1ae8b496c8abc98d4ba2e5f3d7992c93b7" kindref="member">lineBuffer</ref><sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*<sp/><ref refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" kindref="member" tooltip="The length of the shell buffer.">MAX_LINE</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[i].<ref refid="structdata_slot_shell_1a17d176b0ae4937f21ebecf9d335c1f9e" kindref="member">enteredCommand</ref><sp/>=<sp/><ref refid="u_malloc_8h_1a31161ef8eddd18e7781cb947f6f627d5" kindref="member" tooltip="returns a continuous segment of user memory. It could return null if there is not...">malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*<sp/><ref refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" kindref="member" tooltip="The length of the shell buffer.">MAX_LINE</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="DefineBrief.">TRUE</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getGlobalDataIndex(){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_TTY;<sp/>i++){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tableDataShell[i].pid<sp/>==<sp/>pid){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Exit<sp/>with<sp/>error,<sp/>no<sp/>a<sp/>valid<sp/>pid,<sp/>or<sp/>No<sp/>sta<sp/>en<sp/>la<sp/>tabla*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SYSTEM<sp/>PROPERTIES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getColor(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>color)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a54d972ccd875da7d6e9ef4afc2d9f586" kindref="member" tooltip="Passes every UpperCase character from string to LowerCase.">toLowerCase</ref>(value);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1a7b3b25cba33b07c303f3060fe41887f6" kindref="member">BLACK</ref>,<ref refid="colors_8h_1a7b3b25cba33b07c303f3060fe41887f6" kindref="member">BLACK</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1a79d10e672abb49ad63eeaa8aaef57c38" kindref="member">BLUE</ref>,<ref refid="colors_8h_1a79d10e672abb49ad63eeaa8aaef57c38" kindref="member">BLUE</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1acfbc006ea433ad708fdee3e82996e721" kindref="member">GREEN</ref>,<ref refid="colors_8h_1acfbc006ea433ad708fdee3e82996e721" kindref="member">GREEN</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;cyan&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1ad243f93c16bc4c1d3e0a13b84421d760" kindref="member">CYAN</ref>,<ref refid="colors_8h_1ad243f93c16bc4c1d3e0a13b84421d760" kindref="member">CYAN</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1a8d23feea868a983c8c2b661e1e16972f" kindref="member">RED</ref>,<ref refid="colors_8h_1a8d23feea868a983c8c2b661e1e16972f" kindref="member">RED</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;magenta&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1a6f699060902f800f12aaae150f3a708e" kindref="member">MAGENTA</ref>,<ref refid="colors_8h_1a6f699060902f800f12aaae150f3a708e" kindref="member">MAGENTA</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;brown&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1ab2baea56ece91306020afd6d77fd19f9" kindref="member">BROWN</ref>,<ref refid="colors_8h_1ab2baea56ece91306020afd6d77fd19f9" kindref="member">BROWN</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*color<sp/>=<sp/><ref refid="colors_8h_1a587223a5cf6a783335c29a47bec92155" kindref="member">setColor</ref>(<ref refid="colors_8h_1a87b537f5fa5c109d3c05c13d6b18f382" kindref="member">WHITE</ref>,<ref refid="colors_8h_1a87b537f5fa5c109d3c05c13d6b18f382" kindref="member">WHITE</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>videoColor<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getColor(value,<sp/>&amp;color)<sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>&amp;=<sp/>0xF;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*setPointerVisibility(0);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="video__driver_8h_1a3492ebc2f3dbfe60af5c8aac3d49bf6a" kindref="member" tooltip="Set the default video color.">setVideoColor</ref>(color);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="video__driver_8h_1a62a7e9a63ed5e7629312b9cd1599d0f1" kindref="member" tooltip="Updates the hole screen with actual video color all colors will be changed.">updateColor</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="video__driver_8h_1ab59b086c41d506e55aa02729f9916be2" kindref="member" tooltip="Updates all changes made to video buffer into screen.">refreshScreen</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*setPointerVisibility(1);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>Color<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(value);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabStop<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ts<sp/>=<sp/><ref refid="string_8h_1a499020e544a321bb07fd3cb85102db46" kindref="member" tooltip="Transforms the given string to an int.">toInt</ref>(value);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="video__driver_8h_1a97b4260d4d44d5b3742300605cd4d6ea" kindref="member" tooltip="Sets the video tab stop.">setVideoTabStop</ref>(ts)<sp/>!=<sp/>ts<sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>value<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(value);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structproperty_t" kindref="compound" tooltip="The property struct.">propertyT</ref><sp/>properties[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;video-color&quot;</highlight><highlight class="normal">,<sp/>videoColor,<sp/></highlight><highlight class="stringliteral">&quot;Changes<sp/>the<sp/>video<sp/>color.<sp/>Valid<sp/>colors:<sp/>BLUE,<sp/>GREEN,<sp/>CYAN,<sp/>RED<sp/>and<sp/>MAGENTA.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;tab-stop&quot;</highlight><highlight class="normal">,<sp/>tabStop,<sp/></highlight><highlight class="stringliteral">&quot;Changes<sp/>amount<sp/>of<sp/>spaces<sp/>a<sp/>tab<sp/>stop<sp/>inserts<sp/>into<sp/>a<sp/>line.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setProperty(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*property,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>properties[i].<ref refid="structproperty_t_1a6e26a6bc52b703ab5ccbce61991bf447" kindref="member">func</ref><sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(properties[i].name,<sp/>property)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties[i].<ref refid="structproperty_t_1a6e26a6bc52b703ab5ccbce61991bf447" kindref="member">func</ref>(value);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>property<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(property);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printProperties<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;System<sp/>Properties:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>properties[i].<ref refid="structproperty_t_1a6e26a6bc52b703ab5ccbce61991bf447" kindref="member">func</ref><sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;\t<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(properties[i].name);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(properties[i].helpMsg);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>SYSTEM<sp/>PROPERTIES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand_t" kindref="compound" tooltip="The command struct.">commandT</ref><sp/>*<sp/>getCommand<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SHELL<sp/>COMMANDS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>echo(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>logout(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>help(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reboot(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutdown(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mkdir(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printPhrasing(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startTop(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startKill(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPrintA(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPrintB(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startNothing(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPageFault(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>changeSchedule(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startBattleShip(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand_t" kindref="compound" tooltip="The command struct.">commandT</ref><sp/>commands[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">,<sp/>clear,<sp/></highlight><highlight class="stringliteral">&quot;Clears<sp/>Screen.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;echo&quot;</highlight><highlight class="normal">,<sp/>echo,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>the<sp/>arguments<sp/>on<sp/>the<sp/>standard<sp/>output.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;logout&quot;</highlight><highlight class="normal">,<sp/>logout,<sp/></highlight><highlight class="stringliteral">&quot;Terminates<sp/>the<sp/>shell<sp/>application.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/>help,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>this<sp/>list<sp/>of<sp/>commands.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Sets<sp/>a<sp/>system<sp/>property.<sp/>Use:<sp/>set<sp/>property=value.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;reboot&quot;</highlight><highlight class="normal">,<sp/>reboot,<sp/></highlight><highlight class="stringliteral">&quot;Reboots<sp/>the<sp/>system.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;shutdown&quot;</highlight><highlight class="normal">,<sp/>shutdown,<sp/></highlight><highlight class="stringliteral">&quot;Shuts<sp/>the<sp/>system<sp/>down.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mkdir&quot;</highlight><highlight class="normal">,<sp/>mkdir,<sp/></highlight><highlight class="stringliteral">&quot;Makes<sp/>a<sp/>new<sp/>directory.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;print-sysproperties&quot;</highlight><highlight class="normal">,<sp/>printProperties,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>the<sp/>lisf<sp/>of<sp/>system<sp/>properties<sp/>that<sp/>can<sp/>be<sp/>set<sp/>by<sp/>the<sp/>set<sp/>command.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;print-statement&quot;</highlight><highlight class="normal">,<sp/>printPhrasing,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>the<sp/>statment<sp/>of<sp/>the<sp/>project.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">,<sp/>startTop,<sp/></highlight><highlight class="stringliteral">&quot;Runs<sp/>the<sp/>top<sp/>process.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;kill&quot;</highlight><highlight class="normal">,startKill,<sp/></highlight><highlight class="stringliteral">&quot;Takes<sp/>the<sp/>pid<sp/>of<sp/>the<sp/>standar<sp/>input,<sp/>and<sp/>Kill<sp/>the<sp/>process<sp/>associated.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;printA&quot;</highlight><highlight class="normal">,<sp/>startPrintA,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>&apos;A&apos;<sp/>in<sp/>the<sp/>stdout,<sp/>could<sp/>be<sp/>running<sp/>in<sp/>background.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;printB&quot;</highlight><highlight class="normal">,<sp/>startPrintB,<sp/></highlight><highlight class="stringliteral">&quot;Prints<sp/>&apos;B&apos;<sp/>in<sp/>the<sp/>stdout,<sp/>could<sp/>be<sp/>running<sp/>in<sp/>background.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nothing&quot;</highlight><highlight class="normal">,<sp/>startNothing,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>idle<sp/>process,<sp/>could<sp/>be<sp/>running<sp/>in<sp/>background.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;pageFault&quot;</highlight><highlight class="normal">,<sp/>startPageFault,<sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>a<sp/>page<sp/>fault<sp/>exception.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;scheduling&quot;</highlight><highlight class="normal">,<sp/>changeSchedule,<sp/></highlight><highlight class="stringliteral">&quot;Change<sp/>the<sp/>Schedule<sp/>Algorithm,<sp/>if<sp/>it&apos;s<sp/>running<sp/>Round<sp/>Robin,<sp/>it<sp/>changes<sp/>to<sp/>RPG<sp/>and<sp/>viceversa&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;battleship&quot;</highlight><highlight class="normal">,<sp/>startBattleShip,<sp/></highlight><highlight class="stringliteral">&quot;Starts<sp/>Battleship&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printPhrasing(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nObjetivo\n\tRealizar<sp/>un<sp/>programa<sp/>que<sp/>muestre<sp/>algunas<sp/>de<sp/>las<sp/>caracteristicas<sp/>del<sp/>Modo<sp/>protegido<sp/>de<sp/>los<sp/>microprocesadores<sp/>de<sp/>Intel.\n\tEnunciado\n\tEl<sp/>trabajo<sp/>consta<sp/>de<sp/>un<sp/>diskete<sp/>booteable<sp/>con<sp/>GRUB<sp/>instalado,<sp/>el<sp/>cual<sp/>debe<sp/>obtener<sp/>de<sp/>disco<sp/>una<sp/>imagen<sp/>binaria<sp/>que<sp/>sera<sp/>el<sp/>programa<sp/>que<sp/>corra<sp/>en<sp/>Modo<sp/>protegido.\n\tDicho<sp/>programa<sp/>debera<sp/>contener<sp/>lo<sp/>siguiente:\n\t\ta)<sp/>Shell:<sp/>El<sp/>sistema<sp/>debe<sp/>proveer<sp/>al<sp/>usuario<sp/>de<sp/>un<sp/>shell,<sp/>para<sp/>poder<sp/>ejecutar<sp/>comandos.\n\t\tb)<sp/>INT<sp/>80h:<sp/>Crear<sp/>las<sp/>primitivas<sp/>read()<sp/>y<sp/>write()<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;para<sp/>centralizar<sp/>la<sp/>lectura<sp/>y<sp/>la<sp/>escritura<sp/>de<sp/>los<sp/>dispositivos.<sp/>Dichas<sp/>primitivas<sp/>deben<sp/>invocar<sp/>la<sp/>INT<sp/>80h.\n\t\tc)<sp/>Driver<sp/>de<sp/>Mouse:<sp/>El<sp/>programa<sp/>debera<sp/>poder<sp/>manejar<sp/>un<sp/>cursor<sp/>de<sp/>texto<sp/>en<sp/>pantalla.<sp/>Con<sp/>el<sp/>botón<sp/>izquierdo<sp/>del<sp/>Mouse<sp/>presionado<sp/>se<sp/>podra<sp/>seleccionar<sp/>cualquier<sp/>parte<sp/>de<sp/>la<sp/>pantalla<sp/>(copiar)<sp/>y<sp/>con<sp/>el<sp/>boton<sp/>derecho<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;se<sp/>podra<sp/>“pegar”<sp/>lo<sp/>seleccionado<sp/>donde<sp/>se<sp/>encuentre<sp/>el<sp/>cursor<sp/>para<sp/>ingreso<sp/>de<sp/>datos.\n\t\td)<sp/>Salva<sp/>pantalla:<sp/>Por<sp/>línea<sp/>de<sp/>comando<sp/>se<sp/>podra<sp/>programar<sp/>la<sp/>cantidad<sp/>de<sp/>segundos<sp/>en<sp/>la<sp/>que<sp/>se<sp/>activa<sp/>el<sp/>salva<sp/>pantalla.<sp/>El<sp/>mismo<sp/>dejara<sp/>de<sp/>funcionar<sp/>ante<sp/>la<sp/>presión<sp/>de<sp/>una<sp/>tecla<sp/>o<sp/>el<sp/>movimiento<sp/>del<sp/>Mouse.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(msg1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(msg2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(msg3);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mkdir(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;jejejeje...are<sp/>you<sp/>crazy!!!???\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutdown(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>the<sp/>system...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;...oops!!!<sp/>function<sp/>not<sp/>implemented...Push<sp/>the<sp/>power<sp/>button.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reboot(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="system_8h_1ac8c8545f4a29ebb7d3e384467263cf50" kindref="member" tooltip="Reboots the system.">rebootSystem</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ttys_8h_1a6083aac7b79f2adcd3c4d6fbf479f283" kindref="member" tooltip="It clears the stdout of the tty that is in focus.">clearTTYScreen</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ttys_8h_1a77495bf57af4fe0554f55dc4be4a4600" kindref="member" tooltip="It sets the cursor in an specific position of the tty stdout.">setTTYCursorPosition</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>echo<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(args);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>logout<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexDT;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexDT<sp/>=<sp/>getGlobalDataIndex();<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indexDT<sp/>==<sp/>-1){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*el<sp/>pid<sp/>ingresado<sp/>no<sp/>es<sp/>valido<sp/>hay<sp/>que<sp/>salir<sp/>con<sp/>error*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;[logout]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Exiting<sp/>Shell...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[indexDT].<ref refid="structdata_slot_shell_1a6e27f49150e9a14580fb313cc2777e00" kindref="member">status</ref><sp/>=<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a11fd9ca455f92c69c084484d5cd803c2" kindref="member">DEAD</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>help<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>command;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcommand_t" kindref="compound" tooltip="The command struct.">commandT</ref><sp/>*<sp/>cmd;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(command<sp/>=<sp/><ref refid="string_8h_1a623f10afaacb826c45536f4191c18357" kindref="member" tooltip="Gets segments of the given string delimitated by the given tokens.">strtok</ref>(args,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Command<sp/>list:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>commands[i].<ref refid="structcommand_t_1aaadded894dece7b4c2b3d51d18ada303" kindref="member">func</ref><sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(commands[i].command);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(commands[i].helpMsg);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(cmd<sp/>=<sp/>getCommand(command))<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(command);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(cmd-&gt;<ref refid="structcommand_t_1aecae62b0d3cecad6022e749f64cc8a8e" kindref="member">helpMsg</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Command<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>property,<sp/>*<sp/>value;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(property<sp/>=<sp/><ref refid="string_8h_1a623f10afaacb826c45536f4191c18357" kindref="member" tooltip="Gets segments of the given string delimitated by the given tokens.">strtok</ref>(args,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>System<sp/>Property\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(value<sp/>=<sp/><ref refid="string_8h_1a623f10afaacb826c45536f4191c18357" kindref="member" tooltip="Gets segments of the given string delimitated by the given tokens.">strtok</ref>(<ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Invalid<sp/>Property<sp/>Value\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setProperty(property,<sp/>value);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startTop(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/>ownPid;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structprocess__t" kindref="compound" tooltip="The process struct.">process_t</ref><sp/>*<ref refid="bin_8c_1a83e1a7341d63e92cd3d1733f87176a88" kindref="member">processTable</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownPid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processTable<sp/>=<sp/><ref refid="sys_process_8h_1aa1cd2078219adc47ca22033bf86a76be" kindref="member" tooltip="Retrieves the OS process table.">getProcessTable</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1ad4c770f8a29f82d705f3d34839112bd1" kindref="member" tooltip="The maximum amount of process.">MAX_PROCESS</ref><sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(processTable[i].name,<sp/></highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>processTable[i].pid<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;El<sp/>proceso<sp/>top<sp/>ya<sp/>se<sp/>encuentra<sp/>corriendo<sp/>en<sp/>la<sp/>tty<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a049d7c6dddcd2eafdf1349942dbdac88" kindref="member" tooltip="puti function define.">puti</ref>(processTable[i].tty<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bin_8h_1a9795fbee9531f56aeda1376bf9934506" kindref="member" tooltip="This function show what percentage of the microprocessor it is using each process...">top</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Top<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ttys_8h_1a6083aac7b79f2adcd3c4d6fbf479f283" kindref="member" tooltip="It clears the stdout of the tty that is in focus.">clearTTYScreen</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startKill(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="string_8h_1a499020e544a321bb07fd3cb85102db46" kindref="member" tooltip="Transforms the given string to an int.">toInt</ref>(args);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="process_8h_1a650cf0caaaa8b75f653c1c92818d03a4" kindref="member" tooltip="Kills the given pid process.">kill</ref>((<ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref>)pid)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Killing<sp/>process<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(<ref refid="sys_process_8h_1aa1cd2078219adc47ca22033bf86a76be" kindref="member" tooltip="Retrieves the OS process table.">getProcessTable</ref>()[pid].name);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>process<sp/>for<sp/>the<sp/>given<sp/>pid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startBattleShip(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/>ownPid;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownPid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;battleship&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bttlship_8h_1a52e47768a66b91e89d5546a8cb0f168c" kindref="member" tooltip="It&amp;#39;s the main process of the battleship, it generates the whole table and ships...">battleship</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Battleship<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a8984ed6d44c45fc3a93b0c8fd217fab4" kindref="member" tooltip="Sets the pid process priority.">setPriority</ref>(pid,<sp/>4);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clearTTYScreen();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPrintA(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/>ownPid;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownPid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>*args<sp/>==</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>?<sp/><ref refid="defs_8h_1a850b2f07a67b73890889e63fb8a49fda" kindref="member" tooltip="DefineBrief.">BACKGROUND</ref>:<ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;printA&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bin_8h_1a8d6f8ce896cba69a844650449479ead1" kindref="member" tooltip="This function prints infinite A letters.">printA</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/>mode))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>printA<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a8984ed6d44c45fc3a93b0c8fd217fab4" kindref="member" tooltip="Sets the pid process priority.">setPriority</ref>(pid,<sp/>4);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPrintB(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/>ownPid;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownPid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>*args<sp/>==</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>?<sp/><ref refid="defs_8h_1a850b2f07a67b73890889e63fb8a49fda" kindref="member" tooltip="DefineBrief.">BACKGROUND</ref>:<ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;printB&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bin_8h_1a5964c5b2b75cb7dc3c7648afe535fd03" kindref="member" tooltip="This functions prints infinite A letters.">printB</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/>mode))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>printB<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a8984ed6d44c45fc3a93b0c8fd217fab4" kindref="member" tooltip="Sets the pid process priority.">setPriority</ref>(pid,<sp/>2);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startNothing(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid,<sp/>ownPid;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>(*args<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">)<sp/>?<sp/><ref refid="defs_8h_1a850b2f07a67b73890889e63fb8a49fda" kindref="member" tooltip="DefineBrief.">BACKGROUND</ref><sp/>:<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownPid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;nothing&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bin_8h_1a91d6348b48c15f044abee99da6fec6bd" kindref="member" tooltip="This function only consumes the microprocessor.">nothing</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/>mode))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>nothing<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>){</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1aa4f3855e8a226d285a523789a377fe04" kindref="member" tooltip="Sets the tty mode of the given pid process.">setTTYMode</ref>(pid,<sp/><ref refid="defs_8h_1afd70646efe5984e361c17010322a5711" kindref="member" tooltip="DefineBrief.">TTY_CANONICAL</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(ownPid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPageFault(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args){</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pid<sp/>=<sp/><ref refid="process_8h_1a400d6ff57b24d5bec48a1a28ad944081" kindref="member" tooltip="Creates a new process into the system and sets it ready to run. The process will...">createProcess</ref>(</highlight><highlight class="stringliteral">&quot;nothing&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<ref refid="bin_8h_1ab8d39c86e0f803f0816e787e36c99bd1" kindref="member" tooltip="This function generates a page fault exception.">pageFault</ref>,<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/><ref refid="defs_8h_1a2a375179c125d0867430c6778c343b6f" kindref="member" tooltip="DefineBrief.">FOREGROUND</ref>))<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>nothing<sp/>could<sp/>not<sp/>be<sp/>created.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1a750680863e18ddefd3f3eae7d04cbe96" kindref="member" tooltip="This function blocks the calling process until the given pid child returns.">waitpid</ref>(pid,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>changeSchedule(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(pid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schedule_8h_1a70a005f86f52baf57148ad4074e37f2c" kindref="member" tooltip="This function changes the Algorithm variable, if the current algorithm is RoundRobin...">changeAlgorithimSchedule</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(pid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>SHELL<sp/>COMMANDS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand_t" kindref="compound" tooltip="The command struct.">commandT</ref><sp/>*<sp/>getCommand<sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>command<sp/>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>commands[i].<ref refid="structcommand_t_1aaadded894dece7b4c2b3d51d18ada303" kindref="member">func</ref><sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member" tooltip="The strcmp() function compares the two strings s1 and s2.">strcmp</ref>(commands[i].command,<sp/>command)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(commands[i]);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printPrompt()</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(prompt);</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseCommand<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcommand_t" kindref="compound" tooltip="The command struct.">commandT</ref><sp/>*<sp/>cmd;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,<sp/>*args;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexDT;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexDT<sp/>=<sp/>getGlobalDataIndex();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indexDT<sp/>==<sp/>-1){</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*EL<sp/>pid<sp/>ingresado<sp/>es<sp/>invalido,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a568f021a83b2c22e1e700d12559d660a" kindref="member" tooltip="putchar function define.">putchar</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tableDataShell[indexDT].index<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printPrompt();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[indexDT].<ref refid="structdata_slot_shell_1ae8b496c8abc98d4ba2e5f3d7992c93b7" kindref="member">lineBuffer</ref>[tableDataShell[indexDT].<ref refid="structdata_slot_shell_1a750b5d744c39a06bfb13e6eb010e35d0" kindref="member">index</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1ad80e936d8fe6ed29ad12bb760536ec1d" kindref="member" tooltip="Copies the source Null terminated string to the dst string.">strcpy</ref>(tableDataShell[indexDT].enteredCommand,<sp/>tableDataShell[indexDT].lineBuffer);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/><ref refid="string_8h_1a623f10afaacb826c45536f4191c18357" kindref="member" tooltip="Gets segments of the given string delimitated by the given tokens.">strtok</ref>(tableDataShell[indexDT].enteredCommand,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/><ref refid="string_8h_1a623f10afaacb826c45536f4191c18357" kindref="member" tooltip="Gets segments of the given string delimitated by the given tokens.">strtok</ref>(<ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(cmd<sp/>=<sp/>getCommand(command))<sp/>!=<sp/><ref refid="defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="NULL pointer definition.">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd-&gt;<ref refid="structcommand_t_1aaadded894dece7b4c2b3d51d18ada303" kindref="member">func</ref>(args);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;shell:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(tableDataShell[indexDT].lineBuffer);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;:<sp/>Invalid<sp/>Command\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[indexDT].<ref refid="structdata_slot_shell_1a750b5d744c39a06bfb13e6eb010e35d0" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tableDataShell[indexDT].status<sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref><sp/>)<sp/>printPrompt();</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="shell_8c_1a225cd0af1ed8359b2973453e2a22a94b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8h_1a225cd0af1ed8359b2973453e2a22a94b" kindref="member" tooltip="The function that runs the shell application.">shell</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uc;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexDT,<sp/>status;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab612a3a4eb0e2ced1e55ecff76260458" kindref="member" tooltip="pid_t typedef.">pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/><ref refid="process_8h_1ac61b207337ca21b3b309593fd1a0cb82" kindref="member" tooltip="Retrieves the calling process&amp;#39; pid.">getpid</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(pid,<sp/><ref refid="defs_8h_1a7ae1ae649327b67ce210e47ea1ed07dc" kindref="member" tooltip="DefineBrief.">ATOMIC</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>initDataShell();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="process_8h_1ab5a4ab42ad24ecad7cb6354c4b5f7587" kindref="member" tooltip="Sets the given pid process&amp;#39; atomicity.">setProcessAtomicity</ref>(pid,<sp/><ref refid="defs_8h_1a33d80cf420a3739faa00760673eee7db" kindref="member" tooltip="DefineBrief.">UNATOMIC</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>==<sp/><ref refid="defs_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="DefineBrief.">FALSE</ref>){</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexDT<sp/>=<sp/>getGlobalDataIndex();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;Starting<sp/>Shell<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1a049d7c6dddcd2eafdf1349942dbdac88" kindref="member" tooltip="puti function define.">puti</ref>(<ref refid="stdio_8h_1ab7f4e33be6189512770d5aaa43bd03fe" kindref="member">runningProcess</ref>-&gt;<ref refid="structprocess__t_1af7f414d19241988592fad1bc470e8761" kindref="member">tty</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;\tEnter<sp/>&apos;help&apos;<sp/>for<sp/>a<sp/>list<sp/>of<sp/>commands.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdio_8h_1ab1188d451a7325a10703cbd0f953f31e" kindref="member" tooltip="puts function define.">puts</ref>(</highlight><highlight class="stringliteral">&quot;\tEnter<sp/>&apos;help<sp/>cmd&apos;<sp/>for<sp/>the<sp/>help<sp/>message<sp/>of<sp/>&apos;cmd&apos;.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printPrompt();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tableDataShell[indexDT].status<sp/>==<sp/><ref refid="types_8h_1a94b1da2e055fff4d143aa6aa891f79a9a1061be6c3fb88d32829cba6f6b2be304" kindref="member">RUNNING</ref>){</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="stdio_8h_1ac0484b3e3a4d8361d91c3322440f9195" kindref="member" tooltip="getchar function define.">getchar</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>c<sp/>==<sp/><ref refid="stdio_8h_1a59adc4c82490d23754cd39c2fb99b0da" kindref="member">EOF</ref><sp/>){</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;hlt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sys_process_8h_1a2cd7c071907edcb9f8151c8519d4b27e" kindref="member" tooltip="Blocks the calling process until it&amp;#39;s tty is signaled.">waitTty</ref>(<ref refid="process_8h_1a109666f73149f2d6bbead68763749fbd" kindref="member" tooltip="Retrieves the given process pid&amp;#39;s tty.">getTty</ref>(pid));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>uc<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseCommand();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tableDataShell[indexDT].index<sp/>&lt;<sp/><ref refid="config_8h_1a842ed03f27719bc87666bfd1f75415b8" kindref="member" tooltip="The length of the shell buffer.">MAX_LINE</ref><sp/><sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableDataShell[indexDT].<ref refid="structdata_slot_shell_1ae8b496c8abc98d4ba2e5f3d7992c93b7" kindref="member">lineBuffer</ref>[tableDataShell[indexDT].<ref refid="structdata_slot_shell_1a750b5d744c39a06bfb13e6eb010e35d0" kindref="member">index</ref>++]<sp/>=<sp/>uc;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tableDataShell[indexDT].<ref refid="structdata_slot_shell_1a6e27f49150e9a14580fb313cc2777e00" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Luciano/Desktop/flying-high/src/shell.c"/>
  </compounddef>
</doxygen>
